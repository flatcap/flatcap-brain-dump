ellipsis
	mutt_error
	mutt_message
	mutt_debug

#defines → enums?

make AUTHORS -- which repo did this?

Main sidebar repos
	Ismail
	Debian
	Gentoo 24r1
	Suse 24 2014/14/12 + sidebar colour
	Kzak
	Terry

Ultrix dead '95
	ask debian devs for list of working arches

init all vars
lots of static fns → _fn_name?
^L in source
Doxygen comments

Vim-style
	:set     → show all modified vars
	:set all → all all vars
	:unset === set novar

strict compilation flags; c++ compiler?
unnamed args in function prototypes
spurious \ line endings (in middle of if!)

────────────────────────────────────────────────────────────────────────────────

Notifications

Window changes
	hidden	no params
	visible	rect
	resize	rect
	focus	in/out
colours changes
keypress	key, no params
config change	key, value
		ALL, no params
mail status change
	read/unread/flagged/deleted/edited
	MESSAGE_ID, flags
mailbox change
	new/deleted
	new mail, deleted mail, flagged mail, etc
connection status
	connected
	disconnected
quitting - any use to anyone?
selected mail changed
selected mailbox changed

wrapping →
	extra char at beginning of line "+"
	extra char at end of line "<-/"
wrap at:
	char
	word (whitespace)
	clause (punctuation)
	sentence (.!?)
No wrap →
	extra char at end of line ">"

────────────────────────────────────────────────────────────────────────────────

send escape sequence to clear terminal title when mutt closes
init.h struct option_t needs enums for types and union for data
timer notifications, e.g.
	highlight something for three seconds, then return to normal
https://github.com/N8Fear/mutt-kz
	some initialisations improvements
	some bug fixes

widestring folder names
	highlight broken (wrong width)
	are truncated because 3 bytes is only 2 spaces
	wcwidth() / wcswidth()
<stdbool.h> in sidebar.c
sidebar_delim
	change name to sidebar_dividers
	first (wide) character is vertical divider
		between sidebar and index/pager
	second (wide) character is horizontal divider
		between different mailboxes (within the sidebar)
sidebar_color
	background color for entire sidebar region?

need attention
	draw_sidebar
	OPTSIDEBARSORT
		sorts by real path, not visible name

check for unused #include
sort includes <>, ""

sort init.h, globals.h, etc

kill one-line if's:
	if (adsfa) command;

~50 lines of commented out source
	/* ... ; */

possible to fix sidebar sort order to respect hierarchy/indentation?

gentoo sidebar_format
	set sidebar_format="%B %* %S%?N?(%N)?%?F?[%F]?"

sidebar_width = auto (size to contents)

fix? whitelist to use +dir notation?
	relative to $folder
	what about multiple folders?

test sidebar width if fixed string breaks bounds
	set sidebar_width=10
	set sidebar_format="ABCDEFGHIJKLMNOPQRSTUVWXYZ"

:quit / :q command for vi users

cleanup:
	docs - in code and html
	comments
	whitespace
		unfold lines
		indent
		rebracket
		refold
	sort options in
		init.h
		globals.h
		functions.h
		switches

when a two-cell character is truncated by 1 it needs to be space padded to maintain alignment

check all string config vars are NONULL'd

sorting
	if displaying full paths:
		sort by display name
		sort by underlying name
	if displaying indented paths:
		sort by top-level names, then children

New only -- include structure (empty dirs) to keep hierarchy
	mail (0)
	  fruit (0)
	    apple (1)

if ((!visible) || (size == 0))
	make sure no work is done

trim trailing slash from mailboxes, folder
	shouldn't be displayed

on Terry's update notify authors & list & kz

check all headers #include requisites for compilation

FOREVER, rather than while(1)

check ALL pointers

sb_set_curbuffy
sb_set_buffystats
	should probably both return BOOL on success/failure

sb_set_update_time should return the timestamp

sb_draw should return success of drawing
	possible given all the callbacks, etc?

quiet config option -- don't whine about unknown config options

sensible retvals on functions

command
	sidebar_toggle_visible
	sidebar_toggle → sidebar_toggle_virtual

────────────────────────────────────────────────────────────────────────────────
missing patches
	colour divider
	sort
	lightweight
	fmemopen

DBUS plugin -- to do what?
	notify out
	take input to do what?

repaint if:
	size changes
	position changes

Changed posn notification ONLY
	e.g. sidebar has swapped sides
could imply that cached data may be OK to reuse
	e.g. don't need to call calc_boundaries

Notify (Box*, Rect old, Rect new, flags)
Flags:
	too small to render
	changed visibility

Changelog, etc for sidebar

────────────────────────────────────────────────────────────────────────────────

Sidebar actions (that might precipitate change):
	line-up
	line-down
	page-up
	page-down
	set buffy from browser
	change sort order
	add mailbox
	delete mailbox
	change mailbox's sort criteria (e.g. flag an email, a flagged-sorted mailbox)
	resize window
	hide sidebar
	show sidebar
	open folder

────────────────────────────────────────────────────────────────────────────────

draw sidebar
	assumes position/size
	move due to STATUSONTOP, HELP
	check of show/hidden has changed & refresh numbers if nec
	if hidden, do nothing
	sanity check settings
	draw divider (3 chars!)
for all buffers
	set colour
	move
	gen displayname (need to cache this)
		name, bytelen, screenlen
		what about config changes
			including sort order
	make sidebar_entry
fill remaining lines with blanks

Start; Incoming; Inbox open; current = Incoming; sort → cur is offscreen, boundaries lost

────────────────────────────────────────────────────────────────────────────────

History
	:set sidebar<UP>
	should match only 'set sidebar.*'

calc_boundaries -> BOOL = repaint?
tree chars for sidebar hierarchy?
sidebar: how many colours?
CLEARWIN takes a *y* param, not x, likewise sidebar variant

give credit where it's due -- hg author vs committer?
on release
	n commits by m users (p new users)
	list of new
	list of returnees

need sensible colour scheme, by default, otherwise highlight won't be visible!
parse_mailboxes -> notify sidebar => know if anything's invalidated TBCH
can I use realpath(), mutt_expand_path() for anything?

Unmailbox * ⇒  many notifications followed by ONE redraw

can the real status bar display any sidebar fields?
	why not?
	how can they be integrated?
ambiguity in struct CONTEXT
	->changed is a BOOL
	->deleted is a number
confusing tests like
	if (!x->deleted)
	imply deleted is a BOOL

most options are "short" limited to +/- 32767
mutt-sidebar.vim (contrib dir?)
":map <F11>" shows mapping? or bind, or macro
set/unset/toggle?  invVARNAME
option - don't sort inbox -- defined how?
separate modules -- sidebar, index, pager, help? -- each with
	init()
	notify()
	close()
	config()
sidebar_wrap=search,motion (separate bools for simplicity?)

sidebar_sort is an enum - on set error, it could show the valid values
quadopt can give help too -- important since varname gives no clue about type
BUG: set sidebar_width=0  -- now impossible to *re*show the sidebar
break up init.h, globals.h, functions.h
	init.h option DELEGATE, prefix "sidebar_", callback?
init() on module calls add_options()
	=> sb_opts refer to sb-private vars in sidebar.c
option breakup depends on lots of notifications
Where are OPTSIDEBAR* used outside sidebar.c
	curs_main.c, buffy.c, mh.c
any use from calling sb_init(), sb_shutdown() from main()?
	probably not yet
TEST: deleting/adding entries on/off-screen
	are our indexes correctly maintained?
TEST: refresh limit -- changing vars from another mutt
TEST: (re-)sorting by changing sort criteria from another mutt
Distinguish between movement and search wrap?
	movement - next/prev (1 line), page up/down
	search - find next/prev new
Readme.sidebar, Changelog.sidebar?
does imap folder add/rm trigger our sb_notify?
Config change notifications
	fn (name, old_val, new_val)
how would function delegation work?
	init() -> add_functions (name, callback)
	the callbacks would need to be able to manipulate mutt objects
Register functions & callback
make sure anything we need is exposed
if we hide our globals, give then all accessor functions get/set_VAR()
how do I generate main docs -- insert sidebar section
init would need to register new sort methods
fix odd buffy_{mbox,mh}_update function

get rid of REDRAW_SIDEBAR, or use it effectively

test conditional compilation
	pop imap sidebar slang gpgme debug
	smime pgp nls iconv hcache smtp
	ssl gss idn
without
	gdbm qdbm tokyocabinet wc-funcs

can I internalise sb_should_refresh()
often call:
	buffy_mbox_update
	buffy_maildir_update
	mh_buffy_update
what if there are multiple top-levels?
should the LastRefresh var be on the top-level?

demo setup - lots of files in:
	local mbox
	local mh dirs
	IMAP mbox
	IMAP mh dirs
	POP mbox
	POP mh dirs

possible to eliminate sb_get_highlight?
	only called on OP_SIDEBAR_OPEN
	in curs_main.c

sidebar_delim -> sidebar_divider_char
sidebar_xy -> sidebar_x_y

