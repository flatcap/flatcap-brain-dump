feature: live filter index as you type, cf sidebar matcher

<R2robot> w3m -dump -s -o display_link=yes -o display_link_number=yes -o decode_url=yes -T text/html
<jindraj> elinks -dump -dump-charset utf-8 -dump-width ${COLUMNS:-80} %s

version "ssl" missing ("gnutls" is there)

use GoF terminology
	notifier/listener -> subject/observer

user question:
	is there a way to protect an email from the 'd' delete command?
	$flag_safe

set of fake variables $THIS or $THIS_EMAIL
	representing the current email
		what about multiple tags?
	current selection: search of limit, e.g. ~f $THIS.from
	what about multiple addresses, e.g. CC:
		`~f $THIS.cc` -> `(~f andy | ~f bert | ~f charlie)`

a option to remove empty header fields from the email
	when composing with $edit_headers set
	no more "^Bcc: $", etc
alternate ways: delete
	autocmd BufRead ~/.cache/mutt/neomutt-* 1,/^$/g/^\v(Reply-To|Bcc): *$/d
hide
	:syntax match hide_header "^\v(cc|bcc|reply-to): *$" containedin=mailHeaderKey
	:highlight hide_header guifg=#606060

ellipsise long mailbox names in the sidebar
	how?  formatter doesn't know type

3-way split display for index, aliases, pgp key list
	does each need domain-specific config
	{index,pgp,alias}_pager_lines

feature: live filter index as you type, cf sidebar matcher

changing the option strings to the form
	(1a)pple, (2b)anana, (3c)herry
	1(a)pple, 2(b)anana, 3(c)herry
means the translators would be free to reorder the options
and we could eliminate the "abc" letter string
this doesn't look so good
	app1(l)e, bana2(n)a, che3(r)ry
perhaps
	app(1l)e, bana(2n)a, che(3r)ry
or clearer still
	(1:a)pple, (2:b)anana, (3:c)herry
	app(1:l)e, bana(2:n)a, che(3:r)ry
the numbers could even be omitted
if the translated string matches the order of the original

move temp file into for loop in nntp_fetch_headers()?
	nntp_fetch_headers()
	parse_overview_line()
	mutt_file_mkstemp()

gfx repo upload screenshots, readmes in dirs

list autosetup release/commit hash visibly
	(for downstream packagers)

body.h header.h (and others)
	Change LOFF_T to long in headers
	(doesn't require config.h)

<gahr> drafts is still bogus:
	i) compose
	ii) save to drafts
	iii) resume
	iv) send
	v) mail is dispatched
	inbox is unusable (failed to open message)

mbox adata.append should use Mailbox.append

Do Mailboxes need an open context
	thin shim over M
	hash instance flags, e.g. append
Do Views deal with M or MI (instance)?
	MI: might need access to flags

use SPDX headers?

segfault - flush log (nec?)
	log "segfault" & flush?

standardise naming "folder" vs "mailbox" ∀ docs

does doc/makedoc.c need updating for OpSummary?

imap browser needs way to mark subscribed folders

with split views might there be multiple focussed windows?
	pager1, pagerbar1
	pager2, pagerbar2
	different pagers might mean different Mailboxes
	=> statusbar1, statusbar2
parent window starts with (A,M), displays (index, pager, status) from it

use status bar/pager bar to show focus
	like vim's StatusLine{,NC} highlighting
	what about the sidebar?
	background colour change?  #101010 / #e0e0e0

User-Agent config from bool to expando?

nntp://nntp.lore.kernel.org/org.kernel.vger.linux-kernel

reset screen on segfault?
	useful when debugging
	especially for AddressSanitizer

flags
	missing 'rights' in ImapAccountData Mailbox Smtp

tmp dir for emails
	use maildir
	mbox wants to write Status: R
	check creation of dirs carefully
		so race conditions not possible

new cache config
	cache_dir
	db_per_folder? (for headers)
	put header cache in maildir's 'tmp' dir?  dodgy?
	cache hierarchy: dots or slashes?
	name translations like offlineimap?

are $spoolfile, $mbox, mbox-hook needed?

copr add Bug URL: to spec file
	drop 'group'

add issue templates for
	'easy' task
	'questions to dev'

change Score list to use STAILQ

add screenshot to test-render repo

pin github 'help-wanted' issues
	labels aren't visible
	need [HELP-WANTED] ?

shield add 'commits/month' (~50), 2K/year
	https://img.shields.io/github/commit-activity/ XXX /neomutt/neomutt.svg?style=plastic
	XXX = w/m/y

F1 or ? on ANY question -> context sensitive help
	link to guide
	explanation of options

how many questions would be better as tri-states?
	yes/no/cancel (escape/ctrl-g)

mentoring: define the easy/medium/hard tasks
	in terms of what you need to know to get started
	how much help will be offered
	skills like C, revision control, github, compiling, irc, mailing list
	link to helper docs

open() on open M does what?  sync()
	can't tear down M, might be other users (views)
	want to force an update, though
all updates - if they fail, try not to change M, just return -1
if conn lost, then fail, errmsg, then ??? reconnect after (timeout) or stop?
	next check_stats_interval, will try to reconnect. YES
	-1 failed => try again
	-99 fatal => stop, user must re-open -> flag?
	no fatal, for now?  make r/o if nec, ret -1
ctx_open() vs ctx_wrap() - keeps +1 refcount on M
	-1 on ctx_free()
	kill open, mbox_open() then wrap

mxapi retval -99 fatal => close and reopen
eliminate mxapi calls in BEs?  helpers?  wrappers?

eliminate context from MXAPI, mx.c -> context.c
	wrappers ctx_open(), etc
	move {mx,mailbox,account}.{c,h} to mx/
	deps mutt, email
fix postpone, trash, etc

update wiki for new hard/medium/easy, update roadmap

all mx_X() functions to mailbox_X()? mx_X() for mxapi only?
	what about wrappers - i.e. most of them?

'Folder' limits the independence of mailbox.c
	limited to parse_mailboxes()?

after release
	priority to bug-fixes, tidying
	after that, help2, contrib (e.g. colourschemes)
	so that others can help us

path_canon
	check that Folder, LastFolder, etc exist before using them
	or, force set them at startup

merge mailbox.c and mx.c?
	now that there aren't any deps
	may need to move parse_(un)mailboxes out
	no? mailbox.c for Mailbox-y things, mx.c for mxapi stuff

:verbose set/color/etc
	show when/who last set that variable/color/etc
	debug/devel only?

RE-opening mailbox
	postpone, trash, edit msg, send message (fcc ^)
	all suffer from dead mailbox ptr

BUG: tag-prefix doesn't work with # (break-thread)

Issue template for DEV release
	version (commit hash)
	backtrace
	actions

data type INTERVAL, numeric
	accepts 1s (sec), 1h (hour), etc
	displayed as?:
		1h
		3600
		3600 # 1 hour

mx_mbox_open -- force type?
	arg 0 => probe
	'n' == MBOX, etc

split up opcodes by action and detail (sub-action)
	18:03 <adray> You know how we define virtual-mailboxes as "MUTT_VIRTUAL | MUTT_NAMED". Would it be possible to do the same for opcodes? So instead 
		of OP_MAIN_VFOLDER_FROM_QUERY_READONLY, it could be OP_MAIN_VFOLDER_FROM_QUERY | OP_READONLY?
	18:04 <adray> (this also ties into your OP_DELETE code, possible to do OP_ATTACHMENT | OP_DELETE)
	18:06 <flatcap> currently, they're an enumeration
	18:07 <flatcap> I wonder how many combinations would make sense.  how many we'd need to make it pay off
	18:10 <flatcap> hmm... quite a few
	18:10 <flatcap> all the SEARCH_X could become SEARCH | X

format strings have a list of
	[ callback_fn, data ]
	use this to split up deps
	GUI could have [ X, ctx ]
	reducing deps of mutt_expando_format()

icommand swap back (err -> -2)
	MUTT_CMD_ERROR   = -1,
	MUTT_CMD_WARNING = -2,
	need to check/fix all callers

use help bar for menu breadcrumbs
	compose, attach email, view attachment
	stacked menus

have lambda function to add Emails to an EmailList
	bool is_tagged(Email);

help log level
	for each mutt_error/warning
	also log a link to the relevant help page
	maybe not visible on screen (one line)
	and not logged, but visible in <show-log-messages> window

context
	maildir_update_tables no longer used

∀ oldx = x; fn(); x = oldx;
	parameterise (x) (e.g. Sort)
	i.e. find functions using global/config variables

objects must have X_new()/X_free() pair, or neither
	check existing
	51 X_new()
	55 X_free()
	148 struct
	292 [cm]alloc
	find/distinguish between
		struct - simple, data
		object - complex, actions
	data still needs free for ptrs
	too simplistic?

reduce contributors to 6 months?
split authors at 6 months? and 'others'
	split at 3 months?
	call recent *active* developers
	change at release time

we have A-specific config
	A-specific commands and hooks too?

command to switch account - multi-selection list?  menu?

change pager for <show-log-messages> to start at end of file

nntp
	nntp:// or news:// ?

.desktop for nntp:// -> neomutt

factor out the code for command "mailboxes"
	so that imap/nntp don't have to create a string
	"mailboxes QUOTED-NAME" just to have it parsed and de-quoted

create synonym <move-message> for <save-message>?

is smtp a BE?
	write-only mailbox
	auth, connection
	definitely need an smtp *dir* and tidier API for sending
	encapsulate vars in dir

help mailbox
	option to autoopen all images?
	or cursor right on link
	when composing help update, add header with filename, commit hash if poss

reddit mailbox backend?
	see rtv project (python, curses)

rename storage globals to match the neomutt commands, e.g.
	UserHeader -> MyHdr
	or GlobalListMyHdr?

does tree layout of M -> a dummy root M? ∀ BE? probably
	is "/" the root?
	is "INBOX" the root?
	where does "INBOX" live?
users won't want M under INBOX

sileht/imap LONGSTRING -> PATH_MAX * 7
	comments for MData

use travis on [master] to update/deploy to gitlab?

rule for BE only new M if A and MData AND AData full set

Broken?
	FCC + $record = ^

deprecate imap_logout_all
	create <logout>, tie into mxapi
	or <close-mailbox> for imap/nntp
	forcibly break connection
	free resources?

get 'build' script to log commit hash
	simplify "git build"

pop: add "neomutt -z" support?

timeout hook ∀ BE?

ctrl-C ∀ BE ∀ mxapi functions

how does reply_regex fit into index and replying?

maintain stable numbering in the index
	(mailx does this)
	each email is given a sequential number
	new emails get a higher number
	deleted emails' numbers aren't reused
	what happens if the list is resorted?
		numbers end up randomised!
	what about patterns for message numbers
		ignore missing?
		what about -5,.
		find 5 messages, regardless of number?

connect to server using openssl
	openssl s_client -connect 10.8.0.1:993
	then use imap commands
	a1 login USERNAME PASSWORD

login problems: help
	try imap://username@imap.provider.com
	try imap://username@provider.com@imap.provider.com

some MxOps are compulsory, some are always implemented
	drop checks for these?
	what about if (adata) assume free_adata() exists?

fedora build docs
	missing for `--everything` build
	lua-devel, db-devel, gdbm-devel, qdbm-devel, make, libidn2-devel
	ctags, w3m, doxygen, ccache

try alternate imap folder separators, e.g. | :
sizeof(Mailbox) = 8392
	2*4K (paths) + 200 bytes

browser
	changing sort doesn't force redraw

trap more signals?
	cleanup files (not the partial emails) on exit
	e.g. attachments

Quoting
	list of special items: $var, $VAR, \n, etc
	have flags for each
	literal backslash \\
	behaviour of each unquoted, and each single quote type
	then all pairs: '"X"' or "'X'", etc
	single, double, backtick
		'X', "X", `X`
		'"X"', '`X`', "'X'", "`X`", `'X'`, `"X"`
	triple?  a lot of processing
	what about unicode curly quotes?

no pattern to search by label (or regex)
when checking for new mail, distinguish local from remote (cheap from costly)?
attach style sheet to email - mutt color commands - email-specific

announce <named-mailboxes> on dev ml

imap A has Config:
	"user" inherited from "imap_user"
	"imap_user" synonym for "A:user"
∀ imap config, setup synonyms without "imap_" ?
	what does dump display?  tidy version or canonical?

validators interfere with doc gen (manual.xml)

revamp format string expandos (2018-10-12)
	<darnir> But on a more serious note, how about printf style format strings, with modifiers?
	<flatcap> they already accept %4.4s type modifiers, so it's a bit tricky to fit anything else in
	<flatcap> the alternative is to steal back %{} and have %{name} -- it gets a bit verbose, but it's much clearer
	<darnir> I like that
	<darnir> It's a config file. I never mind things that are verbose in there
	<flatcap> it might be possible to transition without causing trouble...
	<flatcap> %{} is a date specifier, but if we check the contents for our magic words first
	<darnir> With the verbose %{} ones. Yeah, that should be doable.
	<darnir> I have a suggestion, but it depends on how willing you are to deprecate old syntax
	<darnir> %{option-name:optional fmt string}
	<darnir> And in a year or so, make the %{fmt} syntax disappear
	<flatcap> so %{desc:.40} description limited to 40 chars
	<flatcap> I like the self-contained-ness of it
	<darnir> I like that as well

deprecated config - default value is help string
	what about synonyms that will be deprecated?  same?  yes (ish)

index_format expandos for "Waiting for info"? hourglass?
libmx - no curses - what would be in it?

define config *functions* - named config scripts
	perhaps named f-USERSPEC -> bind <f-userspec>

custom help bar text, like vim's tab bar, status bar -> lua?

option for folder auto-discovery
	<mailboxes> everything server has
	or all dirs and subdirs
	make that the default behaviour?
	unless <mailboxes> performed or check_subscribed set

new repos:
	disable issues
	protect master
	add readme
	add license
	archive

unify naming of conn_*() sock_*() functions

nntp allow bare host urls
	nntp://news.host.com  (no trailing slash)

M - messages menu
	show name of debug file in status bar
	no point -- the pager automatically deletes it

create 'let' command for maths?
	like set for numeric
	confusing?  probably?

index_sort = date,thread:rev-date?

<thread-SCOPE>ACTION like ;d (tag-delete)
	<thread-latest><display-message>
	<thread-first-new><display-message>
	only for threaded & collapsed

fake typedef for qsort functions?
	already have sort_t -- qsort compatible?

maildir:
	readdir()
	set errno to 0 first
	check after and perror if nec

check [release]
	config check
	one of regexes is missing '\' before a '+'
config: set tests missing \ -- am *I* mistaken about need?  unnec?

help://
	add doxy pages

twitter "Re:" -> default config?

users
	set flp=^\\(Cc\\\|To\\\|From\\\|Bcc\\\|Subject\\\|Reply-To\\):
	extend to all common headers
	include vim's default settings
	need to set 'ai'
	formatoptions needs 'n'

create a coding 'charter'
	what's expected
		from you
		from us

status/pager format
	collapse the status bar and command line?
	what about error messages?  timed?

option to mailcap-view objects from the browser (on attach)

Display help mailbox if no others are 'mailboxes'd

Easy: postpone question to three-way
	(S)ave, (D)elete, (C)ancel

Disable some default keybindings?
	e.g. <print>, mailing list functions
	or have sample config rc snippets
	or change to more key-chords
		tag-X, tag-Y, tag-Z
	become
		tx, ty, tz
	snippets in /etc/neomutt/*.rc?
	/usr/share/neomutt/snippets/

have a 'theme' command for use in restricted situations, like
	neomutt-tutor

BUG: message says 'purge' but actually deletes (to trash)
	$trash set, 'd' Delete, vs 'D' purge
	then leave folder to commit

browser
	need clearer feedback *what* we're looking at
	IMAP mailboxes, IMAP directory, local directory
	and clearer ways to swap between the choices

megabuild
	combine "git build" and parallel
	use git commit range + clist
	nested build dirs

smime_timeout missing LNUM

magic "alias" mailbox stored on server
	multiple emails
	subject determines how it's processed
	signed for safety

if user's sendmail fails, notify the user

difference between Body and Attachment
	which members are used for which?

need unaccount [name|*]
update roadmap page
my first PR page
README donate

convert mutt_expando_format() and family to use intptr_t

email
	move 'ignore' code to regex? (replacelist)

neolog vimrc, 'set wrap linebreak showbreak=\ \ \ '

create custom error functions, that do the domain-specfic lookup, e.g.
	mutt_regex_error
	mutt_imap_error (exists)

mutt_perror_debug makes two message calls
	is the debug one needed?

add "I'm a developer" issue template
	make them work harder

devel guide: "how to bisect"

what's the difference between
	bool address_uses_unicode(const char *a)
	bool addresses_use_unicode(const struct Address *a)

param order differs from other functions
	make_reference_headers()

bug
	can't encrypt-to-self if original email isn't encrypted

copr use idn2 & gpgme

packagers
	gpgme dep?  enable by default
	deprecate old ssl/tls versions

hcache lazy_malloc/realloc
	who else uses similar scheme, Buffer?
	move to library
	investigate the 129 reallocs in neomutt

struct Message
	where does this fit into the email?

docs
	convert from utf-8 to local $charset
	header for 404 page - do-not-display?
	accept web addresses http:// and do the right thing
		cli too?
	yaml authors: could get long (envelope->from)
	improve this page, use {{ page.path }}

issue template
	vunerability : email owner directly

web key directory for gpg keys for neomutt

nntp all message ranges should be checked against the context

Header data #ifdefs
	drop POP/NNTP #ifdefs for libemail
	use data for maildir instead of maildir_flags

web
	is layout: header nec?
	they all use the same one
		except post

html email
	I use this: text/html; elinks -dump 1 -config-dir ~/.mutt/ %s; nametemplate=%s.html; copiousoutput
	with this elinks.conf http://thorsten-wissmann.de/p/6207785e4784977712fc213a687ad033
	with this, the urls are footnotes at the end and so the rarely wrap

man neomutt should tell a beginner everything they need to know
	or where to look for more

flags variables/members -> unsigned
	every member commented with sample flag name

separate parsing from pre-processing step
	standard library routines to parse
		list the quoting characters
		flags for escaping, etc
	custom bits to perform shell stuff?

have a system for 'tainting' variables
	the sensitive variables are tainted
	if I 'set my_var = $imap_pass' then my_var is tainted too
	tainted variables will not
		be displayed on screen
		exported/expanded for external programs (including lua)

rename members
	bools to is_x, has_x, etc
	amounts to num_x, nr_x, etc

move a perror to mutt_mkstemp()?
	logging in libmutt -> gettext() etc

test link() / linkat() on a deleted FILE*
	limited to the current device

bug?
	attach a file
	<get-attach> but mailcap doesn't have matching entry for (text/plain)
	atatchment doesn't get deleted after the email is sent

how do you send encrypted/signed email from the command line?

create a reply flowchart
	who from
	who to
	etc

calc libmutt test coverage as %age
	use coveralls?

expand reviewers to all frequent committers?

put docs for [travis], [release], [translate] into original commit message
	add README.md to [management] for each

add lua test to release
	neomutt -B -F contrib/lua/test_lua-api_runner.neomuttrc

create specific README.md in each top-level neomutt branch

pre-release: sync acutest and autosetup?

mailing lists
	a general command for lists
	"Current list: (s)ubscribe, (u)nsubscribe, (p)ost"

release notes
	add commit count?
	to show our busyness

option for insertable horizontal divider line in the index
	(simply underline (or overline) one line of text)
	configurable positions, e.g
	this week | this month | old stuff
	config: 1w:1m -> three sections
	might interfere with syntax highlighting

(neo)mutt can't read maildir emails
	it'd be useful to:
	neomutt -f maildir/cur/email:2,S
	subclass of MUTT_MAILDIR?

use neomutt as a viewer/pager for emails
	like less(1)
	would require a crazy amount of code changes

remove umask code from mh.c
	redundant due to `umask(077)` in main.c

build script
	if clang else gcc
	optional compiler flags

State object -> library
	excluding AttachmentMarker

use packagers' team to announce build changes

58 mutt_mktemp in ncrypt/

shield for freenode/irc --- silver searcher

need (vim-like) foldopen option for search matches
	what else should open a fold?
	jump?

post conceal vim to dev/prog-tips page

setup function to make aliases

uniq history ∀ *.po msgid for both (neo)mutt

relpage on web
	doc release notifications
	web/twitter/etc
	https://github.com/neomutt/neomutt/releases.atom

when we have Account objects and all imap connections are live
	how often are accounts updated?
	lower frequency for the non-current account?
	options for equal-freq, half-freq, off?
	just update the spooldir?
	keepalive option?
	disconnect completely?

New/updated primitives:
	Path
		filesystem
		could contain
			~/
			~user
			$HOME etc
		symlinks / realpath
		relative/absolute
		stat
		file/dir
		tmp path?
		deleted?
	Command
		contains a Path to executable
		list of args
		function to serialise
		last retval
		FILE/fd	or in/out/err
		bool fork?
		bool alt-screen?
	Url
		scheme
		host
		path
		user
		pass
		list of params
		function to serialise

test imap server: openssl s_client -connect 10.8.0.1:imaps

relative time option for the index_format
	3h (ago), 2d, etc

are any config strings required to be MixedCase?
	Maildir?
	can we just lower-case them?

custom arrow cursor using expando
	colour as usual

ask config system for type completions?
	make sense for enums, what else?

autocrypt layered support
	strip off/add wrappings

tests for 'list'
	8 items in list
	∀ del first
	∀ del last
	∀ del middle (n/2)
insert tests too
	first only
	last only
	middle
acutest ∀ independent types (move to library)

announce protonmail config

mbox has 8KiB buffer.  test overflow with HUGE headers
	test other mailbox types

padlock icon for protected (encrypted, autocrypt) headers

cron 12/06/2018 drop web changes dir

[release] branch, use travis cron
	run daily
	run tests after 10 commits or 7 days
	do thorough test of builds / install etc
	automatically rebase branch
	afterwards, reduce the other travis builds
	(except [travis])
	rename [travis]?

need for TAILQ_COUNT()?

make E123 a parameter for mutt_error()?
	selective display?

":help error" look up last error message
":help" look up context-sensitive page

mailbox explanation -> web page / dev ml

[somehow] build in URL shortening, OR
build in urlview, tag urls[1] or abbreviate them
menu showing full options and open button
summary ability - move urls to the end

toggle-mapping / multi-mapping
bind/macro key FN1 FN2 FN2
that'll break if they get out of sync!

analysis
	add clang-tidy
	add uncrustify
	add lcov / coveralls
	AddressSanitizer build
	codespell
	lgtm.com - https://lgtm.com/projects/g/neomutt/neomutt/

X-Labels lost if "unignore X-Label" isn't used!
	suggest in labels docs

Fix grammar of multi-part/-lingual messages

move mkstemp, fmemopen, O_TMPFILE to mutt/temp.c?

file locking - could log the caller

upstream synonyms
upstream implement message Q size
upstream add synonym sort method

update bash complete for configure
	push to management
	dev ml

mutt_warning => instructions to avoid in future

option to open message window on *verbose* errors
e.g
	sb_sort is an enum, valid values are
		a
		b
		c

~b search shows % complete for *each* email, not for the 1000s in the folder

when running child processes
	capture all their output stdout/stderr
	display on summary page?
	dump to real stdout?
	makes async easier

should default keys be concealed (n -DS)
	pgp_defaut_key

open(2) O_TMPFILE
	mktemp
	fmemopen

linux only:
	O_TMPFILE
	Simple alternative to mkstemp()
	use if available

SIGUSR1 link to #2
	mark hard, close

neo admins -> all public org members

split up complex actions like <next-entry>, it becomes
	<next-message>
	<open-message>
	<filter-message>
	<color-message>
	<display-message>
	<mark-message-as-read>
this gives the user more control over actions
allows the user to add/remove steps
the default binding keeps the normal behaviour

move more /etc defaults -> init.h
	minimised the default config

test bodystruct:
	imap folder full of BIG emails to test %X
	(with varying numbers of attachments)

browser sort order of =abbr mailboxes
	not consistent?
sort=thread?  AC toplevel then abbr mailboxes
if !thread, don't abbr

users ml
	set "ask" config example

update list of all globals/configs
	free everything on exit

config vars are isolated, how do we isolate all colours?
	(and attrs) from ncurses?
	-> testable

post-send hook?
	entering-the-index-hook?

STAILQ Hooks doesn't show up as global
	cat Universal Ctags help?

use ANSI URL to abbreviate compose fields
	NO, relies on hover showing something useful
	_John_Smith_ with hover of "John Smith <john@example.com>"
	modes on, off, when necessary to fit

compose option to display alias (with hover link?)

cppcheck docs
	cmdline
	config.h needed
	-D needed

bug "set charset" doesn't trigger .mo selection
	should call in mutt_ch_set_charset()

pkg-config which platforms supported
	requirement on those platforms
	which not supported?
	cygwin? macports? homebrew?
	do we keep the machinery?
	bitrot in rarely used configure checks?
	are we guaranteed the same names for packages?
	will any platforms have partial support?
	two separate auto.def?

neomutt-test-configs.sh
	do each build in a separate out-of-tree dir
	run all in parallel
	what about logs?
	mktemp for log files, then cat?

TEST for log file failing to start

how many ways can conn/ connect?
	plain socket
	starttls
	tls
any others?
* all the encryption methods

mutt-wizard: contact, adopt?

all contributors -> list
	script to gen readme

use inotifywait to find all the build tmp files and .gitignore them

deprecation -- offer list of old names
	so users can grep -f

user ml --- any visually impaired?
	what can we do to help?

investigate FUSE imap fs

enhancement
	<tab>-completion for ! (shell) commands
	expand executables on $PATH, or dirs
	expand files/dirs thereafter

replace realpath

web -- make news page a dupe of the twitter feed

incorporate valgrind into unit-tests

make plan to deprecate list of "Features"
	need something better

create exploded diagram of Index/Pager/Sidebar screen
	label all parts
	use svg so it can be translatable

pgpewrap -- %(...) -> repeat group for recipients
	`%(-r %R)` becomes `-r 1 -r 2` etc

bug in nntp cache
	where's the header cache?
	why aren't the body cache files in the nntp dir?
	why is the file called ".active" hidden file?
		or is the host missing?

add neomutt.vim to COPR
	need to tag repo to match release

add "Add profile picture" to welcome letter

mutt tips
	create http-reading mailbox type
	needs to be able to scan host (or read an index)
	served as html by CDN
tls_set_priority - 
mutt tips
	RSS feed?
	we can control the length of the history
	or deprecate tips
	keep a large backlog
	rotate through useful beginner tips
	still need local storage for new vs old message
	tips *IN* rss feed, or is the feed just an index
	actual articles are html urls

Use vim-like Ennn error messages
	give every message a unique number
	every one documented in docs
	internal errors too -- "Please report this bug"

tmpfile name neomutt-*DRAFT*-XXXXXX?
	possible?
	useful?
	or set env to pass info to editor

∀ $ENV, code default, init.h, system config, user config
	doc and list priority order -- in $config docs!

assert - does it call atexit
	no - abort() (SIGABRT)
using assert means trapping SIGABRT for endwin

mutt_randbuf has 1MB limit
	assert
	we only call with a max of 16

notes on prompts that require ctrl-g
OR pgpkey selection should quit on <enter> (empty)
	is empty valid?

shorten changelog and link end to historic version on github

unify fd vs FILE*?
	might need FILE* for fprintf formatting
	also it's buffered
	does that matter?

copy startup tests 1-37 on dev/ webpage

startup: doc all routes to exits
	call graphs?
	coverage?
	from call graph work out which variables are ref'd
		NO: all globals could be

gdb ignore mutt/*.[ch]
	-> dev ml?

libconn
	conn/getdomain.c -> conn/dns.c
	refactor init.c dns functions to conn/dns.c
	put dns code in a separate thread (if we keep it)
		need test thread code
	move getaddrinfo, getaddrinfo_a into conn/dns.c
		check deps

web/readme bigger deal about starring/donation

mutt_bgrun - periodically run waitpid()
	keep list of file <--> pid mapping
	viewer goes away; delete file
	close files on neomutt close?

put donate link in GH template in comments?

curses could be replaced from the outsite in
	1) add 3rd config option
		[curses|slang|tinfo]
		tinfo still links with curses (for now)
	2) replace initscr() & endwin()
		viable?
	3) replace cursor movement/lookups
	may not work if initscr does some curses setup too

embed an asciinema demo of neomutt into our website

should logfile be CRLF on windows/cygwin?

attachment viewing -- keep a list of tempfiles, either
	delete after x mins (configurable?)
		some programs *watch* the file, so they'll get upset after x mins
		need to keep until exit
	delete all on exit
	they're tmpfiles so should be in /tmp?
		rather than ~/.mutt/tmp
		=> system can clean them in worst case (crash)
	or keep the last 'n' files, e.g. 10

do we need a config URI object?
	store raw after relevant encoding
	split into fields for code

connecting to gmail with options:
	-gnutls and -ssl causes a crash in mutt_conn_find()
	check

restart POP after connection is broken/lost (like IMAP)

option to make buffer auto-NUL-terminate
	after every add*()

check for !*var
	some string vars -> (str[0] == '\0')
	some int vars -> (*num == 0)
	LOTS of them
	worth doing?

logging
	mutt_index_menu() [1119]: Got op 151
	can we lookup the name of 151?
	no.  we can only lookup the description
	could add "OP_XYZ" to struct #ifdef DEBUG
	"key is not bound" error doesn't say which key

might want to add a "Other comments" heading at the end of the PR template
	rawtaz (irc)

do we really need: "set rfc2047_parameters = yes"
	why not always display a human-readable string?

MAILCAP / mailcap_path
	docs imply you can specify a PATH to files
	check RFC for clues
	update docs

hibernate-hook - would one be useful to anyone?
	after hibernate
		how does mutt know?
		does mutt know?
	do we need a hook?
	where's mutt waiting? key loop?
	notice jump in time?
	what about ctrl-Z suspend/resume?  same?
	does hibernate need a time option
	if (Δt > n) then fire hook

may need to rename one of:
	mutt/message.h
	imap/message.h

when you force an imap update: <imap-fetch-mail>
	a notification: X new mails would be nice

turn $sort into a string-list of methods
	set sort=threads,last-date-received,...
	allow more depth
	if sort is a list, ignore sort_aux?

fix default /etc/neomuttrc so that neomuttrc.vim doesn't show errors
	color header brightred default ^(From|Subject):
	last field isn't quoted and shows as an error

isolating libmbox means we can test lots of address code, etc

rename *idna* -> *idn*
	A == applications!
	but all the underlying functions are called idna

default (system) config
	ifdef VERSION > 20180101 set ignore_disabled_config

refactor idna code to make the entire file build-conditional

use idna.h IDNA_ACE_PREFIX "xn--"

vim-airline test po fix on old non-sync vim
(rhel6/7) create PR
neomutt/release

list autosetup release/commit hash visibly
	(for downstream packagers)
Update AUTOSETUP/INSTALL (or merge)

buffer *alloc* - make some space
_peek_ - get next token (save ptr), don't move dptr
	skip/drop_next_token
break up extract token - don't lookup '&var'
don't process `cmd`
what str cmds are used to put data in a buf,buflen array?
have mirror set of buffer_strfcpy, etc
strfcpy the only one needed
sprintf -> buffer_sprintf
(re)alloc as nec
79 buf,buflen + ~190 possibles
buffer_dupe()?
buffer_swap()?

who frees the charset hook regex lists?
hook.c?

make the shutdown cleanup (freeing memory, etc)
	#ifdef DEBUG
	nice to check, but not required for general users

configure devel options (for beta features)
	./configure --devel-FEATURE
	after time they become --FEATURE or built-in

document the 'hidden' uses of folder-hook
	when saving emails to $record

create neomutt account on docker.io
	advertise to dev list

if config (init.h) is de-centralised and docs are sectioned
	/u/s/d/neomutt/section-N.md
	how do we link ":help [OPTION]" to the right file?

teams
	distro/X  X=debian,homebrew,etc
	code/X    X=notmuch,reviewers,etc

deprecate AUR repo & notify

drop mailmap, use management one

move ncrypt/crypt.c disable_coredumps() to init
	there we could disable coredumps UNLESS
	the user enables debug logging

do something about assert
	one file has it disabled
	one file has it enabled

autosetup
	tags target?
	distclean rm tags
	delete *.Tpo?`

autosetup
	make V=0
	create min-build
		keep dirs

DEFINE library
	no mutt deps
	fully doc'd (doxygen)
	no _() text?
	no deps
		no external headers
		no global vars / structs
	unit testable
	coverage (not yet)
	no #ifdef's?

neo-vim repo
	project description
		tags
		topics
		icon
	fillout insights (communities) .github
	announce to users ml
	docs -> web/dev, pathogen, vundle, etc, see other plugins
	vim "team"?
		limit neomutt.vim access to them
	merge vim keys?

autosetup
	.deps
	.objs
	from min-build

muttrc ifdef
	/file absolute
	./file relative source

logo competition
	cartoon dog
	head
	letter in mouth
	need to look good in b/w
	and in line drawing

audit/testing/coverage
	trace one function at a time, check all
	vars defined ∀ inputs, doc'd coverage
	test code

"set ?imap_pass" show sensitive data
	what could we do about it?

neomutt user maintenance
Log person's last:
	commit
	comment
	issue
	team
	private member!

doc all refs to "mutt -v" output
	-v make the enabled hcache more visible

bug: can't copy/save email without decrypting it

have a different index_format for indicator line?

connections
	raw - fd - host, port
	ssl - encryption - certs
	imap - login - user, pass
	tunnel?
	who negotiates ssl, sasl?
	how does opportunistic ssl work?

create mechanism for *literal* set variable
	set pass = literal< ... >
	how do you know where it ends?
	perhaps literal must be the last thing on the line?
	would the variable need to know?

use summary log for informational info
	Sent email "Subject" to
		ppl-list
	Received 4 new emails in 2 folders
	this is level 1 info
	need much more of this

mutt-1.9.1
	attach mac text file (CR) OK
	neomutt eats all CRs

where is punycode encoded/decoded?
	extract to lib and test

keep and display different address parts
	raw (from header)
	canonical (parsed)
	comments
	display (de-punycode)
	comment string includes "()"

run gpg signature testing asynchronously (when opening email)
	would need placeholder in the email
	would need to redraw/render the email after
	thread safety

libfile
	rc = read_into_buffer(filename, buf, len, *fp)
	if fp is not given the file will be opened, read, closed
	if fp is given the file will be read, not closed
	rc
		OK (file fits into buffer)
		OK_MORE (filled the buffer, need more space)
			perhaps stat the file and return how much
		ERROR (see errno)
			or have a simplified error
			with msg lookup

libfile
	append_file("name", buffer)
	for functions that don't need to do anything else

turn some config vars into (string) lists
	hidden_tags (separator = ',')
	mailcap_path (separator = ':')
	send_charset (separator = ':')
	split at config level, then call the validator on each list item
		no, call validator on parsed list

all global variables should be set using the config mechanism
	therefore changes to globals would trigger notifications
	this means we need fake "config" items
	(tagged to be invisible to the user)
	like all the "pseudo" bool values

lib/address.c and rfc822.c
	NOBODY is using error codes:
		ERR_BAD_ADDR_SPEC
		ERR_BAD_ROUTE
		ERR_BAD_ROUTE_ADDR
		ERR_MEMORY
		ERR_MISMATCH_PAREN
		ERR_MISMATCH_QUOTE
	or globals:
		RFC822Error
		rfc822_error()
	functions aren't resetting error code on success
drop them?

research all RFCs relating to email, etc
	graph of dependencies / obsoletes

how do we test the static functions in the libraries?
	make *everything* public?
	#ifndef TESTING
	#define STATIC static
	#endif
if not, they must be completely robust

up-to-date list of functions/data for each library, split into:
	public functions/data
	static functions/data
one (background?) colour for each library
one shared colour for ALL static functions
use ctags to generate lists

create a literal string marker:
	set x = /Don't "shoot"?/
or something like vim's unmagic \V

kill ISSPACE macro -- no benefit to having it
	what about the (unsigned char*) cast in it?

xdg/neomutt/CONFIG
	config is standard, rather than (or as well as) neomuttrc

mutt_account_tourl Account arg should be const

tests on lib should also be run on 32-bit arch

2017-09-27 #mutt
<fire2199> by the way... why is there not a pre-defined variable for setting the config folder?

pgp-hook is synonym of crypt-hook
	needs deprecating, too

find "sprintf(x->data" for buffers -> buffer_printf

update _dev/signing.md
	wget https://github.com/neomutt/neomutt/archive/neomutt-20170912.tar.gz
	wget https://github.com/neomutt/neomutt/releases/download/neomutt-20170912/neomutt-20170912-CHECKSUM
	gpg2 --verify neomutt-20170912-CHECKSUM
	sha256sum -c neomutt-20170912-CHECKSUM
	test using build user

change feature neomuttrc examples to be useful working versions

rebuild all of mutt-*, neomutt-* binaries
	make sure they all use /etc /usr
	symlink, or put config so that mutt has good defaults

Create LTS release branched from 2017-09-12
	until all big features are done
Change all version strings to YYYY-MM-DD rather than YYYYMMDD?

mutt -DX read config and display deprecated options
	and their replacements

mutt cmdline option to show config search paths?
	probably not worth it

deprecate muttrc in favour of neomuttrc
	1 Restore all the mutt search dirs
	2 Drop the dated/versioned configs (nobody used them)
	3 Make a release
	4 Start deprecating muttrc (with warnings)
	5 Wait a few releases
	6 Drop muttrc

debug config options
	-O0 -g what else?

"wrapmargin" config option needs deprecating like the synonyms

notifications happen when something happens, e.g. new mail
consider a "no longer any more new mail" notification
negative acknowledgements
each notification
	would be independent
	could be on or off
user is notified when a notification status *changes*

change safe_rename
	ENOTSUP
	EOPNOTSUPP

merge and drop "scripts" top-level repo

test fcntl and flock on /var/spool/mail/mutt file

remote config option
	user logs in - host, user, password
	first email in inbox (artificially old) contains config
	email is encrypted to yourself (optional)
		need local private key
	ask user: "Apply (verified) remote config?" (optional)
	separate files?
		have an entire folder for config
			magic name - neomutt-config
		alias files
		mailcap
		certificates
		anything but caching files
	have email signed -- easily verified

pgpinvoke doesn't escape the filename of the email to encrypt (last param)
therefore
	set tmpdir = "~/.cache/mutt three"
makes it impossible to send encrypted mail

change build to install to ./install
alter my .gitignore to ignore ./install

imap keywords
	work out limitations
	test postpone delete
	expandos with nested threads
	test cases and instructions

need neomutt glossary (search first)
	add to guide

ask lists about slang usage
	drop slang

add rfc1847 gpg
add RFC1522
utf-7 -- RFC 1642, superseded by RFC 2152
rfc3986 - URI

listen for tags -- list somewhere public
https://github.com/neomutt/neomutt/tags.atom

add make tags (to exclude junk)

in pager, which objects are precious/vunerable
	which might be changed outside of the pager

magic -- set *string*, save *int*
	retrieve which?
	or both?
	retrieve string from Mapping[value]

buffer code solaris9(2005!) check

predefined buffer macros (static)
	=> addstr could fail (out of space)
	easier memory management
	BUFFER256, 1024, etc
	allocate buffer for you & memset it

are imap vars used outside of imap code?
what about sidebar, browser, etc?
keep their own var lists?  register at startup?

now that IMAP, et al, are compiled-in, what's in the docs
	that might be excluded (makedoc conditional)

check management README (missing)

two stage index update?
	hide, refresh
	update
	NO, index vars would still be wrong

ask neou for logo suggestions
	hold competition for art?

use install-sh $(INSTALL) instead of cp

parse_set: unset DT_RX doesn't work

FS layer
	211 fopen, 346 fclose, 285 unlink, 70 rename,
	mkdir, mktemp, stat, exists, (read|write)_(string|char)
	85 seek, flush
	tie in with mmap
	tie in with memstream/buffer/tmp
	distinguish tmpfile, generated help page, partial email
	memstream -> better buffer interface
	canonicalise path (realpath)

Misc
	where are the "source" relative docs?
	alias_file, certificate_file, etc aren't relative
		alias_file
		certificate_file
		debug_file
		history_file
		ssl_ca_certificates_file
	relative to what?
	all *_files relative to:
	1) the source file they're read from
	2) current working directory
	3) User's muttrc? NO
	4) $XDG_CACHE_HOME? NO

RFC
	account command user ml, devel ml

Decide
	#ifdef DEBUG
	move some web/discuss to "hard"
		the ones we really want
	new variable type MAILBOX
		could be a "/path" or "+mailbox"

Searches
	list all GH matches
	10m - classify
		old, config, new, different

add release count to changes doc on web

options accelerator '&' double up to escape
static buffer parse translations on first run
needs to cope with missing options or
options reordered -- still need "letters" internally
NO, need letters in po file

modular mutt: imap & nntp share some functions
"subscribe" -- both should declare and mutt notifies both?
or can it tell whose command it is?

devel list - favourite vim plugins -- promote mine?

each variable type in init.h should have its own validator
(null for free form strings, or unranged numbers)

relative 'source'ing of files doesn't work if the base is a symlink

create an address interface for lookups / completion
	basic plugin uses aliases
	notmuch can supply its own plugin

pgp_invoke_decode
	This is historic and may be removed at some point.
	lots of similar functions being redirected
	strip out?
pgp_application_pgp_handler
	needpass (bool) starts as -1!

warning on muttrc synonyms
	this will be removed in x months
	this will be removed after DATE (better)
	suggest correct command

devel ml favourite git config

off_t used in browser.h
	don't need OFF_T
	ftell long vs off_t

linux kernel
	IS_ERR, PTR_ERR
	container_of
	LIST, list_for_each, etc
	ARRAY_SIZE
	BIT
	min, max, typeof
	swap
	round_up/down

vim-like scrolloff option for pager/index
use travis env / website to control build verbosity
sort format string switches

PR requirement all commits build
	make dist/clean on merge
	not nec of each commit

email
	folding the index
	gettext -> non-optional?
	wide ncurses mandatory?

conceal IMAP password

READMEs tidy review
index folding cf vim
vim plugin - cino options etc

travis/neomutt-test-configs configs & build tags
init.h -> options.[ch]
eliminate WHERE
mutt -D options
shrink authors (split out)

with options split into sources, mutt -D could omit entire sections
	if nothing has been set, e.g.
	all of pop_* have default value

compose bug
	E (edit headers) fails if $editor isn't set

simplify y/n questions.  no more "Are you sure?", just
"Quit? Y/n" -- all ask-yes, ask-no

renew s/mime cert & test & desc steps

create screens overview of all areas of mutt.  provide:
	sample data/emails
	sample muttrc
	instructions to repeat

plugin fs-layer
	basic: files + stat, etc
	adv: file, inotify
	others: fmemopen, mmap, libuv

doc sample branches
	web page with list

neomutt-test-config.sh
	--save dir
	put mutt's in an output dir
	log each numeric name with the compile options

cmdline --about links etc

MacOS iTerm (and OpenBSD's xst terminal)
	Ctrl-O doesn't work
	"stty discard undef" fixes it
some other terms too
	rxvt-unicode, openbsd 6.1 - verified
	"stty flush undef" needed

deprecate ChangeLog*
	hey're in the git history
	or abbreviate with extreme prejudice

use signal to interrupt IMAP connect
	at time of resume (after suspend)
	systemd service?

Project management:
	contact distros
	organise web updates
	search for patches

change #ifndef's to #warning too
	#ifndef SYMBOL
	#define SYMBOL
	#warning "Please tell neomutt devs about this
	#endif

double-width index (continuation of first for wide screens)
	| side | index1 | index2 |

coverity -- some code untested due to config options, e.g. openssl
	need coverage test

use *mutt* to generate sample mailboxes
	create folders
	create emails
	etc

branches in neomutt repo may be eligible for a free rebase
	develop in your own repo, and they may not

create doc repo
	have neomutt repo as a "fixed" git submodule
	or a submodule of a doc-gen repo

warn on option synonym usage
	{ "pgp_autoencrypt",            DT_SYN,  R_NONE, UL "crypt_autoencrypt", 0 },
	{ "crypt_autoencrypt",  DT_BOOL, R_NONE, OPTCRYPTAUTOENCRYPT, 0 },
	crypt_autoencrypt is the visible option
	warn if pgp_autoencrypt is used

all example muttrcs
	bring them up-to-date (valid options)
	or delete them

2017-03-22 #mutt
	14:43 <wayne47> is there a way to specify a unique SMTP server per mail box?
	14:44 <wayne47> so that when I read mail via imap from foo.com, outgoing mail uses foo.com and when I read from bar.com, outgoing mail uses bar.com (etc)?

web toplevel dir
	/muttrc
	move all samples from the guide
	link guide to samples

configure summary?
	--disable-docs -> docs:         no
	--disable-po   -> translations: no

topics for my github repos, icons?

mutt marks -- are they mailbox-local?
	can we distinguish (like vim) between
	`a  mark in this index
	`A  global mark (potentially in another mailbox)
		is it safe to change mailboxes without warning?
		I suppose macros do this

convert the bug-fixes section of the travis build.sh to work on the upstream branch
	(test all commits, with a small spread of configs)

2017-03-06 #mutt
	17:40 <parosen> "set -o vi" functionality in mutt?

when saving a file (being asked for input),
	add a mechanism to expand a mutt variable
	like vim's ^R

create muttrc that undoes everything that might be in /etc/Muttrc
	:reset all
	:uncolor *

po
	don't need line numbers for git
	might need them for poeditor

webpage: new status
	wip-help -- "Work in progress - Please help (instructions)

add template email for newbies getting credit

.gitattributes
	ignore changes to .travis.yml
	from merging branches
	hmm... but it'll be in all branches
	does this make sense?

investigate:
	global config
	list all the IMAP variables
	list all their uses

github/irc bot.  notify on:
	@neomutt/reviewers Please Review -> "guyzmo asked for review of #298 (Desc)"
	"flatcap approved #298 (Desc)"

github peer review bot:
	https://github.com/felixrieseberg/peer-review-bot

work towards: no commit without an issue
	A reviewer's "OK" for an idea can come from:
		issue
		IRC
		mailing list

save backlog of messages in a deleted file!

issues for upstream sync - share the lot

Releases
	comments = docs
	translations too - in either release

imap flags summary

example notes for a PR
	don't walk away
	you need to work with us to get it merged
example notes for an issue
	need to be around to help us find the problem
	might need to test the solution

doc how to become a reviewer

issues: shooting for zero
	try to get down to zero issues/PRs
	what about long discussions?
		close them
			two weeks after last comment
			four?
	what about unlikely enhancement requests
		doc on website (with links)
		close them

filter to turn :+1: into emoji character

link to OS *guide*

conceallevel (for pager/index)
	0 off
	1 conceal
	2 conceal and squash
for index, 1 list "there are 'n' concealed threads"

irc notes: assume humour before anger/offence

pager colour filter start/stop regex + lua script?
what does it insert?  or does it call back to get mutt to highlight?
script is stateful

squash or not - consider need to revert 1 piece

flowchart for sending an email, showing:
	screens,
	<functions>
	hooks
	include signing
	postpone
	screenshots (text)

merging explain to newbies about squashing

check nntp for updates
muttrc linter correct, or comment out?
base64 3 byte work chunks -- bigger?

review describe with pictures the three github merge options

find markdown code theme that I like

nntp on MY server - 3 groups
	user ml
	devel ml
	github issues
what about:
	mutt user ml
	mutt dev ml

pre-reply hook -- takes original email and formats it however
or
pre-sent hook, filter before send?
why bother?  should be done in editor?

"source" command relative to $cwd or previous file

categorise all messages in code
	info, warning, error, question
which imply user to do: nothing, be informed, worry, query user
errors should be clear whose fault
user: e.g. type something invalid
config: file invalid / missing
code: internal error, missing ops
separate what user cannot do vs MAY not do

safe macros enhancement request: https://github.com/neomutt/neomutt/issues/69#issuecomment-230442101
	zmo suggests: emulate the augroup feature of vim :)
	macros specific to a folder, or notmuch, etc
	have an "account" function that limits to one account
	account "imap://..." set sidebar_visible = yes

mailbox +/wibble
mailbox =wibble
	aren't equivalent, caused problems for squillis on irc 2017-02-10
	# mailboxes =INBOX "+/Drafts" "+/Sent Items" "+/Systems/A" "+/Systems/B" "+/Systems/C"

new feature checklist -- code all configs, doc, readme, web, doc validate

release criteria for a new feature
	changelog
		changes
		num commits?
	clean build
	configure --option (off)
	basic docs
	tidy code (whitespace, etc)
	example config
	screenshots of new features
		text/html screenshots if possible

trash folder: forget the directories idea?      who cares about deleted stuff?
trash needs index panel expando -- Original location
archive *needs* dirs %Y / %From?  auto-create, auto-delete on empty
<empty-trash> function
"empty-trash-confirm" variable quad-type
expando for status bar -- trash-size (bytes/Mb) trash-count (number of deleted)
archive needs X-Original-Dir (like del)
	<unarchive> function
tie archive to notmuch to auto index
status bar needs expando for archive contents in (kb,Mb) or (count)
archive/trash expandos -- unless too heavy to calculate
	consult indexes for results/numbers
	does the index store size?
archive needs rich expando save strategy
	%Y, %m, %d -- lots of dates
	%from, %to, etc authors
	%list, $orig-folder
	size/count of attachments
	every conceivable attribute of original mail
use NNTP server (on flatcap.org) to store mentor conversations
	mailing list history too
	topic per mentor idea
	topic for introductions
can nntp compress its mail folders?
	or just compressed disk media underneath
	can mutt-dev-list maintainer get archive from marc.info?

type:investigate ?
	something that needs research
	might lead to docs
	might not lead to code

limit current thread
	new mail shows up even when not in thread

commands
	rename all those containing _ (underscore) to - (hyphen)
	accept either
	autocomplete to hyphen
	linter for muttrc -- with warnings

issue - auto screenshots - sample mailbox

branch 123-desc auto work-in-progress

create list of current scripts shell/perl
	build processors
	automators
	list -> website -- link to repos
	#!/bin/bash ->  sh

newbie - recommend setting 'set user_agent = yes'

mutt IPA /mʌt/

add abort-mailbox to nntp, etc
	raise issue

change release cadence?
	feature release
	bug-fix release
only update translations on bug-fix release
fixes for docs are bug-fixes
two open milestones (next-feature-release, next-bug-fix-release)

list Sven's unused letters to the main guide

leave-folder hook?

coverity to use travis-build script!

chronic "moreutils" package

web
	```note
	css proportional font
	bold first line using css
	add icon?
	```code
	specifically for code?
	no interferes with markdown highlighting

xgettext notes, L10N, _(), N_()

po.vim
	toggle English vs Foreign
	options to show/hide
		whitespace
		dots
	set symbols

shrink version number to YYx
	2 week releases -> 26/year, 26 letters!
	week 16 release => 16q or 16Q
	52 weeks => AaBbCc etc
	what about stable release?
	-LTS needs multiple releases but one name

complete review of string handling in mutt
	string contentation
	tokenisation
	matching
	etc
	see which, if any, gnu-only string functions are useful

donate page
	paypal
	bitcoin
	get-together costs?
	contributions to neomutt.org domain?
	what?

offline working
	mutt hangs whenever the network goes down and is essentially useless
	what's needed to make mutt useful without a network?
	"auto-postpone"?
	"send-on-reconnect?"
	cache more information about mailboxes?
	network heartbeat to detect connectivity?

what would be needed to have an 'offline' mode?
	how much extra folder info would we need?
	just keep one copy of the 'last state'
	how much code would need rearranging?
	∀ index items, need availabity marker
		which are local?
		Header, Struct, Body, Attachments

imap force body cache on read
	option for offline working

magic "combined" folder
	mbox part for unchanging, historic stuff
	mbox part needs hcache for speed
	maildir part of changeable stuff
	combined into one view
	need method to "fix" emails i.e. mark them as no-more-changes
	cf unionfs - what happens to writes?
	cf compressed mailbox - delegate to multiple backend open mailboxes

inotify ∀ local mailboxes
	2016-11-16 12:13 <royger>
	flatcap: maybe using some abstraction library, like libfswatch
	(it seems to support kqueue, inotify and fsevents)
	https://github.com/emcrisostomo/fswatch/tree/master/libfswatch

collect useful tools in neomutt org:
	urlview
	offlineimap, mbsync
	procmail, maildrop, sieve
	etc
	swaks: smtp tester
	khal
	calcurse - curses calendar app

web: features list page
	add upstream column

How to Use Mutt doc
	step 1 - select your source
		POP, IMAP, local, offlineimap/alternative

getting started
	mention travis notification email

web: changes page -- since/relative to mutt

web: misc page for extra options that aren't in features

announce GPLv2 usage for project
	make it clear on the (devel) website

stable branches for LTS releases?
	Why?  Mutt doesn't

code school -> neo branches (regularly rebased)
	[school/new-variable]
	[school/new-function]
	[school/new-color]
	etc

code school
	variables
	functions
	architecture 101
	web top-level

each web dir, have _source.txt
	details origin of page data
	scripts for generating

web
	auto-generate list of WIPs
	[devel/*] -> list
	where does the description come from?
	update daily
	since DATE
	last update DATE

DANE instructions for neomutt gpg key

create file on all neo members
	who's who
	who's done what
	date of last contribution

imap supports queries
	"+?query=tab:inbox"

un-named-mailboxes needs to work against path or description

website
	404 is static!
	manual/guide -- not a collection
		needs to be ordered
	src code is not a distro, so list it last

enforce real names in git commits?

look through upstream mutt trac for
	enhancement ideas
	feature patches to apply
	bug fixes
	[easy] ?
	comment in trac "neomutt adopted" when done!

settings for uncrustify, clang-format
	for current neo code
	for future  neo code

named-mailboxes use Mailbox Shortcut % ?
	%tidy-name
	needs plugging into other code
	abbrev names to "%name" if possible
	if configured?

nested-if
	stack of nesting chars in char[]
	$? or $< push only
	matching char => pop
	32 deep stack

2016-10-25 11:04 <mgedmin>
	pet peeve: when I try to open a gigabyte-sized mbox file with 10,000 messages, I cannot abort that

2016-10-24 20:54 <flip214>
	it would be very nice if switching to an imap folder could be aborted by ctrl-c
	having all headers fetched anew and having to wait for 2 mins, knowing that the wrong folder is being loaded, isn't that nice
	the counter for the headers fetched (N of M) counts up
	Ctrl-C gets ignored

mutt_launcher
	use a pipe to channel log messages back to mutt
	pipe(), fork()
	dup2() to replace stdout,stderr
		=> printf to log
	stdin -> null

pre-cache app?
workflow:
	offlineimap
	notmuch new
	cache-every-file

need to document "missing" keybindings
	^Q ^S flow control
	^O terminal (BSD only)
	2016-10-23 22:16 <Riviera> stty discard undef; mutt
	"stty -ixon" disable Ctrl-Q
	can this be done programmatically by mutt?
	"stty -a" to show settings
	cfmakeraw(3)
	zsh is able to reset terminal configuration after each command with ttyctl -f

issues -- always assign (for later reference)
	fixer/mentor only makes sense for bugs/enhancements
	what about questions?

2016-10-21
13:24 <mgedmin> on ubuntu I think it's best to 'sudo apt-get build-dep mutt' to get all the libraries

make tags -- ignore standalone tools
	needs to ignore #ifdef TEST, too

external testing
	how many external events can we control?
	how many can we simulate?
	via pretend keystrokes
	key, mouse, winch fs, net

need way to repeatably test net failure
	tcpkill -- doc in dev web

find all non-mail users of pager
	add to index/pager tests

does label workflow make sense for PRs?
	if not, why not

index preview mode - display 'n' lines of the email body
	when in the index

nested-if -- index-format display ? if doesn't match string put in
	%<> changed to %? !

move separate tools to a separate tools directory
	adjust ctags to ignore them
	or, if no deps, move to contrib

bot on server to mail dev list on git commits?

admins need to make a release in 1 week's time -- practice
	(one of them, or all)

"report issue" notes -- OP needs to be around to:
	answer questions
	run tests
	etc

can we workaround the case of gpgme + self sign / smime?
	but use it otherwise?

new mail hook -- frequency limit
	if time < 5s since last notification

imap/pop ∀ devs
	no outgoing
	incoming to user@dev.neomutt.org
	sample emails refreshed nightly
	btrfs de-duped -- cron
	or cp --reflink

function fuzzer + scripting
	x inputs
	y globals
	difficult because of too many inter-linked structs
	and poorly designed functions

website top-level for scripts
	git submodule?
	like irssi scripts

debugging docs:
	125k lines of code
	help us find out which
	bug report blurb

21:55 svenG "No attachments, cancel sending? ([yes]/no):"  so NOT cancelling the sending.. sends. o_O  double negatives are always so confusing.. :-/

index folding (happens above level of emails)
	fold by option, e.g. day, month
	Wednesday
		mail
		mail
	July
		mail
		mail
	uses extra lines
	saves width

$sort = [prefix-][...]order
	prefix = reverse
	prefix = thread

vim has set vs setlocal
	mutt has accounts as separate entities
	set      var => global
	setlocal var => per account

new two-letter expandos
	initial letter picked with no clashes anywhere
	=> 26 more expandos to use

scratch-pad function
	creates a tmp file
	functions can put text in it
	you can view it in the pager
	you can edit it
	you can save it
	could be used by scripts to save output

breakdown
	source (simple)
	source (conditional, e.g. feature)
	source (conditional, e.g. OS libc)
	build (scripts/Makefiles)

multi-line index.  options:
	for all entries
	for current entry
	for current thread
wrap long fields
sacrifice height to save width

justify every file in the neo build
	use min-build to start
	show compilation steps

mime-typer plugin
	notify if the mime type doesn't match what *you* think it should be
	change the type (option)

pgp key manager/management
	list, ignore revoked keys
	sort options
	filtering

generic lists of volatile variables attached to
	mailbox/context or
	email
scripting could save info there, such as
	num emails in thread
	num new in thread
	score
move score from permanent to volatile

macports, is there something I can update automatically at release time?
	cf homebrew

config file accept keybindings using
	C-      Ctrl-   Ctl-
	A-      Alt-    Meta-
	W-      Win-    Mac-?

add cursor to pager (on/off)
	=> can highlight text
	can click links
	like firefox cursor mode

nested-if script

syntax file in local vim syntax dir needs to be called
	muttrc to match vim modelines in other files

separate packages for neomutt
	neomutt          - binary
	neomutt-docs     - main manual
	neomutt-contrib  - muttrc, vimrc, etc
	neomutt-docs-dev - code docs
	neomutt-distro   - copr, debian, macports
split repos to match
branch by version / language

alt-e resend_message - which hooks are called?
	add lua hook

filter manager
	time limit option -- on holiday!

forgotten-attachments: German example:
	"häng an" won't match over a new line
	strdup regex string, replacing spaces with
		"[ \t\n]+" ???
	does it work with \n embedded?
	could I pre-process the email text?
	it it utf-8 compliant?

turn mutt into a random email generator

startup-hook
	immediately before displaying the index for the first time
	useful for testing
shutdown-hook
	before closing mailbox connections

Need strategy for unrepeatable/too-little-info bugs/crashes

what are our killer features?
	put them on the website writ large
	scripting
	matcher?

index-fold-level
	0 completely folded
	1 depth 1
	2 depth 2
	-1 no folding
	overridden by user keys
key to
	view current message
	close other folds
	etc

website/repo for scripts
	like scripts.irssi.org
	site generated from the script headers

vim-like record macros 'qa'
	save macro
	play macro

should log files be localised?
	make it an option?
	debug -> english?
	hard to debug for other nationalities

development bottleneck
	document more tasks
	delegate more tasks

ifdef needs an "else" condition
	how?

files/dirs are sorted the same way as network folders
	may not make sense

mbsync better than offlineimap?

imap only 'n' messages option
	like $nntp_context

modularise header caching/dbs
	=> needn't use same cache type
	for header / message cache

pager -- sidebar gets updated but not status line / term header

vim-like hls option: persistent across emails

source script|
	pipe -- lookup exact meaning and implications
	works, but can't tell you where an error occurred

context sensitive popup menus
	e.g. index - tag some emails, hit <menu>
	options: copy, save, delete, set flags, reply, etc

check all lists of features are up-to-date
	web, etc

19:32 <mykoserocin> is there a way to show condensed DKIM results instead of full "Authentication-Details" header?
19:32 <mykoserocin> e.g. "DKIM: pass" or "DKIM: fail"
19:52 <brendan> mykoserocin, I use the spam marker system for it: spam "Authentication-Results: mymta.com; .*dkim=pass" "✓"
19:52 <brendan> spam "Authentication-Results: mymta.com; .*dkim=fail" "x"

$source_dir like folder
	or like $PATH?
	looking for files to source

browser - add flagged
	expando
	sort option

INBOX vs inbox
	not updating values for browser

copying a large mailbox / number of files doesn't trigger the progress bar
	mbox-100000
	tag all
	copy to another mailbox, e.g. maildir

Passing $VARs to children processes, means
	tell vim about mail rcpt, subject, etc

upstream bug -- folder_format, sidebar_format %n (has new mail)
	shouldn't be cleared if "mark_old = no"
	quit and restart mutt and the flag comes back

new index/sidebar_format expando: icons
	each email can have a set of icons
	each icon has a unicode character and a colour
	sorted in order of definition
	tie-in to labels / notmuch tags

fork vs non-fork -- animal species reference
	species: noun
	a group of living organisms consisting of similar individuals capable
	of exchanging genes or interbreeding.

trash + gmail
	doesn't work as expected
	effectively archives them on gmail

do saved emails (that get deleted from current folder) appear in the trash?

NeoMutt signing key on
	flatcap.org
	neomutt.org
	github? where?

web update about.html : done so far

change sort option
	thread becomes a prefix
	e.g. "thread-date"

fmemopen -- when fixed, default to off

automate github release
	tag, push, create release, push, assets, checksum

dbus - also implies
	synchronisation of multiple copies of mutt
	e.g. multiple windows/views

jump to previous folder command?
	"cd -"
	vim: "ctrl-^"
	can this be done with a folder hook?
	set my_olddir = dir
	is it too late when we get the hook?

"bind index ` command"
	parses badly
	doesn't warn the user

github issue notifications forward to IRC
	or dev mailing list

context-sensitive help?
	how?
	sensitive to what?
	how about:
		"show-me-this-file" command
		display in pager
	if in pager, close & open text file & restore on 'q'
	if in index: display & return to index after

maildir_trash conflicts trash folder patch
	our patch, check upstream version
	document this

mutt config source DIR
	loads all files within
	recurse?

web mailing list page with sven's muttrc example

no need to subscribe to mailing lists

darnir:
	use gpgme not gpg
	warn users?
	educate users
	can we force config=yes?
	what if libs are missing?

mutt doesn't close file handles on fork/exec
	need more close_on_exec in fopen
	open pdf attach -- look in /proc for evince
	security issue

generate (script) tree of all source (by tags)
	and create squashfs

web/readme ∀ pages
	last proofread date
	last proofread person
	periodic checks
	divide and conquer
	auto-footer: last updated, last proofread

invert index option
	new mail at top of screen

index-color -- index_date pattern?
	and index_label

compress flickers, but gpg doesn't
	imagination, or not?
	option to NOT leave alt-screen mode

lots of demo configs for
	index_format
	header_order
	etc
create a function to cycle through them?
	would need some good sample emails
	various headers
	various flags

mutt connection config wizard
	special cases for gmail, etc
		open gmail pages in browser
	test host for:
		imap
		pop
	test for tls
	ask for password
	test connection
	like evolution's wizard
	write config to file/screen

mutt-tips: integrated
	tips command
	fake? email or browser spawned
	neomutt tutorial

transcribe issue#56 vim-keybinding ideas
	-> docs/vi.txt
	wiki

gmail patches -> devel
	need testers

nntp list, can't sort by counts

toggle-quoted : option to remember state
	or "hide_quoted_text" bool
	a caps-lock for toggle-quoted
		don't have to do it for each mail
	can this be done with "message-hook"?

offer up-to-date vimrc for mutt/neomutt to vim.org
	autocmds for neomutt/mutt config locations

update man page for mutt
	wrt muttrc location, etc

tip - status_format + status-color
	ctx->readonly => red padlock

unstable: .gitignore upstream of feature branches, what else?
	common docs, travis

sidebar -- imap all folders vs subscribed
dovecot public mailboxes for tips?  one public user?
nntp tips? ":tips" command to toggle nntp vars and mailboxes

remote config -- like browser proxy setup
	display to user "are you sure?"
	useful for tips & examples
	way too dangerous

alternative to sb search
	key -> numeric prefix for all folders
	type number<enter> to select
	(like index-panel)

sidebar "live" search of folders
	key to start searching
	live filtering at every keystroke
	enter selects
	Ctrl-C / Ctrl-G aborts
	fuzzy matching
matching applies to multiple areas of mutt
	sidebar
	aliases
	folders
	files
	index panel
	pgp keys

2016-08-12
	08:31 <flip214> Hi. Another thing I would love to see: an email arrives in INBOX; I answer it,
		and define the FCC for the sent mail, but the incoming mail is still in INBOX.
		so a "reply-and-move-to-same-folder" would be interesting to me.

doc -> contrib ∀ vimrc, muttrc
	=> will break downstream packaging
	announce change, make change in next release

transition guide:
	man neomutt
	a guide for users of mutt moving to neomutt

symlink man pages, etc (for ease of use)
	neomutt -> mutt

getopt for neomutt
	--help
	--version
		"mutt -v | head -1" is pain

sidebar
	have an alternate mailbox like vim's alternate file
	(isn't this the '-' mailbox?)
	create an alias for it '#'
	c# -> change to alternate directory
		new alternate becomes old dir
	save files to #
	set alternate mailbox function
	colour highlight for alternate mailbox
	expando %# for alternate displays '#' or ''

mutt tips on startup
	distribute a contrib/mutt-tips dir which is a mailbox
	select a random (email/tip) from the list
	pick one that's unread (preferably)
	how can we preserve the "read-ness" of an email after a package update?
	.mutt.top-tips ? -- save a list of message-ids in there?
	<top-tips> command creates a new mailbox (from DATA_DIR/DOC_DIR)
		if in /usr it would be read-only
		need to store flags elsewhere
		flags: read, flagged!, deleted (i.e. don't show me again)
	intersperse with mailboxes commands
	tips should be self-contained (to start with)
		unless they reference old tips
		nested emails?  what about multiple inheritance?
		need hyperlinking "see also" links
	use labels (from Keywords plugin) to add value
	use mutt's caching facility to store the metadata

macro instruction <no-history> like vim's <silent>
	some macros end up in the log

'ifdef' improvement
	ability to check mutt version number
	ifdef VERSION == X
	ifdef VERSION > Y
	like vim

new-mail => dbus as a goal, see dgc

doc changes/todo list for limit-current-thread

24-bit colour => non-curses back-end
	enumerate all the curses things we do
	get screen size
	listen for screen size changes (WINCH?)
	wait for key presses
	clear screen
	clear line
	write text

mail sieve issue -- colour code for origin?

neo-build
	use git config for settings
		enabled/disabled by default
		configure settings
	save config.h, etc in .git/neobuild
	neobuild --generate

sample IMAP folder (for devs)
	regenerate daily

script to generate min-build
	put in contrib?
	check config is still up-to-date

Mutt config generator app
	or good (curated) sample config
	tutorial
	translations

add tutorials (like sidebar intro) to the website
	redlink some empty ones (or partials)
	ask for translations?

use Gutenberg texts for sample emails
	use mutt-dev mailing list as a template?
	alias all names
	replace all message-ids (but keep links)
	strip out most headers

check makefile dist file list
	ChangeLog.neomutt, etc

update readmes
	project links
	project contact
	version
version.c
	copyright
	contact
	version
main readme
	project links
	project contact
	version
	list latest version?
		no, will always be out of date

GIT REPO?
	.gitattributes
		merging
		diff regexes
	doc my .gitconfig
	all bin/ to repo + .shell/bin/git

upload all bin/ add (c) and licence

Web Page (front) LATEST VERSION + links
	+ ChangeLog with links to commits?

list of to-be-written pages on web
	icons for level of completion

create empty (red-linked) pages on website, for people to write

howto build neomutt page
	simple instructions
	expert instructions
	explain all build scripts, etc
	location of source / repo
	howto install
	distro pre-built installs

NeoMutt website top tips?

[management]/bin
	sync.sh 6h cron script to sync mirrors
	sync needs ssh key
		external to script
		(document in header)
	sync reads data file with header, whitespace & comments

sample mail repo filled with example/problem mailboxes

delegation of keys -> focus() -> parent -> global, e.g. IW, Mail
	functions => components (e.g. mail)     }- mail_init() register_functions(); register_commands();
	commands => components                  }

show focus -- sacrifice help line?
	no, it's not always visible
propagation of notifications -- start @focus, work down
	SB, IW, PW + 'q' mail accepts, hides PW, PS, focus IW
	SB, IW + 'q' mail notified, rejects, global accepts, closes app
Help starts @focus, Panel Name + get_keys method
if sidebar is a separate panel and src file, should IW be?  PW?  AI?
If focus is on PW and SB, IW, PW are siblings, how can SB get notifications?
	or does mail Panel catch and iterate through children?
	SB mappings are (index,pager) => behaviour wanted but not in AW

panels have dividers enum
	left
	right
	top
	bottom
	between
	outside
who owns the dividers space?
set_focus (panel)
	who owns the focus?
	gfx(curses)?
	get_char -> gfx_get_char -> consider focus
on close panel, focus moves to
	*prev*/next sibling, or parent?
	due to mutt's UI focus moves to prev sibling
how can I show focus without moving anything? i.e. borders
	sacrifice a top line?
	border highlight?  => always present
which panels *accept* focus?
	sidebar
	index window
	pager window
	<tab> to switch?
	or <left>, <right>?

website: some bug-fixes have gone away -> success page?

∀ new bugfixes -- reference trac number in commit message
test email reply to issues, etc
	markdown?

get travis to build RPMs on neomutt and deploy to github release's artifacts automatically
website front page: do YOU have a mutt patch? -> contact us
website collection of changes since last release -> relnotes on release
	note which branches, etc
website highlight section on toolbar (solid colour?)

new hierarchy: tree => mail's parent is folder or mail

icons for news:
	news: newspaper
	devel: jigsaw, spanner&screwdriver
	release: present, balloons

use links(1) as a model for re-architecting mutt
	mouse control (inc right-click)
	safe html rendering
	pop-up windows
or mc (midnight commander)

update website gh page: list of branches
neomutt FAQ -- containing what?
add my gpg signing key to neo.org, fc.org

fmemopen - merge into one place in mutt_mktemp()?
	idea from dgc email
	do all the callers know the file size?

Do drafts *need* to be stored in a separate folder?
	why not inline?
	in threaded order
	just tagged or coloured
	status flag to denote draft

screenshots on website
neomutt version on website home page

doc travis and coverity options
split source?
	tools/ - standalone exes
	library/ - replacement library functions
	readme/ - obvious

save email doesn't respect the umask

kdave - limit-current-thread
	alt-l (show limit) should respond "limit thread"
	is "limit ." the same as "limit all" -- YES
		fixed internally
	create unlimit patch and pull-request for kdave?
	limit doesn't have any context, just a pattern
	limit-current-thread NEEDS to know current email
	it'd be nice to change limit to accept another "string" arg
	currently
		"all" -> "~A"
	change limit
		"thread" -> "~a" (only letter available)
		let general limit machinery do the work
	unfortunately they can't see the current email
	use context, or change prototypes

vim library of config options(vars)
	auto-extract from init.h

kill version.c:rstrip_in_place()
	fix external build scripts

how should mutt_yesorno() work?
	Question is asked modally & outside area of asker
	=> hide command line, show question
	question panel gets request, shows itself, hides command
		make command-line panel invisible?
		make question panel higher in z-order?
			=> they are coincident

changes to css must set both fg, bg
	cf <note>
	reduce colour of <command>s too

'c' fails if dir has trailing /
	e.g. when you use <tab> to complete!
'c' to open fails, test cmdline open too
	check sidebar displays correct highlight/open

source command -- allow wildcards
	fits in nicely with ifndef
	or 'source_dir' command to read all contents
	or "source dir" to read all contents
	recursive option?
	recursive by default?

cond-date needs some concrete examples

cond-date
	all,dates,are,broken@ 1y -> this year (not 12 months)
		1w -> this week (not 7 days)
		if the dates were sensible (7d = 7 days back from now)
		they'd tie in with ~d, e.g.
			color index color237 default "~d>30d"         # Over a month old
		reuse the ~d code
			pattern.c:eat_date()

do format conditional work on strings, etc?  meaningful?
	empty => false

browser
	can sort my num new msg, but can't display count itself
	sort needs docs -> promote to feature?
		check kz for docs/examples
	%n isn't representative of "all message count"
		doc as (N)umber of messages, or
		%c message (C)ount

community script check for update
	date community docs?
	or just rely on commit date?

replace " with ' in muttrc

index_color should apply to status_bar when viewing mail
status_color should apply to mid-status_bar when (pager_index_lines > 0)
shouldn't be affected by 'status_on_top' either

docs/muttrc/readme/init.h
	need to document default values for variables

Generated muttrc is an encyclopaedia
Supplied  muttrc is a guide for dummies

git
	create git diff regex for manual.xml to identify the section where the changes occurred
		grep "<sect[0-9] " manual.xml.head
		need to look for <sect> <chapter> <table> <example>
	check the default 'c' git diff regex against sidebar.c
		check C function
		check C struct/enum

mutt folder/dir browser
	".."/open should start with current folder/dir selected
	display full path at top of screen/statusbar/titlebar

introduce new format strings
	index_rich_format

what are the objects in the Index?
	cache the index formatted strings on them

refer to and compare config names by hash only?
	save lots of string compares
	gperf to generate perfect hashes

index format -- full directory mode
	show unix perms like ls
	user/group/etc
	too specific?
	what about other OSs?

cache for formatted strings?
	too much can change
		index: flags, folded-ness
		sidebar: all numbers => cache invalid

keep revision number for all config items (as a prelude to proper notifications)
	only increment revision number on change
	leads to possible A-B-A problem (change blindness)
	if (ver(format_str) > old_ver) STMT;
	allows code to make informed decisions about caching

which config items require frequent and costly interpretation?
	all format strings -- every line, every refresh

data source LDAP
	address book? -- different grouping/hierarchy?
	calendar? -- different timescales?
	news?  subscribed   <--> all groups
	rss?   unread feeds <--> all feeds

signature manager
disposable email address plugin?
	need external API to send/receive

Undo, what's possible?
	Last action?
	Many actions?
persistent undo on email editing?
undelete?
unsend?
tagging?

integrate nntp into sidebar
what does notmuch return?
	how do i link it to existing objects?

Where does getchar() get called?  can I centralise them?
Does getchar() wait or poll?  Need it to poll
Polling -> Idle -> Event callback that I can use to populate EMAILs
need to clear index on Toggle-Virtual

postpone patch doesn't quite work
	1) The PostContext and menu are private, so sidebar can't tell that
	   we're looking at the postponed list after navigation.
	2) After navigating to another folder, you still have to "quit" to
	   get the display to refresh.

alternative to lightweight patch
	don't update info ∀ EMAILs
	just update the current page
	only update lists when the user OPENs a folder
	not when they move the highlight
	could pre-emptively populate the previous/next pages

demo setup - lots of files in:
	local mbox
	local mh dirs
	IMAP mbox
	IMAP mh dirs
	POP mbox
	POP mh dirs

sidebar_sort is an enum - on set error, it could show the valid values
quadopt can give help too -- important since varname gives no clue about type
break up init.h, globals.h, functions.h
	init.h option DELEGATE, prefix "sidebar_", callback?
init() on module calls add_options()
	=> sb_opts refer to sb-private vars in sidebar.c
option breakup depends on lots of notifications
Where are OPTSIDEBAR* used outside sidebar.c
	curs_main.c, email.c, mh.c
Distinguish between movement and search wrap?
	movement - next/prev (1 line), page up/down
	search - find next/prev new
Config change notifications
	fn (name, old_val, new_val)
how would function delegation work?
	init() -> add_functions (name, callback)
	the callbacks would need to be able to manipulate mutt objects
Register functions & callback
make sure anything we need is exposed
if we hide our globals, give then all accessor functions get/set_VAR()
init would need to register new sort methods

most options are "short" limited to +/- 32767
set/unset/toggle?  invVARNAME
option - don't sort inbox -- defined how?
separate modules -- sidebar, index, pager, help? -- each with
	init()
	notify()
	close()
	config()
sidebar_wrap=search,motion (separate bools for simplicity?)

Unmailbox * ⇒  many notifications followed by ONE redraw

parse_mailboxes -> notify sidebar => know if anything's invalidated TBCH
can I use realpath(), mutt_expand_path() for anything?

Start; Incoming; Inbox open; current = Incoming; sort → cur is offscreen, boundaries lost

Notify (Box*, Rect old, Rect new, flags)
Flags:
	too small to render
	changed visibility

Changed posn notification ONLY
	e.g. sidebar has swapped sides
could imply that cached data may be OK to reuse
	e.g. don't need to call calc_boundaries

repaint if:
	size changes
	position changes

DBUS plugin -- to do what?
	notify out
	take input to do what?
		accept mailto: links

quiet config option -- don't whine about unknown config options
	or quiet command line option

trim trailing slash from mailboxes, folder
	shouldn't be displayed

New only -- include structure (empty dirs) to keep hierarchy
	mail (0)
	  fruit (0)
	    apple (1)

sorting
	if displaying full paths:
		sort by display name
		sort by underlying name
	if displaying indented paths:
		sort by top-level names, then children

send escape sequence to clear terminal title when mutt closes
init.h struct option_t needs enums for types and union for data
timer notifications, e.g.
	highlight something for three seconds, then return to normal

wrapping →
	extra char at beginning of line "+"
	extra char at end of line "<-/"
wrap at:
	char
	word (whitespace)
	clause (punctuation)
	sentence (.!?)
No wrap →
	extra char at end of line ">"

colours changes
keypress        key, no params
config change   key, value
		ALL, no params
mail status change
	read/unread/flagged/deleted/edited
	MESSAGE_ID, flags
mailbox change
	new/deleted
	new mail, deleted mail, flagged mail, etc
connection status
	connected
	disconnected
startup
quitting - any use to anyone?
selected mail changed
selected mailbox changed

make AUTHORS -- which repo did this?

ellipsis
	mutt_error
	mutt_message
	mutt_debug

