combine function.h and opcode.h, triple of:
	"function-name", OPCODE, "help description"
	enum of OPCODEs
	Mapping of "function-name", "help description"
	alpha order -> binary search
	simplifies doc generation too

init.c
	"too few arguments", etc
	change retval to -2 => mutt_warning()
	#define/enum the return codes

summary page
	account details
	host, login details
	connection info: IP addr, TLS?, login method, etc

move mkstemp, fmemopen, O_TMPFILE to mutt/temp.c?

file locking - could log the caller

config PATH flag relative to *what*?

sidebar/account option - toggle-subscribed (folders)
view:
	just <mailboxes>
	subscribed
	all

upstream synonyms
upstream implement message Q size
upstream add synonym sort method

update bash complete for configure
	push to management
	dev ml

mutt_warning => instructions to avoid in future

option to open message window on *verbose* errors
e.g
	sb_sort is an enum, valid values are
		a
		b
		c

account-specific aliases
	where do they get saved?
	ac-spec file, if not, then global file

librarify alias code -- only dep on addr code and idna

usage() - autowrap at $COLUMNS?

~b search shows % complete for *each* email, not for the 1000s in the folder

when running child processes
	capture all their output stdout/stderr
	display on summary page?
	dump to real stdout?
	makes async easier

should default keys be concealed (n -DS)
	pgp_defaut_key

open(2) O_TMPFILE
	mktemp
	fmemopen

new users team?
	to say what?

SIGUSR1 link to #2
	mark hard, close

neomutt -DD (defaults)
	all config with the default values are #'d out!

distro pages
	how to find/use a coredump

neo admins -> all public org members

kill status "new-bug"?

add to mx API
	mutt_pretty_mailbox
	mutt_canonicalise_mailbox

completion has a static var
	encapsulate & refactor

init.c
	getsid() and getpid() are POSIX2001
	no need for #ifdef?
	check with cygwin

split up complex actions like <next-entry>, it becomes
	<next-message>
	<open-message>
	<filter-message>
	<color-message>
	<display-message>
	<mark-message-as-read>
this gives the user more control over actions
allows the user to add/remove steps
the default binding keeps the normal behaviour

move more /etc defaults -> init.h
	minimised the default config

web home page
	What is it?
		brief desc + link to screenshots, etc
	Who are we
		brief desc
	Whare are we going?
		link to roadmap
	How can I help
		link to easy page

test bodystruct:
	imap folder full of BIG emails to test %X
	(with varying numbers of attachments)

web create some skeleton pages
	lists of notes
	link to GH easy issue

web need: how to make your first PR page
	cut'n'paste from other guides

browser sort order of =abbr mailboxes
	not consistent?
sort=thread?  AC toplevel then abbr mailboxes
if !thread, don't abbr

users ml
	set "ask" config example

backers:
	$1/month name
	$5/month photo/link
	webpage
	release notes?

web about: not a fork

non-easy
	find all OUT-params fn(&val)
	and ensure the variable is set before

define a NEO_PATH 1024 vs _POSIX_PATH_MAX
	as a prelude to all-dynamic strings
	test in >4096 char dir

translations: update copyrights etc

update list of all globals/configs
	free everything on exit

config vars are isolated, how do we isolate all colours?
	(and attrs) from ncurses?
	-> testable

post-send hook?
	entering-the-index-hook?

STAILQ Hooks doesn't show up as global

separate keybindings from curses & IMAP!

user prompting?
	easy task
	:ask VARIABLE|MY_VAR "prompt message"

doc valgrind suppressions
	how to create
	how to use

use ANSI URL to abbreviate compose fields
	NO, relies on hover showing something useful
	_John_Smith_ with hover of "John Smith <john@example.com>"
	modes on, off, when necessary to fit

compose option to display alias (with hover link?)

cppcheck docs
	cmdline
	config.h needed
	-D needed

bug "set charset" doesn't trigger .mo selection
	should call in mutt_ch_set_charset()

pkg-config which platforms supported
	requirement on those platforms
	which not supported?
	cygwin? macports? homebrew?
	do we keep the machinery?
	bitrot in rarely used configure checks?
	are we guaranteed the same names for packages?
	will any platforms have partial support?
	two separate auto.def?

doc all environment variables, link to config variable references

syn match mw "\<Mutt\ze\(Window\|Thread\)\>" conceal

neomutt-test-configs.sh
	do each build in a separate out-of-tree dir
	run all in parallel
	what about logs?
	mktemp for log files, then cat?

convert struct Command to use intptr_t

TEST for log file failing to start

how many ways can conn/ connect?
	plain socket
	starttls
	tls
any others?
* all the encryption methods

copy startup tests 1-37 on dev/ webpage

mutt-wizard: contact, adopt?

notmuch feature docs need updating
	as notmuch team for help

move mutt cron to server

all contributors -> list
	script to gen readme

script to keep neo mirrors up-to-date

trivial
	encoder_t is a PTR
	initialise to NULL
	check for other typedefs

"key is not bound" error doesn't say which key

use inotifywait to find all the build tmp files and .gitignore them

bool dupe -> const

don't log (to file) UI messages like "you are on last messsage"
	need new log level

deprecation -- offer list of old names
	so users can grep -f

user ml --- any visually impaired?
	what can we do to help?

investigate FUSE imap fs

enhancement
	<tab>-completion for ! (shell) commands
	expand executables on $PATH, or dirs
	expand files/dirs thereafter

replace realpath

send.c sendlib.c
	lots of char buffer[]
	rename to buf

web -- make news page a dupe of the twitter feed

incorporate valgrind into unit-tests

make plan to deprecate list of "Features"
	need something better

create exploded diagram of Index/Pager/Sidebar screen
	label all parts
	use svg so it can be translatable

style:
	F9 unused parameters should be unnamed
	Enum.5: Don't use ALL_CAPS for enumerators
	Enum.6: Avoid unnamed enumerations

add style GUIDELINE to add const where possible

pgpewrap -- %(...) -> repeat group for recipients
	`%(-r %R)` becomes `-r 1 -r 2` etc

bug in nntp cache
	where's the header cache?
	why aren't the body cache files in the nntp dir?
	why is the file called ".active" hidden file?
		or is the host missing?

config validator for format strings
	if they're all simple 1 letter, then have a parser(fmt, "abfq")
	only *warn* if bad -- notify devs if wrong

add neomutt.vim to COPR
	need to tag repo to match release

add steve (autosetup) to credits, invite

add "Add profile picture" to welcome letter

style guide
	STAILQ_FOREACH
	always use {}
	otherwise clang-format gets upset

mutt tips
	create http-reading mailbox type
	needs to be able to scan host (or read an index)
	served as html by CDN

mutt tips
	RSS feed?
	we can control the length of the history
	or deprecate tips
	keep a large backlog
	rotate through useful beginner tips
	still need local storage for new vs old message
	tips *IN* rss feed, or is the feed just an index
	actual articles are html urls

Use vim-like Ennn error messages
	give every message a unique number
	every one documented in docs
	internal errors too -- "Please report this bug"

tmpfile name neomutt-*DRAFT*-XXXXXX?
	possible?
	useful?
	or set env to pass info to editor

need (non-)curses ask_question() and select_option()
virtual functions.  select ties into curses menu

auto-sidebar bool option -- hide until needed on
	<sidebar-show>
	<sidebar-up>/<sidebar-down>
	hide until needed
	hide on <sidebar-open>
	or after 1 second if possible

âˆ€ $ENV, code default, init.h, system config, user config
	doc and list priority order -- in $config docs!

update COPYRIGHT

trivial - check all src against vim folding

assert - does it call atexit
	no - abort() (SIGABRT)
using assert means trapping SIGABRT for endwin

mutt_randbuf has 1MB limit
	assert
	we only call with a max of 16

stop offering to create ~/Mail?

notes on prompts that require ctrl-g
OR pgpkey selection should quit on <enter> (empty)
	is empty valid?

put "latest version = X" on distro pages
	too much work to keep up-to-date?

shorten changelog and link end to historic version on github

unify fd vs FILE*?
	might need FILE* for fprintf formatting
	also it's buffered
	does that matter?

startup: doc all routes to exits
	call graphs?
	coverage?
	from call graph work out which variables are ref'd
		NO: all globals could be

scripts
	make-coverity.sh
	make-translate.sh
	copy in .travis.yml
	create commit

gdb ignore mutt/*.[ch]
	-> dev ml?

put dns code in a separate thread (if we keep it)
	need test thread code

sort out / standardise
	strsep, strtok, strtok_r

web/readme bigger deal about starring/donation

mutt_bgrun - periodically run waitpid()
	keep list of file <--> pid mapping
	viewer goes away; delete file
	close files on neomutt close?

put donate link in GH template in comments?

setcolor, print, move
	setcolor is persistant, even after a move
	it applies colour
	unlike ansi printf which applies colour to one location

curses could be replaced from the outsite in
	1) add 3rd config option
		[curses|slang|tinfo]
		tinfo still links with curses (for now)
	2) replace initscr() & endwin()
		viable?
	3) replace cursor movement/lookups
	may not work if initscr does some curses setup too

use the configured error/warning/message colours for the stderr logging

embed an asciinema demo of neomutt into our website

should logfile be CRLF on windows/cygwin?

INSTALL/AUTOSETUP fix/merge

rename & move history to ~/.neomutt/history
	use config syntext to highlight?
	default to relative to user's neomuttrc

attachment viewing -- keep a list of tempfiles, either
	delete after x mins (configurable?)
	delete all on exit
	they're tmpfiles so should be in /tmp?
		rather than ~/.mutt/tmp
		=> system can clean them in worst case (crash)
	or keep the last 'n' files, e.g. 10

do we need a config URI object?
	store raw after relevant encoding
	split into fields for code

2018-01-25 22:07 bazzy
	On that note I recently got oauth2 working on neomutt for gmail.
	I'm documenting it locally atm

find remaining snake_case globals and replace them

connecting to gmail with options:
	-gnutls and -ssl causes a crash in mutt_conn_find()
	check

prep 1-liner descriptions of all var,cmd,fn etc for botty

restart POP after connection is broken/lost (like IMAP)

when redoing colour/attrs, consider a new file format
	for just them -- colour-scheme files
	see mc or vim format

option to make buffer auto-NUL-terminate
	after every add*()

check header and msg cache for dirs containing whitespace
	e.g. "Bulk Mail"

check for !*var
	some string vars -> (str[0] == '\0')
	some int vars -> (*num == 0)
	LOTS of them
	worth doing?

change OPT_NO_CURSES to OPT_USE_CURSES
	and reverse the logic
	uses: 14 OPT_USE_CURSES, 33 !OPT_USE_CURSES
	this means defaulting a global bool to true

notmuch folder-hook's don't work fully:
	virtual-mailboxes "a" "notmuch://?tag:dnssec"
	doesn't match tag:dnssec
	tag%3Adnssec does match
	need to make the URI cleartext

logging
	mutt_index_menu() [1119]: Got op 151
	can we lookup the name of 151?
	no.  we can only lookup the description
	could add "OP_XYZ" to struct #ifdef DEBUG

history needs a refurb
	doesn't quite save the right number of items
	lots of void fn(void)!
	when mkstemp() is in library, move history to library

might wanna add a "Other comments" heading at the end of the PR template
	rawtaz (irc)

do we really need: "set rfc2047_parameters = yes"
	why not always display a human-readable string?

MAILCAP / mailcap_path
	docs imply you can specify a PATH to files
	check RFC for clues
	update docs

hibernate-hook - would one be useful to anyone?
	after hibernate
		how does mutt know?
		does mutt know?
	do we need a hook?
	where's mutt waiting? key loop?
	notice jump in time?
	what about ctrl-Z suspend/resume?  same?
	does hibernate need a time option
	if (Î”t > n) then fire hook

update docs
	split readme authors
	more shields
	donate in more places
	credit all reference

python coder needed to update botty
	use github api
	commits
	issues/PRs

archive old repos on github

code docs
	include diagram of deps utils-trans2.svg

may need to rename one of:
	mutt/message.h
	imap/message.h

when you force an imap update: <imap-fetch-mail>
	a notification: X new mails would be nice

turn $sort into a string-list of methods
	set sort=threads,last-date-received,...
	allow more depth
	if sort is a list, ignore sort_aux?

fix default /etc/neomuttrc so that neomuttrc.vim doesn't show errors
	color header brightred default ^(From|Subject):
	last field isn't quoted and shows as an error

replace "for (int" -> size_t in libmutt

introduce warning colour/color
	cyan - message
	yellow - warning
	red - error
	use for setting config

DT_ENUM for magic, etc
	some DT_* will need extra data field
	e.g. those validating expandos
	sort could be split into separate sets

isolating libmbox means we can test lots of address code, etc

libemail? for structs etc?

quick votes on
	global variables (for config), prefix with 'G' or 'C'?
	mailbox dirs - one dir per mailbox
	unused parameters gcc/clang attribute

rename *idna* -> *idn*
	A == applications!
	but all the underlying functions are called idna

more 'rc' : 'r', 'rv', 'ret'

distinguish between
	DT_PATH => filesystem path
	DT_MAILBOX => could be virtual
	DT_COMMAND?

default (system) config
	ifdef VERSION > 20180101 set ignore_disabled_config

refactor idna code to make the entire file build-conditional

use idna.h IDNA_ACE_PREFIX "xn--"

mnemosyne
	add function to quit recording
	without altering any registers

vim-airline test po fix on old non-sync vim
(rhel6/7) create PR
neomutt/release
vim-interesting-words
define 24/25 levels
colourscheme 1: ROYGBIV
2: RROOYY...
3: RRROOOYYY...
0th: RRRRRR...
,v'n'

travis trusty - try more compiler flags
list autosetup release/commit hash visibly
	(for downstream packagers)
Update AUTOSETUP/INSTALL (or merge)

buffer *alloc* - make some space
_peek_ - get next token (save ptr), don't move dptr
	skip/drop_next_token
break up extract token - don't lookup '&var'
don't process `cmd`
what str cmds are used to put data in a buf,buflen array?
have mirror set of buffer_strfcpy, etc
strfcpy the only one needed
sprintf -> buffer_sprintf
(re)alloc as nec
79 buf,buflen + ~190 possibles
buffer_dupe()?
buffer_swap()?

who frees the charset hook regex lists?
hook.c?

change folder bug
startup
sidebar
c<enter> (index)
c<enter> (pager)
c? (index)
c? (pager)

drop remaining inline functions

make the shutdown cleanup (freeing memory, etc)
	#ifdef DEBUG
	nice to check, but not required for general users

configure devel options (for beta features)
	./configure --devel-FEATURE
	after time they become --FEATURE or built-in

document the 'hidden' uses of folder-hook
	when saving emails to $record

create neomutt account on docker.io
	advertise to dev list

if config (init.h) is de-centralised and docs are sectioned
	/u/s/d/neomutt/section-N.md
	how do we link ":help [OPTION]" to the right file?

all flag fields ought to be unsigned
	and fixed width, e.g. uint32_t

teams
	distro/X  X=debian,homebrew,etc
	code/X    X=notmuch,reviewers,etc

config
	after config split up commands and functions too
	into their separate components

history -1 => infinite

deprecate AUR repo & notify

drop mailmap, use management one

tag closed discussions as
	wontfix or postpone or bluesky?

Add warnings to doxygen headers, for
	@warning This function uses global variables: LIST, ...
	@warning This function uses static variables: LIST, ...

.mutthistory should be .neomutthistory

refactor regex calls, e.g.
	if (Mask && !((regexec(Mask->regex, nntp_data->group, 0, NULL, 0) == 0) ^ Mask->not))
	if (regex_match(Mask, str, flags)
	it checks pointers, etc
	takes 'not' into account

init.c main()
	Is this still true?
	seems to work ok without it
	/* Always create the mutt_windows because batch mode has some shared code
	* paths that end up referencing them. */
	mutt_init_windows();

move ncrypt/crypt.c disable_coredumps() to init
	there we could disable coredumps UNLESS
	the user enables debug logging

do something about assert
	one file has it disabled
	one file has it enabled

logging ideas
	audit the levels
	add sensitive logging option
	remove logging levels completely

move getaddrinfo, getaddrinfo_a into conn/dns.c
	check deps

debug logging
	use millisecond timestamps?

autosetup
	tags target?
	distclean rm tags
	delete *.Tpo?`

all functions that return int
	`if (!fn())` should be `if (fn() == X)`

REGEXEC() macro only used once

autosetup
	make V=0
	create min-build
		keep dirs

DEFINE library
	no mutt deps
	fully doc'd (doxygen)
	no _() text?
	no deps
		no external headers
		no global vars / structs
	unit testable
	coverage (not yet)
	no #ifdef's?

url -> lib?
	not independent enough
	#ifdef's etc

neo-vim repo
	project description
		tags
		topics
		icon
	fillout insights (communities) .github
	announce to users ml
	docs -> web/dev, pathogen, vundle, etc, see other plugins
	vim "team"?
		limit neomutt.vim access to them
	merge vim keys?

find 'for' without {}

autosetup
	.deps
	.objs
	from min-build

muttrc ifdef
	/file absolute
	./file relative source

docs
	rename manual.{txt,etc} to guide

logo competition
	cartoon dog
	head
	letter in mouth
	need to look good in b/w
	and in line drawing

audit/testing/coverage
	trace one function at a time, check all
	vars defined âˆ€ inputs, doc'd coverage
	test code

"set ?imap_pass" show sensitive data
	what could we do about it?

docs
	which sections are conditional?
	"neomutt -v" output, check docs
	icon on help/web page

build docs
	include out-of-tree example
	and cross-compile example

doxygen
	add ncrypt
	add imap
	add lib dependencies

libconn
	conn/getdomain.c -> conn/dns.c
	refactor init.c dns functions to conn/dns.c

neomutt user maintenance
Log person's last:
	commit
	comment
	issue
	team
	private member!

doc all refs to "mutt -v" output
	-v make the enabled hcache more visible

bug: can't copy/save email without decrypting it

have a different index_format for indicator line?

connections
	raw - fd - host, port
	ssl - encryption - certs
	imap - login - user, pass
	tunnel?
	who negotiates ssl, sasl?
	how does opportunistic ssl work?

create mechanism for *literal* set variable
	set pass = literal< ... >
	how do you know where it ends?
	perhaps literal must be the last thing on the line?
	would the variable need to know?

kill all function names with plural objects
	new_body() OK
	delete_bodies() BAD
	hard to search for similar functions

use summary log for informational info
	Sent email "Subject" to
		ppl-list
	Received 4 new emails in 2 folders
	this is level 1 info
	need much more of this

mutt-1.9.1
	attach mac text file (CR) OK
	neomutt eats all CRs

change aliases from list to hash
	how big?
	100s?

where is punycode encoded/decoded?
	extract to lib and test

keep and display different address parts
	raw (from header)
	canonical (parsed)
	comments
	display (de-punycode)
	comment string includes "()"

run gpg signature testing asynchronously (when opening email)
	would need placeholder in the email
	would need to redraw/render the email after
	thread safety

if a struct has a X_free() it must have a X_alloc()
	check all allocs are *C*alloc

libfile
	rc = read_into_buffer(filename, buf, len, *fp)
	if fp is not given the file will be opened, read, closed
	if fp is given the file will be read, not closed
	rc
		OK (file fits into buffer)
		OK_MORE (filled the buffer, need more space)
			perhaps stat the file and return how much
		ERROR (see errno)
			or have a simplified error
			with msg lookup

libfile
	append_file("name", buffer)
	for functions that don't need to do anything else

static functions with leading _
	add to style guide

add dependency info to library doxy pages
	either a text list, or
	a dot diagram

turn some config vars into (string) lists
	hidden_tags (separator = ',')
	mailcap_path (separator = ':')
	send_charset (separator = ':')
	split at config level, then call the validator on each list item

all global variables should be set using the config mechanism
	therefore changes to globals would trigger notifications
	this means we need fake "config" items
	(tagged to be invisible to the user)
	like all the "pseudo" bool values

lib/address.c and rfc822.c
	NOBODY is using error codes:
		ERR_BAD_ADDR_SPEC
		ERR_BAD_ROUTE
		ERR_BAD_ROUTE_ADDR
		ERR_MEMORY
		ERR_MISMATCH_PAREN
		ERR_MISMATCH_QUOTE
	or globals:
		RFC822Error
		rfc822_error()
	functions aren't resetting error code on success
drop them?

research all RFCs relating to email, etc
	graph of dependencies / obsoletes

how do we test the static functions in the libraries?
	make *everything* public?
	#ifndef TESTING
	#define STATIC static
	#endif
if not, they must be completely robust

up-to-date list of functions/data for each library, split into:
	public functions/data
	static functions/data
one (background?) colour for each library
one shared colour for ALL static functions
use ctags to generate lists

create a literal string marker:
	set x = /Don't "shoot"?/
or something like vim's unmagic \V

docs, etc: drop "All mail clients suck..." quote from m.e.

kill ISSPACE macro -- no benefit to having it
	what about the (unsigned char*) cast in it?

xdg/neomutt/CONFIG
	config is standard, rather than (or as well as) neomuttrc

mutt_account_tourl Account arg should be const

move lib doxygen notes to header file?

tests on lib should also be run on 32-bit arch

2017-09-27 #mutt
<fire2199> by the way... why is there not a pre-defined variable for setting the config folder?

pgp-hook is synonym of crypt-hook
	needs deprecating, too

find "sprintf(x->data" for buffers -> buffer_printf

update _dev/signing.md
	wget https://github.com/neomutt/neomutt/archive/neomutt-20170912.tar.gz
	wget https://github.com/neomutt/neomutt/releases/download/neomutt-20170912/neomutt-20170912-CHECKSUM
	gpg2 --verify neomutt-20170912-CHECKSUM
	sha256sum -c neomutt-20170912-CHECKSUM
	test using build user

change feature neomuttrc examples to be useful working versions

rebuild all of mutt-*, neomutt-* binaries
	make sure they all use /etc /usr
	symlink, or put config so that mutt has good defaults

Create LTS release branched from 2017-09-12
	until all big features are done
Change all version strings to YYYY-MM-DD rather than YYYYMMDD?

mutt -DX read config and display deprecated options
	and their replacements

distro:
	update fedora, copr pages
	rewrite copr page
		news
		links to features

notmuch: what do users do externally?
	can these actions be done using NM API?
	before neomutt -> startup-hook
	periodic -> timeout-hook
	after neomutt -> shutdown-hook
	what do we need to do?
	where would the code fit in?

docs - General build
	config options
	make targets
	install/uninstall

mutt cmdline option to show config search paths?
	probably not worth it

deprecate muttrc in favour of neomuttrc
	1 Restore all the mutt search dirs
	2 Drop the dated/versioned configs (nobody used them)
	3 Make a release
	4 Start deprecating muttrc (with warnings)
	5 Wait a few releases
	6 Drop muttrc

debug config options
	-O0 -g what else?

add colour to the browser

"wrapmargin" config option needs deprecating like the synonyms

notifications happen when something happens, e.g. new mail
consider a "no longer any more new mail" notification
negative acknowledgements
each notificiation
	would be independent
	could be on or off
user is notified when a notificiation status *changes*

upstream
	s/ascii_str/mutt_str/

change safe_rename
	ENOTSUP
	EOPNOTSUPP

sidebar intro -- mention "mailboxes" command

use bsearch to search commands list

merge and drop "scripts" top-level repo

test fcntl and flock on /var/spool/mail/mutt file

remote config option
	user logs in - host, user, password
	first email in inbox (artificially old) contains config
	email is encrypted to yourself (optional)
		need local private key
	ask user: "Apply (verified) remote config?" (optional)
	separate files?
		have an entire folder for config
			magic name - neomutt-config
		alias files
		mailcap
		certificates
		anything but caching files
	have email signed -- easily verified

pgpinvoke doesn't escape the filename of the email to encrypt (last param)
therefore
	set tmpdir = "~/.cache/mutt three"
makes it impossible to send encrypted mail

change build to install to ./install
alter my .gitignore to ignore ./install

:set (list all vars) should depend on the context
(which account/mailbox you have open)
:setlocal (just the account vars)

imap keywords
	work out limitations
	test postpone delete
	expandos with nested threads
	test cases and instructions

need neomutt glossary (search first)
	add to guide

aur distro page neo gpg key

tweak doxygen to #define more things for better coverage

ask lists about slang usage
	drop slang

add rfc1847 gpg
add RFC1522
utf-7 -- RFC 1642, superseded by RFC 2152
rfc3986 - URI

listen for tags -- list somewhere public
https://github.com/neomutt/neomutt/tags.atom

add make tags (to exclude junk)

split the hcache serialisation by struct
	address_serialise
	buffer_serialise
	etc
each struct calls the children it needs
put in some version numbers, or
field type and length bytes before each field

hcache pruner
	use list of mailboxes
	use list of backends (you want)
	won't work for caching files, only folders
		unless we trawl through EVERY email
		might as well cache them too

in pager, which objects are precious/vunerable
	which might be changes outside of the pager

magic -- set *string*, save *int*
	retrieve which?
	or both?
	retrieve string from Mapping[value]

hcache: x [y] z
	y = default

buffer code solaris9(2005!) check

turn STRING, LONGSTRING into numbered consts
	STR1024, etc
	clearer

predefined buffer macros (static)
	=> addstr could fail (out of space)
	easier memory management
	BUFFER256, 1024, etc
	allocate buffer for you & memset it

document meaning of "distros" pages
	min vm install -> build -> debug

are imap vars used outside of imap code?
what about sidebar, browser, etc?
keep their own var lists?  register at startup?

--authors reads file /docs/AUTHORS
--license reads file /docs/LICENSE
if missing, print placeholder URL / GPLv2 respectively
	=> getopt long

now that IMAP, et al, are compiled-in, what's in the docs
	that might be excluded (makedoc conditional)

check management README (missing)

update newbie/hard list from discussions -> focus

check distro installs
	provide list of all installed files/types, etc
	cf each distro

two stage index update?
	hide, refresh
	update
	NO, index vars would still be wrong

ask neou for logo suggestions
	hold competition for art?

use install-sh $(INSTALL) instead of cp

log before regex ops & other risky functions

parse_set: unset DT_RX doesn't work

Variables
	struct {type, hash, name, union {vars}}
	OPT_INT(Var)
	get_int_opt(name|id)
	type includes "my_"-ness
	who holds the vars?
	get(NULL, name) => default?
	hash inside or out, or both. BOTH
	HASH *vars
	get_name (id)
	get_hash(name)
	get_var(name|id)
	set_var(name|id, var)
	some vars need a validator
	variable sets know their parent
	set variables via a function() -> notifications
	get variables direct from their Var
	variables don't know about refreshing
	where are validators / notifications stored?
		globally (on default config-set)
		per-config-set (allow overrides)
	key my_vars in separate set?

	functions per set, per type
		setter
		getter
		validator
	set by string (from config)
	get by type of user's choice
	internal getters: string, int, bool, void*
	overridden getter returns "Var"?
	then coerced to type?

	hc_init()
		register_type(DT_HCACHE, ops)
	parse_set()
		-> hc_set(string)
		-> hc_validator(string)
	validator per type
	REQUIRE get_str âˆ€ types

	have separate int/uint variable types?
		which variables need negative values?

	have a 'time' variable type
		allows setting: x=30m (minutes), etc
		may not be worth it, most times are sub-1minute

	strdup? or does the config_set take ownership?

	use high bits of 'type' to save free()/don't free() of a string

	how does 'reset' work?  where is the original value stored?
	do we keep it in the hash elem?
	a "parent" config set of original values?
	how many config values are changed?
	too much overhead?
	hashelems won't be constant
		init var  == address1
		set var   == address2
		set var   == address2
		reset var == address1
	too much overhead?

	how are variables read?
	macro doesn't work if things might be overridden/reset
		can't cache address of HashElem
		unless we have a RESET flag
	hash id may not be unique
	need to work with string representation
	get_bool("sidebar_visible")
	horrendous duplication of strings?

	reset means:
		keep the old value
		or remember who owns the variable

	get/set
		hash = overhead looking up string when USING the variable
		vars = overhead looking up string when setting variables

	notifications to invalidate HashElems?
		too complicated

	caching options could be account-local
		header cache for local mboxes
		body cache too for remote mboxes

	parse_set
		get hashelem
		get id from he
		lookup str_set
		set_set(he, value)

	base types
		bool, num, str, quad
		mutt -D âˆ€ dump specific
		else str_get

	coercion hc_get_int(he)

	dropping hash means losing the trapping of set-value
		we lose the ability to trigger notifications

	how many variables are going to be account-specific?

	how will +=, -=, *=, /=, ^= work?

	path variable type?  subtype of string?
		flags: FILE, DIR (or both)
		does the setting engine need to know
	mailbox variable type?  subtype of string?
	command variable type?  subtype of string?
		more scrutiny for setting?

FS layer
	211 fopen, 346 fclose, 285 unlink, 70 rename,
	mkdir, mktemp, stat, exists, (read|write)_(string|char)
	85 seek, flush
	tie in with mmap
	tie in with memstream/buffer/tmp
	distinguish tmpfile, generated help page, partial email
	memstream -> better buffer interface
	canonicalise path (realpath)

Misc
	where are the "source" relative docs?
	alias_file, certificate_file, etc aren't relative
		alias_file
		certificate_file
		debug_file
		history_file
		ssl_ca_certificates_file
	relative to what?
	all *_files relative to:
	1) the source file they're read from
	2) current working directory
	3) User's muttrc? NO
	4) $XDG_CACHE_HOME? NO

RFC
	account command user ml, devel ml

Decide
	#ifdef DEBUG
	move some web/discuss to "hard"
		the ones we really want
	new variable type MAILBOX
		could be a "/path" or "+mailbox"

Doxy - commit config
	scripts to gen/code on web
	10m doc a function
	(sort functions by usage)
	(generate template âˆ€)

Searches
	list all GH matches
	10m - classify
		old, config, new, different

add release count to changes doc on web

hcache swapping crashes
	encode type into hash

sidebar_account colour?

account: use $spoolfile to merge an inbox into the account line
	spoolfile not set
	AC_NAME
		inbox  1/6
		apple  2/7
		banana 3/8
	spoofile=inbox
	AC_NAME        1/6
		apple  2/7
		banana 3/8

Account
	Buffy children[];
	char *name;
	Account *next;

account [[name] mailbox]
	mailboxes
account

options accelerator '&' double up to escape
static buffer parse translations on first run
needs to cope with missing options or
options reordered -- still need "letters" internally
NO, need letters in po file

modular mutt: imap & nntp share some functions
"subscribe" -- both should declare and mutt notifies both?
or can it tell whose command it is?

devel list - favourite vim plugins -- promote mine?

compose: flexible layout => multiple lines for To: CC: etc
(when necessary)  Hide lines that aren't set, e.g. BCC: Mix chain (optionally)
Limit number of lines to 2 or 3 in case of degenerate lists
abbreviate with "(+6 more)"

each variable type in init.h should have its own validator
(null for free form strings, or unranged numbers)

relative 'source'ing of files doesn't work if the base is a symlink

browser.c, buffy.c have a lot of
	struct Buffy *tmp;
	tmp's a bad name for a variable

create an address interface for lookups / completion
	basic plugin uses aliases
	notmuch can supply its own plugin

pgp_invoke_decode
	This is historic and may be removed at some point.
	lots of simliar functions being redirected
	strip out?
pgp_application_pgp_handler
	needpass (bool) starts as -1!

safe_free() wrapped by macro FREE()
if debug take sizeof arg & memset to 0xDD
what about void*? need type info
char * needs strlen

warning on muttrc synonyms
	this will be removed in x months
	this will be removed after DATE (better)
	suggest correct command

devel ml favourite git config

off_t used in browser.h
	don't need OFF_T
	ftell long vs off_t

linux kernel
	IS_ERR, PTR_ERR
	container_of
	LIST, list_for_each, etc
	ARRAY_SIZE
	BIT
	min, max, typeof
	swap
	round_up/down

doc sample branches

vim-like scrolloff option for pager/index
use travis env / website to control build verbosity
sort format string switches

update gpg keys website/dns
newbie page Twitter toogley
getside allowed, not checked #ifdef'd

CRON
	2017-11-01 gpgme version
	2017-11-01 sun mailtool, nec?

PR requirement all commits build
	make dist/clean on merge
	not nec of each commit

git repo
	real names (unless anon)

email
	folding the index
	gettext -> non-optional?
	wide ncurses mandatory?

promote logging to default -- too useful
	set max level?

other distros, slack, ubuntu
search for patches & list and adopt
find maintainers for distro pages

conceal IMAP password
#ifdef entire file in smime.h
	pgp.h pgplib.h remailer.h smime.h

hcache auto magic everything
READMEs tidy review
index folding cf vim
vim plugin - cino options etc

travis/neomutt-test-configs configs & build tags
init.h -> options.[ch]
eliminate WHERE
mutt -D options
shrink authors (split out)

with options split into sources, mutt -D could omit entire sections
	if nothing has been set, e.g.
	all of pop_* have default value

compose bug
	E (edit headers) fails if $editor isn't set

colour highlight/underline _Q_uestion, _O_ptions 'q', 'o'

simplify y/n questions.  no more "Are you sure?", just
"Quit? Y/n" -- all ask-yes, ask-no

renew s/mime cert & test & desc steps

create screens overview of all areas of mutt.  provide:
	sample data/emails
	sample muttrc
	instructions to repeat

special reader for alias file, that parses comments, e.g.
	# tags:red,blue,green phone:'1234'

plugin fs-layer
	basic: files + stat, etc
	adv: file, inotify
	others: fmemopen, mmap, libuv

doc sample branches
	web page with list

docs:
	http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html

neomutt-test-config.sh
	--save dir
	put mutt's in an output dir
	log each numeric name with the compile options

mutt --authors
	list of all neomutt contributors
	matches {README,AUTHORS}.md
	doesn't have to be in-code!
		could be distributed file
		display in pager

drop support for old SSL versions

cmdline --about links etc

MacOS iTerm
	Ctrl-O doesn't work
	"stty discard undef" fixes it
some other terms too
	rxvt-unicode, openbsd 6.1 - verified
	"stty flush undef" needed

deprecate ChangeLog*
	they're in the git history
	or abbreviate with extreme prejudice

vim-neomutt plugin
	folding for c

use signal to interrupt IMAP connect
	at time of resume (after suspend)
	systemd service?

Project management:
	contact distros
	organise web updates
	search for patches

change #ifndef's to #warning too
	#ifndef SYMBOL
	#define SYMBOL
	#warning "Please tell neomutt devs about this
	#endif

write REQUIREMENTS doc
	C99
	SUS (Single Unix Specification)
	NotMuch >= 4.3.0
	etc

drop notmuch checks -- assume newer version?

double-width index (continuation of first for wide screens)
	| side | index1 | index2 |

coverity -- some code untested due to config options, e.g. openssl
	need coverage test

use *mutt* to generate sample mailboxes
	create folders
	create emails
	etc

branches in neomutt repo may be eligible for a free rebase
	develop in your own repo, and they may not

create doc repo
	have neomutt repo as a "fixed" git submodule
	or a submodule of a doc-gen repo

macro REGEXEC is only used once

ask people how often they'd like to be chased up

warn on option synonym usage
	{ "pgp_autoencrypt",            DT_SYN,  R_NONE, UL "crypt_autoencrypt", 0 },
	{ "crypt_autoencrypt",  DT_BOOL, R_NONE, OPTCRYPTAUTOENCRYPT, 0 },
	crypt_autoencrypt is the visible option
	warn if pgp_autoencrypt is used

all example muttrcs
	bring them up-to-date (valid options)
	or delete them

2017-03-22 #mutt
	14:43 <wayne47> is there a way to specify a unique SMTP server per mail box?
	14:44 <wayne47> so that when I read mail via imap from foo.com, outgoing mail uses foo.com and when I read from bar.com, outgoing mail uses bar.com (etc)?

web toplevel dir
	/muttrc
	move all samples from the guide
	link guide to samples

configure summary?
	--disable-docs -> docs:         no
	--disable-po   -> translations: no

"approved" tag? when an idea under discussion gets the go-ahead?
	or just remove the "discussion" tag?

coding standard: two copies
	part 1:
		full descriptions
		examples
		anchors <a name="">
	part 2:
		auto-generated (script or jekyll)
		concise list + links to full examples
alternative, have coding standard in _std dir
	pieced together by jekyll for both versions

jekyll page type "hidden" -- don't list

topics for my github repos, icons?

sync web & contrib versions of hcache benchmarks
	how?

mutt marks -- are they mailbox-local?
	can we distinguish (like vim) betweeen
	`a  mark in this index
	`A  global mark (potentially in another mailbox)
		is it safe to change mailboxes without warning?
		I suppose macros do this

convert the bug-fixes section of the travis build.sh to work on the upstream branch
	(test all commits, with a small spread of configs)

botty
	look for commits?
	a7b0fb8
	https://github.com/neomutt/neomutt/commit/a7b0fb8
	<p class="commit-title">Clear out extraneous errors before SSL_connect() (see #3916)</p>

sidebar intro
	priority of colours may be wrong after upstream changes
	https://www.neomutt.org/feature/sidebar-intro#intro-sidebar-colors

2017-03-06 #mutt
	17:40 <parosen> "set -o vi" functionality in mutt?

when saving a file (being asked for input),
	add a mechanism to expand a mutt variable
	like vim's ^R

create muttrc that undoes everything that might be in /etc/Muttrc

po
	don't need line numbers for git
	might need them for poeditor

webpage: new status
	wip-help -- "Work in progress - Please help (instructions)

api
	functions to query aliases

add template email for newbies getting credit

script to follow all the projects members

bot command
	/notice botty doc $folder
		privately messages botty
	botty replies in-channel

.gitattributes
	ignore changes to .travis.yml
	from merging branches
	hmm... but it'll be in all branches
	does this make sense?

move the guide to readthedocs.org?

lua styling/colour callback
	c functions: hprintf(), push_attr(), pop_attr()
	shared definitions: C_FG_RED, C_FG_BLUE, A_UNDERLINE, A_REVERSE, etc
	c       lua_style_line(HANDLE, DATA[])
	lua     hprintf(HANDLE, "hello ")
		push_attr(HANDLE, C_FG_RED)
		push_attr(HANDLE, A_REVERSE)
		hprintf(HANDLE, "world")
		pop_attr(HANDLE)
		pop_attr(HANDLE)

investigate:
	global config
	list all the IMAP variables
	list all their uses

account object that lives above BUFFYs
	emails
		maildir
		mbox
		imap
		pop
	notmuch
	nntp
can be visible or hidden

github/irc bot.  notify on:
	@neomutt/reviewers Please Review -> "guyzmo asked for review of #298 (Desc)"
	"flatcap approved #298 (Desc)"

reorganise docs
	migrate them all to docbook (or markdown?)
		if markdown, how good will the html look?
		what about conditional docs?
			how do we only include that which we compile?
			too hard?
			WHICH sections are currently conditional?
	generate man pages from these sources
	strip init.h of its docs
	get default values from "mutt -D" instead

github peer review bot:
	https://github.com/felixrieseberg/peer-review-bot

work towards: no commit without an issue
	A reviewer's "OK" for an idea can come from:
		issue
		IRC
		mailing list

save backlog of messages in a deleted file!

issues for upstream sync - share the lot

Releases
	comments = docs
	translations too - in either release

imap flags summary

example notes for a PR
	don't walk away
	you need to work with us to get it merged
example notes for an issue
	need to be around to help us find the problem
	might need to test the solution

doc how to become a reviewer

guyzmo's merge/review notes

issues: shooting for zero
	try to get down to zero issues/PRs
	what about long discussions?
		close them
			two weeks after last comment
			four?
	what about unlikely enhancement requests
		doc on website (with links)
		close them

filter to turn :+1: into emoji character

link to OS *guide*

conceallevel (for pager/index)
	0 off
	1 conceal
	2 conceal and squash
for index, 1 list "there are 'n' concealed threads"

irc notes: assume humour before anger/offence

pager colour filter start/stop regex + lua script?
what does it insert?  or does it call back to get mutt to highlight?
script is stateful

squash or not - consider need to revert 1 piece
~Y docs match label missing?

flowchart for sending an email, showing:
	screens,
	<functions>
	hooks
	include signing
	postpone
	screenshots (text)

merging explain to newbies about squashing

check nntp for updates
muttrc linter correct, or comment out?
base64 3 byte work chunks -- bigger?

tagged initialisers -> coding standard
variable length arrays -> are they safe?

review describe with pictures the three github merge options

find markdown code theme that I like

nntp on MY server - 3 groups
	user ml
	devel ml
	github issues
what about:
	mutt user ml
	mutt dev ml

pre-reply hook -- takes original email and formats it however
or
pre-sent hook, filter before send?
why bother?  should be done in editor?

"source" command relative to $cwd or previous file

categorise all messages in code
	info, warning, error, question
which imply user to do: nothing, be informed, worry, query user
errors should be clear whose fault
user: e.g. type something invalid
config: file invalid / missing
code: internal error, missing ops
separate what user cannot do vs MAY not do

can't find mailbox ops error mesage -- coder only compress.c

po multi-fold comment, english, foreign -- why bother?

web misc contrib page <h1> per item

safe macros enhancement request: https://github.com/neomutt/neomutt/issues/69#issuecomment-230442101
	zmo suggests: emulate the augroup feature of vim :)
	macros specific to a folder, or notmuch, etc
	have an "account" function that limits to one account
	account "imap://..." set sidebar_visible = yes

notmuch:
	nm_get_all_tags() is called twice (once to count, then once to build the list)

mailbox +/wibble
mailbox =wibble
	aren't equivalent, caused problems for squillis on irc 2017-02-10
	# mailboxes =INBOX "+/Drafts" "+/Sent Items" "+/Systems/A" "+/Systems/B" "+/Systems/C"

git map
	read config for default remote

release criteria for a new feature
	changelog
		changes
		num commits?
	clean build
	configure --option (off)
	basic docs
	tidy code (whitespace, etc)
	example config
	screenshots of new features
		text/html screenshots if possible

trash folder: forget the directories idea?      who cares about deleted stuff?
trash needs index panel expando -- Original location
archive *needs* dirs %Y / %From?  auto-create, auto-delete on empty
<empty-trash> function
"empty-trash-confirm" variable quad-type
expando for status bar -- trash-size (bytes/Mb) trash-count (number of deleted)
archive needs X-Original-Dir (like del)
	<unarchive> function
tie archive to notmuch to auto index
status bar needs expando for archive contents in (kb,Mb) or (count)
archive/trash expandos -- unless too heavy to calculate
	consult indexes for results/numbers
	does the index store size?
archive needs rich expando save strategy
	%Y, %m, %d -- lots of dates
	%from, %to, etc authors
	%list, $orig-folder
	size/count of attachments
	every conceivable attribute of original mail
use NNTP server (on flatcap.org) to store mentor conversations
	mailing list history too
	topic per mentor idea
	topic for introductions
can nntp compress its mail folders?
	or just compressed disk media underneath
	can mutt-dev-list maintainer get archive from marc.info?

type:investigate ?
	something that needs research
	might lead to docs
	might not lead to code

can I (neomutt) sign the copr key?

mutt -D? (extra options)
	turn output into valid muttrc
	validate muttrc without running
	only display CHANGED values
	only hide SET values
	SORT the options
	add comments from init.h?
	show default values/keybindings

limit-to-tag function?

turn off status bar, like vim laststatus

limit current thread
	new mail shows up even when not in thread

commands
	rename all those containing _ (underscore) to - (hyphen)
	accept either
	autocomplete to hyphen
	linter for muttrc -- with warnings

issue - auto screenshots - sample mailbox

branch 123-desc auto work-in-progress

create list of current scripts shell/perl
	build processors
	automators
	list -> website -- link to repos
	#!/bin/bash ->  sh

newbie - recommend setting 'set user_agent = yes'

mutt IPA /mÊŒt/

magi-sort
	regex matching [patch] part -> sort alphabetically by that part
	emails from same author
	[PATCH v2 5/7] iio: adc: stm32: add optional dma support
	[PATCH v2 6/7] ARM: dts: stm32: Enable dma by default on stm32f4 adc
	[PATCH v2 4/7] Documentation: dt: iio: stm32-adc: optional dma support
	[PATCH v2 1/7] iio: adc: stm32: add support for triggered buffer mode
	[PATCH v2 3/7] iio: adc: stm32: add trigger polarity extended attribute
	[PATCH v2 2/7] iio: adc: stm32: Enable use of stm32 timer triggers
	[PATCH v2 7/7] ARM: dts: stm32: Enable pwm1 and pwm3 on stm32f429i-eval
	[PATCH v2 0/7] Add support for triggered buffer mode to STM32 ADC

add abort-mailbox to nntp, etc
	raise issue

change release cadence?
	feature release
	bug-fix release
only update translations on bug-fix release
fixes for docs are bug-fixes
two open milestones (next-feature-release, next-bug-fix-release)

#define the mailbox -2 abort, -1 error

list Sven's unused letters to the main guide

leave-folder hook?

coverity to use travis-build script!

chronic "moreutils" package

web
	```note
	css proportional font
	bold first line using css
	add icon?
	```code
	specifically for code?
	no interferes with markdown highlighting

poedit suggest disable wrapping -> web instructions

mutt.pot --no-wrap

add myself to version.c copyright, mutt -v

xgettext notes, L10N, _(), N_()

po.vim
	toggle English vs Foreign
	options to show/hide
		whitespace
		dots
	set symbols

shrink version number to YYx
	2 week releases -> 26/year, 26 letters!
	week 16 release => 16q or 16Q
	52 weeks => AaBbCc etc
	what about stable release?
	-LTS needs multiple releases but one name

complete review of string handling in mutt
	string contentation
	tokenisation
	matching
	etc
	see which, if any, gnu-only string functions are useful

donate page
	presents for flatcap?
	contributions to neomutt.org domain?
	get-together costs?
	what?

offline working
	mutt hangs whenever the network goes down and is essentially useless
	what's needed to make mutt useful without a network?
	"auto-postpone"?
	"send-on-reconnect?"
	cache more information about mailboxes?
	network heartbeat to detect connectivity?

magic "combined" folder
	mbox part for unchanging, historic stuff
	mbox part needs hcache for speed
	maildir part of changeable stuff
	combined into one view
	need method to "fix" emails i.e. mark them as no-more-changes

inotify âˆ€ local mailboxes
	2016-11-16 12:13 <royger>
	flatcap: maybe using some abstraction library, like libfswatch
	(it seems to support kqueue, inotify and fsevents)
	https://github.com/emcrisostomo/fswatch/tree/master/libfswatch

collect useful tools in neomutt org:
	urlview
	offlineimap, mbsync
	procmail, maildrop, sieve
	etc
	for notmuch sync accross machines, I have found this: http://www.muchsync.org/muchsync.html
	swaks: smtp tester
	khal
	calcurse

translation - coding, scripting, languages

docs: highlight parts that are neomutt only!
	put in yml header (when docs are split up)

web: features list page
	add upstream column

How to Use Mutt doc
	step 1 - select your source
		POP, IMAP, local, offlineimap/alternative

Distro pages:
	Debian, Gentoo, MacPorts, NetBSD, Void
	need filling out

update all doxy templates
	JAVADOC_AUTOBRIEF on
	FULL_PATH_NAMES off
	SORT_MEMBER_DOCS no

getting started
	mention travis notification email

website jekyll serve instructions

web: changes page -- since/relative to mutt

web: misc page for extra options that aren't in features

generate valgrind suppression file
	contrib?
	devel page instructions

annouce GPLv2 usage for project
	make it clear on the (devel) website

stable branches for LTS releases?
	Why?  Mutt doesn't

code school -> neo branches (regularly rebased)
	[school/new-variable]
	[school/new-function]
	[school/new-color]
	etc

each web dir, have _source.txt
	details origin of page data
	scripts for generating

start de-globalising (pass to functions)
	Context
	Incoming

web
	auto-generate list of WIPs
	[devel/*] -> list
	where does the description come from?
	update daily
	since DATE
	last update DATE

DANE instructions for neomutt gpg key

split out upstream features, or yaml tag them

create file on all neo members
	who's who
	who's done what
	date of last contribution

distros
	platform {linux|bsd|macos}
	where to coredumps go?

slang deps on distro page

"edit this page" button
	doesn't make sense for docbook conversions

move sidebar-intro to howto and fix links
	change id to howto/
	or split out completely

distro contact details
	separate from maintainer

distinguish distros' neomutt
	{vanilla|patched}
	{replaces|addition} to mutt pkg
	{distro|user} maintained
	{all|limited} features included
	{hcache type}

virtual-mailboxes => notmuch
	=> don't need "notmuch://"
	or even "?query="

imap supports queries
	"+?query=tab:inbox"

named-mailboxes eats two params
	can take multiple pairs of params

un-named-mailboxes needs to work against path or description

website
	404 is static!
	manual/guide -- not a collection
		needs to be ordered
	src code is not a distro, so list it last

enforce real names in git commits?

rfc add line numbers and 'a' links
	create as a book in main docs (for linking)

look through upstream mutt trac for
	enhancement ideas
	feature patches to apply
	bug fixes
	[easy] ?
	comment in trac "neomutt adopted" when done!

settings for uncrustify, clang-format
	for current neo code
	for future  neo code

have a NULL cache which is just a copy of the email
	might *still* need a DB of some info
	tie into offlineimap

named-mailboxes use Mailbox Shortcut % ?
	%tidy-name
	needs plugging into other code
	abbrev names to "%name" if possible
	if configured?

run notmuch new from mutt when new mail arrives
	necessary? or not?

merge notmuch
	"named-mailboxes" command
	can describe sb entry
	how to nest virtual?
	sb obtion: display real, virtual, all mailboxes
	nest -> fake mailboxes
		named-mailboxes name [NOTHING]

neomutt members -- ask preferred method of communication
	pref name @flatcap, Rich

cache files need to hash their name too
	to avoid two systems "sharing" a single hash
	and crashing

nested-if
	stack of nesting chars in char[]
	$? or $< push only
	matching char => pop
	32 deep stack

2016-10-25 11:04 <mgedmin>
	pet peeve: when I try to open a gigabyte-sized mbox file with 10,000 messages, I cannot abort that

2016-10-24 20:54 <flip214>
	it would be very nice if switching to an imap folder could be aborted by ctrl-c
	having all headers fetched anew and having to wait for 2 mins, knowing that the wrong folder is being loaded, isn't that nice
	the counter for the headers fetched (N of M) counts up
	Ctrl-C gets ignored

mutt_launcher
	use a pipe to channel log messages back to mutt
	pipe(), fork()
	dup2() to replace stdout,stderr
		=> printf to log
	stdin -> null

pre-cache app?
workflow:
	offlineimap
	notmuch new
	cache-every-file

code school
	variables
	functions
	architecture 101
	web top-level

need to document "missing" keybindings
	^Q ^S flow control
	^O terminal (BSD only)
	2016-10-23 22:16 <Riviera> stty discard undef; mutt
	"stty -ixon" disable Ctrl-Q
	can this be done programatically by mutt?
	"stty -a" to show settings
	cfmakeraw(3)
	zsh is able to reset terminal configuration after each command with ttyctl -f

new users -- [ci skip], #123 docs

would notmuch be able to filter out muted conversations?
	No, not unless we change headers and notify notmuch

issues -- always assign (for later reference)
	fixer/mentor only makes sense for bugs/enhancements
	what about questions?

2016-10-21
13:24 <mgedmin> on ubuntu I think it's best to 'sudo apt-get build-dep mutt' to get all the libraries

docs - keep reference copy of all relevant RFCs
	links, obsoletes, etc
	mailcap too

make tags -- ignore standalone tools
	needs to ignore #ifdef TEST, too

external testing
	how many external events can we control?
	how many can we simulate?
	via pretend keystrokes
	key, mouse, winch fs, net

need way to repeatably test net failure
	tcpkill -- doc in dev web

find all non-mail users of pager
	add to index/pager tests

ask new contributors to fill in 5 function prototypes!

does label workflow make sense for PRs?
	if not, why not

new feature checklist -- code all configs, doc, readme, web, doc validate

index preview mode - display 'n' lines of the email body
	when in the index

nested-if -- index-format display ? if doesn't match string put in
	%<> changed to %? !

doc all features' functions doxygen style

move separate tools to a separate tools directory
	adjust ctags to ignore them

bot on server to mail dev list on git commits?

admins need to make a release in 1 week's time -- practice
	(one of them, or all)

distro web pages need install instructions for development, too
	min/max dev packages to build & debug neomutt
	all instructions based on min distro install
	note exact distro instructions were written for

Create every doc idea as empty template page in web
	with notes
	list of docs in project "docs"

htop colour palette only works well because there are
	few object to colour

sidebar -- disable indent, etc if sorted

calcurse -- curses calendar app

"report issue" notes -- OP needs to be around to:
	answer questions
	run tests
	etc

can we workaround the case of gpgme + self sign / smime?
	but use it otherwise?

new mail hook -- frequency limit
	if time < 5s since last notification

function to turn option list from
	(S)ubject to *S*ubject (highlighted/colour)
	make them consistant across mutt
		some are just capital letters

imap/pop âˆ€ devs
	no outgoing
	incoming to user@dev.neomutt.org
	sample emails refreshed nightly
	btrfs de-duped -- cron
	or cp --reflink

newbie notes
	PR vs branch
	you can't co-work on a PR

function fuzzer + scripting
	x inputs
	y globals
	difficult because of too many inter-linked structs
	and poorly designed functions

website top-level for scripts
	git submodule?
	like irssi scripts

debugging docs:
	100k lines of code
	help us find out which
	bug report blurb

21:55 svenG "No attachments, cancel sending? ([yes]/no):"  so NOT cancelling the sending.. sends. o_O  double negatives are always so confusing.. :-/

de "neo" the trash docs & keep in neo repo

index folding (happens above level of emails)
	fold by option, e.g. day, month
	Wednesday
		mail
		mail
	July
		mail
		mail
	uses extra lines
	saves width

$sort = [prefix-][...]order
	prefix = reverse
	prefix = thread

vim has set vs setlocal
	mutt has accounts as separate entities
	set      var => global
	setlocal var => per account

new two-letter expandos
	initial letter picked with no clashes anywhere
	=> 26 more expandos to use

docs - nested if
	better explanation of %<>

scratch-pad function
	creates a tmp file
	functions can put text in it
	you can view it in the pager
	you can edit it
	you can save it
	could be used by scripts to save output

breakdown
	source (simple)
	source (conditional, e.g. feature)
	source (conditional, e.g. OS libc)
	build (scripts/Makefiles)

howto: update website
	ruby, jekyll
	which gems needed?
	"jekyll serve" to test

multi-line index.  options:
	for all entries
	for current entry
	for current thread
wrap long fields
sacrifice height to save width

justify every file in the neo build
	use min-build to start
	show compilation steps

mime-typer plugin
	notify if the mime type doesn't match what *you* think it should be
	change the type (option)

window manager
	menu mode, like jed/links
	popup menus

colour manager, see htop

pgp key manager/management
	list, ignore revoked keys
	sort options
	filtering

generic lists of volatile variables attached to
	mailbox/context or
	email
scripting could save info there, such as
	num emails in thread
	num new in thread
	score
move score from permanent to volatile

macports, is there something I can update automatically at release time?
	cf homebrew

config file accept keybindings using
	C-      Ctrl-   Ctl-
	A-      Alt-    Meta-
	W-      Win-    Mac-?

add cursor to pager (on/off)
	=> can highlight text
	can click links
	like firefox cursor mode

nested-if script

syntax file in local vim syntax dir needs to be called
	muttrc to match vim modelines in other files

separate packages for neomutt
	neomutt         - binary
	neomutt-docs    - main manual
	neomutt-contrib - muttrc, vimrc, etc
	neomutt-dev     - code docs
split repos to match
branch by version / language

alt-e resend_message - which hooks are called?
	add lua hook

filter manager
	time limit option -- on holiday!

forgotten-attachments: German example:
	"hÃ¤ng an" won't match over a new line
	strdup regex string, replacing spaces with
		"[ \t\n]+" ???
	does it work with \n embedded?
	could I pre-process the email text?
	it it utf-8 compliant?

turn mutt into a random email generator

startup-hook
	immediately before displaying the index for the first time
	useful for testing
shutdown-hook
	before closing mailbox connections

(un)new_mail_filter lua [lua...]

new-mail-hook + lua to filter
	=> need filter manager

Need strategy for unrepeatable/too-little-info bugs/crashes

matcher
	extend to index, pager, etc

what are our killer features?
	put them on the website writ large
	scripting
	matcher?

index-fold-level
	0 completely folded
	1 depth 1
	2 depth 2
	-1 no folding
	overridden by user keys
key to
	view current message
	close other folds
	etc

website/repo for scripts
	like scripts.irssi.org
	site generated from the script headers

vim-like record macros 'qa'
	save macro
	play macro

should log files be localised?
	make it an option?
	debug -> english?
	hard to debug for other nationalities

development bottleneck
	document more tasks
	delegate more tasks

ifdef needs an "else" condition
	how?

check mutt-tc for project ideas

sort variables, etc before auto-completion
	or properly sort the sources of the strings

21:04 <bremner> I too would be interested in a page comparing neomutt's notmuch support with notmuch-mutt (the perl hack that ships with notmuch)

imap_folder_format defaults to folder_format if empty

alternative -- folder_format add
	%local expando for use with nested-if
	conditional display

need separate folder_format for
	local dirs
	net folders
	virtual folders

files/dirs are sorted the same way as network folders
	may not make sense

imap force body cache on read
	option for offline working

mbsync better than offlineimap?

imap only 'n' messages option

modularise header caching/dbs
	=> needn't use same cache type
	for header / message cache

notmuch tag-completion:
	when using -XYZ<tab>
	only match tags that exist on the selected mail(s)

pager -- sidebar gets updated but not status line / term header

vim-like hls option: persistant across emails

source script|
	pipe -- lookup exact meaning and implications
	works, but can't tell you where an error occurred

context sensitive popup menus
	e.g. index - tag some emails, hit <menu>
	options: copy, save, delete, set flags, reply, etc

check all lists of features are up-to-date
	web, etc

19:32 <mykoserocin> is there a way to show condensed DKIM results instead of full "Authentication-Details" header?
19:32 <mykoserocin> e.g. "DKIM: pass" or "DKIM: fail"
19:52 <brendan> mykoserocin, I use the spam marker system for it: spam "Authentication-Results: mymta.com; .*dkim=pass" "âœ“"
19:52 <brendan> spam "Authentication-Results: mymta.com; .*dkim=fail" "x"

contact distros
	are they up-to-date
	current list of distro patches
	list of recent OS versions
	list of mutt/neomutt versions for each OS version
	address of issue tracker
	address of mailing lists
	contact details for maintainer(s)
	inform them about
		mailing lists
		irc
		website / news
		github
	bcc email?
		give list of distros
		bcc => hard for multiple maintainers to coordinate
			cc better?
	ask for install instructions for web downloads page
	offer github invites to all maintainers

$source_dir like folder
	or like $PATH?
	looking for files to source

browser - add flagged
	expando
	sort option

Reach out to
	LinuxMint
	Mageia
	PCLinuxOS
	Slackware

INBOX vs inbox
	not updating values for browser

copying a large mailbox / number of files doesn't trigger the progress bar
	mbox-100000
	tag all
	copy to another mailbox, e.g. maildir

Passing $VARs to children processes, means
	tell vim about mail rcpt, subject, etc

upstream bug -- folder_format, sidebar_format %n (has new mail)
	shouldn't be cleared if "mark_old = no"
	quit and restart mutt and the flag comes back

separate folder_format for dirs vs network mailboxes?

new index/sidebar_format expando: icons
	each email can have a set of icons
	each icon has a unicode character and a colour
	sorted in order of definition
	tie-in to labels / notmuch tags

new sidebar expando
	count of unread *threads*

fork vs non-fork -- animal species reference
	species: noun
	a group of living organisms consisting of similar individuals capable
	of exchanging genes or interbreeding.

xdg extension
	look for lower case /etc/muttrc
	etc

fold/collapse empty sidebar folders
	unless unread/flagged email etc

check which doc/contrib files distros install
	unify?
	debian doesn't install contrib?
	check other distros

trash + gmail
	doesn't work as expected
	effectively archives them on gmail

trash docs
	add purge-message/purge-thread notes
	add folder-hook to delete if >30days

do saved emails (that get deleted from current folder) appear in the trash?

NeoMutt signing key on
	flatcap.org
	neomutt.org
	github? where?

web update about.html : done so far

change sort option
	thread becomes a prefix
	e.g. "thread-date"

fmemopen -- when fixed, default to off

automate github release
	tag, push, create release, push, assets, checksum

dbus - also implies
	synchronisation of multiple copies of mutt
	e.g. multiple windows/views

jump to previous folder command?
	"cd -"
	vim: "ctrl-^"
	can this be done with a folder hook?
	set my_olddir = dir
	is it too late when we get the hook?

feature docs to separate <sect1>'s?
	separate <book>?

"bind index ` command"
	parses badly
	doesn't warn the user

github issue notifications forward to IRC
	or dev mailing list

context-sensitive help?
	how?
	sensitive to what?
	how about:
		"show-me-this-file" command
		display in pager
	if in pager, close & open text file & restore on 'q'
	if in index: display & return to index after

maildir_trash conflicts trash folder patch
	our patch, check upstream version
	document this

mutt config source DIR
	loads all files within
	recurse?

web mailing list page with sven's muttrc example

version string bug -> devel list
	reinstate flea?

no need to subscribe to mailing lists

"mutt -v | head -1" is pain
	--version ?

darnir:
	use gpgme not gpg
	warn users?
	educate users
	can we force config=yes?
	what if libs are missing?

docs based on use-cases
	need list of cases to start
	put in repo
	request pull-requests to improve

mutt doesn't close file handles on fork/exec
	need more close_on_exec in fopen
	open pdf attach -- look in /proc for evince
	security issue

investigate & bundle? mutt_bgrun

generate (script) tree of all source (by tags)
	and create squashfs

script for "build-all-git-tags"
	publish

web/readme âˆ€ pages
	last proofread date
	last proofread person
	periodic checks
	divide and conquer
	auto-footer: last updated, last proofread

web docs
	update debian support section

invert index option
	new mail at top of screen

add native compress support

unify colours and attrs, e.g. underline, reverse

color command (mentor task)
	no args: list all colours in a pager
	object: show object's colours (coloured accordingly)

docs
	create high-level workflow doc with screenshots
	show beginners *how* mutt works
	label areas of mutt window

issue for code required:
	fuzzy matcher: [devel] [help] [mentor]

index-color -- index_date pattern?
	and index_label

compress flickers, but gpg doesn't
	imagination, or not?
	option to NOT leave alt-screen mode

lots of demo configs for
	index_format
	header_order
	etc
create a function to cycle through them?
	would need some good sample emails
	various headers
	various flags

mutt connection config wizard
	special cases for gmail, etc
		open gmail pages in browser
	test host for:
		imap
		pop
	test for tls
	ask for password
	test connection
	like evolution's wizard
	write config to file/screen

mutt-tips: integrated
	tips command
	fake? email or browser spawned
	neomutt tutorial

transcribe issue#56 vim-keybinding ideas
	-> docs/vi.txt
	wiki

gmail patches -> devel
	need testers

check distros are installing all docs, contrib, etc
	i.e. is "make install" correct

notmuch backend: add X-Label in editor, does "right thing" in notmuch?
unified frontend interface (notmuch/keywords) backend
one-direction script -- sync nightmare?
sync notmuch -> X-Label's?  get out of sync

index-color separate colours for "mylocal" and "@domain.com"
	have a list of "known" domains that are dimmed?

docs build: more sed filters VERSION, DATE, git hash?

nntp list, can't sort by counts

toggle-quoted : option to remember state
	or "hide_quoted_text" bool
	a caps-lock for toggle-quoted
		don't have to do it for each mail
	can this be done with "message-hook"?

colour-coding good-sig vs bad-sig
	tricky for mime attached sigs

offer up-to-date vimrc for mutt/neomutt to vim.org
	autocmds for neomutt/mutt config locations

update man page for mutt
	wrt muttrc location, etc

web docs: What *is* neomutt
	mail client
	show pictures
	compare to mutt
	explain why it's better

is contrib/ installed by any downstreams?

tip - status_format + status-color
	ctx->readonly => red padlock

unstable: .gitignore upstream of feature branches, what else?
	common docs, travis

sidebar -- imap all folders vs subscribed
dovecot public mailboxes for tips?  one public user?
nntp tips? ":tips" command to toggle nntp vars and mailboxes

fake/alternate curses -> true colour => separate fg, bg, term attrs like vim

unnamed notmuch queries => create description based on query
	need rename function for sidebar-notmuch
	need option to autoadd them to the sidebar

remote config -- like browser proxy setup
	display to user "are you sure?"
	useful for tips & examples
	way too dangerous

notmuch+index-color
	tag patches in *neomutt*
	"compat: notmuch+index-color" patch/commit
	=> failed merge!

new mutt colours
	none or inherit
	don't set this component

alternative to sb search
	key -> numeric prefix for all folders
	type number<enter> to select
	(like index-panel)

sidebar "live" search of folders
	key to start searching
	live filtering at every keystroke
	enter selects
	Ctrl-C / Ctrl-G aborts
	fuzzy matching
matching applies to multiple areas of mutt
	sidebar
	aliases
	folders
	files
	index panel
	pgp keys

2016-08-12
	08:31 <flip214> Hi. Another thing I would love to see: an email arrives in INBOX; I answer it,
		and define the FCC for the sent mail, but the incoming mail is still in INBOX.
		so a "reply-and-move-to-same-folder" would be interesting to me.

2016-08-09
	01:35 <SvenG> but giving a color to "known" addresses (via aliases) would be a killer

doc -> contrib âˆ€ vimrc, muttrc
	=> will break downstream packaging
	announce change, make change in next release

index-color
	patterns on date
	allow unescaped ANSI sequences?
	add offset based pattern, e.g.
		color red default cols:14-20 [mutt pattern]

transition guide:
	man neomutt
	a guide for users of mutt moving to neomutt

symlink man pages, etc (for ease of use)
	neomutt -> mutt

getopt for neomutt
	--help
	--version

sidebar
	separate colour for read-only mailbox
	expando for read-only mailbox

sidebar
	have an alternate mailbox like vim's alternate file
	(isn't this the '-' mailbox?)
	create an alias for it '#'
	c# -> change to alternate directory
		new alternate becomes old dir
	save files to #
	set alternate mailbox function
	colour highlight for alternate mailbox
	expando %# for alternate displays '#' or ''

mutt tips on startup
	distribute a contrib/mutt-tips dir which is a mailbox
	select a random (email/tip) from the list
	pick one that's unread (preferably)
	how can we preserve the "read-ness" of an email after a package update?
	.mutt.top-tips ? -- save a list of message-ids in there?
	<top-tips> command creates a new mailbox (from DATA_DIR/DOC_DIR)
		if in /usr it would be read-only
		need to store flags elsewhere
		flags: read, flagged!, deleted (i.e. don't show me again)
	intersperse with mailboxes commands
	tips should be self-contained (to start with)
		unless they reference old tips
		nested emails?  what about multiple inheritance?
		need hyperlinking "see also" links
	use labels (from Keywords plugin) to add value
	use mutt's caching facility to store the metadata

sidebar
	option to fold nested mailboxes
	option to unfold when new mail arrives
	folded, they should show the cumulative totals for all the children

git b(){} needs to disable colour on piping

git clone
	always pull in my prepare-commit-msg hook
	(disabled)
	what other defaults?

firstb <REGEX>
	regex if it contains a '*'
	anchored at bol?
	multiple args => not regex
	one arg => git checkout -- no sense in that

macro instruction <no-history> like vim's <silent>
	some macros end up in the log

'ifdef' improvement
	ability to check mutt version number
	ifdef VERSION == X
	ifdef VERSION > Y
	like vim

new-mail => dbus as a goal, see dgc

revert sidebar cursor positioning?
	no longer needed now that sidebar isn't drawn during key-waits

sidebar search command to quickly change to a mailbox
	like vim highlight search?
	filter after every keystroke

sidebar-refresh command to forcibly update ALL the counts?

doc changes/todo list for limit-current-thread

24-bit colour => non-curses back-end
	enumerate all the curses things we do
	get screen size
	listen for screen size changes (WINCH?)
	wait for key presses
	clear screen
	clear line
	write text

report-neo-bug.sh?
	show os
	build options
	etc
	put in contrib
	install for everyone

mail sieve issue -- colour code for origin?

neo-build
	use git config for settings
		enabled/disabled by default
		configure settings
	save config.h, etc in .git/neobuild
	neobuild --generate

sample IMAP folder (for devs)
	regenerate daily

script to generate min-build
	put in contrib?
	check config is still up-to-date

Mutt config generator app
	or good (curated) sample config
	tutorial
	translations

sb fill empty space -> mutt_paddstr
	no point, it just does multiple addch(' ')
	alloc buffer (on stack)
	memset to ' ', null at width, addstr()

add tutorials (like sidebar intro) to the website
	redlink some empty ones (or partials)
	ask for translations?

use Gutenberg texts for sample emails
	use mutt-dev mailing list as a template?
	alias all names
	replace all message-ids (but keep links)
	strip out most headers

neo-stats.pl
	ignore issues tagged 'release'
	ignore integration issues?
	or count only 'bugs' and unlabelled

dgc - unbind patch

'uncolor status' doesn't work

check makefile dist file list
	ChangeLog.neomutt, etc

update readmes
	project links
	project contact
	version
version.c
	copyright
	contact
	version
main readme
	project links
	project contact
	version
	list latest version?
		no, will always be out of date

GIT REPO?
	.gitattributes
		merging
		diff regexes
	doc my .gitconfig
	all bin/ to repo + .shell/bin/git

upload all bin/ add (c) and licence

cond-date script -> contrib

Web Page (front) LATEST VERSION + links
	+ ChangeLog with links to commits?

list of to-be-written pages on web
	icons for level of completion

create empty (red-linked) pages on website, for people to write

howto build neomutt page
	simple instructions
	expert instructions
	explain all build scripts, etc
	location of source / repo
	howto install
	distro pre-built installs

cond-date document date.sh generator

forks of all distro repos
	clone https://github.com/macports/macports-ports

NeoMutt website top tips?

list_pull_requests.sh
	get_pull_requests.sh
	reference local neomutt repo

muttrc.{distro} âˆ€ distros

[management]/bin
	sync.sh 6h cron script to sync mirrors
	sync needs ssh key
		external to script
		(document in header)
	sync reads data file with header, whitespace & comments

sample mail repo filled with example/problem mailboxes

delegation of keys -> focus() -> parent -> global, e.g. IW, Mail
	functions => components (e.g. mail)     }- mail_init() register_functions(); register_commands();
	commands => components                  }

mirror script, add copr, aur repos
show focus -- sacrifice help line?
	no, it's not always visible
propagation of notifications -- start @focus, work down
	SB, IW, PW + 'q' mail accepts, hides PW, PS, focus IW
	SB, IW + 'q' mail notified, rejects, global accepts, closes app
Help starts @focus, Panel Name + get_keys method
if sidebar is a separate panel and src file, should IW be?  PW?  AI?
If focus is on PW and SB, IW, PW are siblings, how can SB get notifications?
	or does mail Panel catch and iterate through children?
	SB mappings are (index,pager) => behaviour wanted but not in AW

panels have dividers enum
	left
	right
	top
	bottom
	between
	outside
who owns the dividers space?
set_focus (panel)
	who owns the focus?
	gfx(curses)?
	get_char -> gfx_get_char -> consider focus
on close panel, focus moves to
	*prev*/next sibling, or parent?
	due to mutt's UI focus moves to prev sibling
how can I show focus without moving anything? i.e. borders
	sacrifice a top line?
	border highlight?  => always present
which panels *accept* focus?
	sidebar
	index window
	pager window
	<tab> to switch?
	or <left>, <right>?

<sidebar-next-new> => $sidebar_flagged_are_new ?

website: some bug-fixes have gone away -> success page?
set/unset sidebar_visible doesn't refresh screen when in pager
sb doesn't match folder (for open) if it has a trailing /

âˆ€ new bugfixes -- reference trac number in commit message
test email reply to issues, etc
	markdown?

get travis to build RPMs on neomutt and deploy to github release's artifacts automatically
website front page: do YOU have a mutt patch? -> contact us
website collection of changes since last release -> relnotes on release
	note which branches, etc
website highlight section on toolbar (solid colour?)

<sidebar-refresh> function to forcibly refresh screen & counts after, e.g.
	unmailboxes *
	mailboxes lots...

new hierarchy: tree => mail's parent is folder or mail

icons for news:
	news: newspaper
	devel: jigsaw, spanner&screwdriver
	release: present, balloons

use links(1) as a model for re-architecting mutt
	mouse control (inc right-click)
	safe html rendering
	pop-up windows
or mc (midnight commander)

update website gh page: list of branches
neomutt FAQ -- containing what?
add my gpg signing key to neo.org, fc.org

fmemopen - merge into one place in mutt_mktemp()?
	idea from dgc email
sidebar, when saving email to a folder use the sidebar as a selector?
	new indicator colour or prompts "select save folder" + normal highlight
Do drafts *need* to be stored in a separate folder?
	why not inline?
	in threaded order
	just tagged or coloured
	status flag to denote draft
email David Sterba (kdave) -- limit
	use context, or change prototypes
screenshots on website
neomutt version on website home page

doc travis and coverity options
split source?
	tools/ - standalone exes
	library/ - replacement library functions
	readme/ - obvious

save email doesn't respect the umask

kdave - limit-current-thread
	alt-l (show limit) should respond "limit thread"
	is "limit ." the same as "limit all" -- YES
		fixed internally
	create unlimit patch and pull-request for kdave?
	limit doesn't have any context, just a pattern
	limit-current-thread NEEDS to know current email
	it'd be nice to change limit to accept another "string" arg
	currently
		"all" -> "~A"
	change limit
		"thread" -> "~a" (only letter available)
		let general limit machinery do the work
	unfortunately they can't see the current email

rewrite mutt_wstr_trunc()
	first, rename variables to be something sensible
	second, refactor to be legible

vim library of config options(vars)
	auto-extract from init.h

kill version.c:rstrip_in_place()
	fix external build scripts

what does Sidebar *really* need?
	Incoming BUFFY -> notifications of BUFFY changes
	Panel (geometry) -> notifications of WINCH
	character libraries -> lengths, widths, formatting, etc
	options (config access)
	colours
	curses: clear(panel), clear(line), write (char/string), move(x,y)
		curses calls are all (0,0)-based
		curses takes panel object and converts to screen coordinates
		âˆ€ users
	callbacks for functions
	sb is initialised with (Panel pointer), notifications on change
	can query Panel's size, position (not useful), visibility
	panel can be visible, but !active, e.g. partially under a modal dialog
		=> paint if asked, but won't receive keys
		could still be asked to do stuff by dialog, etc

how about modal dialogs?
	1 dialog could invalidate sidebar, index, pager
	sibling to sidebar, index, pager but last in list (z-order)
	sb, index, panel get painted, then "floating" window gets painted over
	modal => disable key mappings/propagation

how should mutt_yesorno() work?
	Question is asked modally & outside area of asker
	=> hide command line, show question
	question panel gets request, shows itself, hides command
		make command-line panel invisible?
		make question panel higher in z-order?
			=> they are coincident

attach sets of keybindings to panel hierarchy?
modify docs generation to process commands' comments
can some keybindings be set "only active when window is visible"?
	=> help doesn't (necessarily) hide sidebar
		should sidebar keys work?  probably not
	*should* help hide the sidebar?
		probably yes

sidebar indented folders
	fill in gaps in hierarchy automatically
	make them non-selectable (unless the user has "mailboxes" them)
	alternatively, have some way to mark mailboxes as "fake"
		probably a horrible idea

separate draw() in sidebar for
	emails
	notmuch
	nntp
	addressbook?

changes to css must set both fg, bg
	cf <note>
	reduce colour of <command>s too

'c' fails if dir has trailing /
	e.g. when you use <tab> to complete!
'c' to open fails, test cmdline open too
	check sidebar displays correct highlight/open

manual "variables" need description field

source command -- allow wildcards
	fits in nicely with ifndef
	or 'source_dir' command to read all contents
	or "source dir" to read all contents
	recursive option?
	recursive by default?

cond-date needs some concrete examples

change docs to use <example>

do format conditional work on strings, etc?  meaningful?
	empty => false

docs refer to alias menu but don't mention how to invoke it
browser
	can sort my num new msg, but can't display count itself
	sort needs docs -> promote to feature?
		check kz for docs/examples
	%n isn't representative of "all message count"
		doc as (N)umber of messages, or
		%c message (C)ount

use sort_aux for nested sidebar names?
	no, sub-folders are same type?
		no
	YES: allows to sort by name, then subsort by new-count
	separate variable otherwise it interferes with index, etc

community script check for update
	date community docs?
	or just rely on commit date?

git hook variables
	prepare-commit-msg
	GIT_DIR
	GIT_WORK_TREE
	GIT_INDEX_FILE
	GIT_PREFIX
	GITHEAD_XXX

auto-generate merge commit messages
	modified git log msg
	script for authors
	commented out - but accessible?

replace " with ' in muttrc

cond-date
	all,dates,are,broken@ 1y -> this year (not 12 months)
		1w -> this week (not 7 days)
		if the dates were sensible (7d = 7 days back from now)
		they'd tie in with ~d, e.g.
			color index color237 default "~d>30d"         # Over a month old
		reuse the ~d code
			pattern.c:eat_date()

index_color should apply to status_bar when viewing mail
status_color should apply to mid-status_bar when (pager_index_lines > 0)
shouldn't be affected by 'status_on_top' either

docs/muttrc/readme/init.h
	need to document default values for variables

Generated muttrc is an encyclopaedia
Supplied  muttrc is a guide for dummies

git
	create git diff regex for manual.xml to identify the section where the changes occurred
		grep "<sect[0-9] " manual.xml.head
		need to look for <sect> <chapter> <table> <example>
	check the default 'c' git diff regex against sidebar.c
		check C function
		check C struct/enum

mutt folder/dir browser
	".."/open should start with current folder/dir selected
	display full path at top of screen/statusbar/titlebar

break up and rewrite mutt docs
	break into smaller sections
	separate mutt-doc repo
	translate sections (default to english if missing)

introduce new format strings
	index_rich_format

what are the objects in the Index?
	cache the index formatted strings on them

cache sidebar formatted strings on BUFFY object?

refer to and compare config names by hash only?
	save lots of string compares
	gperf to generate perfect hashes

index format -- full directory mode
	show unix perms like ls
	user/group/etc
	too specific?
	what about other OSs?

cache for formatted strings?
	too much can change
		index: flags, folded-ness
		sidebar: all numbers => cache invalid

keep revision number for all config items (as a prelude to proper notifications)
	only increment revision number on change
	leads to possible A-B-A problem (change blindness)
	if (ver(format_str) > old_ver) STMT;
	allows code to make informed decisions about caching

which config items require frequent and costly interpretation?
	all format strings -- every line, every refresh

data source LDAP
	address book? -- different grouping/hierarchy?
	calendar? -- different timescales?
	news?  subscribed   <--> all groups
	rss?   unread feeds <--> all feeds

Alternate views in the sidebar
	need toggle function
	imap: folders  <--> dir tree
	local: folders <--> dir browser

signature manager
disposable email address plugin?
	need external API to send/receive

Undo, what's possible?
	Last action?
	Many actions?
persistant undo on email editing?
undelete?
unsend?
tagging?

integrate nntp into sidebar
what does notmuch return?
	how do i link it to existing objects?

sb extra colours for:
	readonly mailboxes
		expando?
	bad (non-existent) mailboxes
		expando?
	virtual mailboxes
	what other attrs?
	colour by SRC
	separate colour schemes by SRC?

Where does getchar() get called?  can I centralise them?
Does getchar() wait or poll?  Need it to poll
Polling -> Idle -> Event callback that I can use to populate BUFFYs
sidebar needs NO-selection possibility for toggle-virtual
need to clear index on Toggle-Virtual

notmuch
	add new virtual folders to sidebar
		automatically?
	what name should it be given?
		automatic?
			allow user rename?
		ask user?
	how can we make them persistant?

sb expandos
	compare letters to status_format letters
	deleted?
	number after limiting
	unread?

postpone patch doesn't quite work
	1) The PostContext and menu are private, so sidebar can't tell that
	   we're looking at the postponed list after navigation.
	2) After navigating to another folder, you still have to "quit" to
	   get the display to refresh.

alternative to lightweight patch
	don't update info âˆ€ BUFFYs
	just update the current page
	only update lists when the user OPENs a folder
	not when they move the highlight
	could pre-emptively populate the previous/next pages

sidebar expandos
	%c number of non-deleted emails (total - deleted)
	%s = %c? (lower case version of %S?)

demo setup - lots of files in:
	local mbox
	local mh dirs
	IMAP mbox
	IMAP mh dirs
	POP mbox
	POP mh dirs

sidebar_sort is an enum - on set error, it could show the valid values
quadopt can give help too -- important since varname gives no clue about type
break up init.h, globals.h, functions.h
	init.h option DELEGATE, prefix "sidebar_", callback?
init() on module calls add_options()
	=> sb_opts refer to sb-private vars in sidebar.c
option breakup depends on lots of notifications
Where are OPTSIDEBAR* used outside sidebar.c
	curs_main.c, buffy.c, mh.c
Distinguish between movement and search wrap?
	movement - next/prev (1 line), page up/down
	search - find next/prev new
Config change notifications
	fn (name, old_val, new_val)
how would function delegation work?
	init() -> add_functions (name, callback)
	the callbacks would need to be able to manipulate mutt objects
Register functions & callback
make sure anything we need is exposed
if we hide our globals, give then all accessor functions get/set_VAR()
init would need to register new sort methods

most options are "short" limited to +/- 32767
set/unset/toggle?  invVARNAME
option - don't sort inbox -- defined how?
separate modules -- sidebar, index, pager, help? -- each with
	init()
	notify()
	close()
	config()
sidebar_wrap=search,motion (separate bools for simplicity?)

can the real status bar display any sidebar fields?
	why not?
	how can they be integrated?

Unmailbox * â‡’  many notifications followed by ONE redraw

parse_mailboxes -> notify sidebar => know if anything's invalidated TBCH
can I use realpath(), mutt_expand_path() for anything?

tree chars for sidebar hierarchy?

Start; Incoming; Inbox open; current = Incoming; sort â†’ cur is offscreen, boundaries lost

draw sidebar
	assumes position/size
	move due to STATUSONTOP, HELP
	check of show/hidden has changed & refresh numbers if nec
	if hidden, do nothing
	sanity check settings
	draw divider (3 chars!)
for all buffers
	set colour
	move
	gen displayname (need to cache this)
		name, bytelen, screenlen
		what about config changes
			including sort order
	make sidebar_entry
fill remaining lines with blanks

Sidebar actions (that might precipitate change):
	line-up
	line-down
	page-up
	page-down
	set buffy from browser
	change sort order
	add mailbox
	delete mailbox
	change mailbox's sort criteria (e.g. flag an email, a flagged-sorted mailbox)
	resize window
	hide sidebar
	show sidebar
	open folder

Notify (Box*, Rect old, Rect new, flags)
Flags:
	too small to render
	changed visibility

Changed posn notification ONLY
	e.g. sidebar has swapped sides
could imply that cached data may be OK to reuse
	e.g. don't need to call calc_boundaries

repaint if:
	size changes
	position changes

DBUS plugin -- to do what?
	notify out
	take input to do what?
		accept mailto: links

quiet config option -- don't whine about unknown config options
	or quiet command line option

sb_draw should return success of drawing
	possible given all the callbacks, etc?

trim trailing slash from mailboxes, folder
	shouldn't be displayed

New only -- include structure (empty dirs) to keep hierarchy
	mail (0)
	  fruit (0)
	    apple (1)

sorting
	if displaying full paths:
		sort by display name
		sort by underlying name
	if displaying indented paths:
		sort by top-level names, then children

sidebar_width = auto (size to contents)
	would need to parse and format all strings ahead of drawing divider

possible to fix sidebar sort order to respect hierarchy/indentation?

need attention
	draw_sidebar
	OPTSIDEBARSORT
		sorts by real path, not visible name

sidebar_dividers
	first (wide) character is vertical divider
		between sidebar and index/pager
	second (wide) character is horizontal divider
		between different mailboxes (within the sidebar)

send escape sequence to clear terminal title when mutt closes
init.h struct option_t needs enums for types and union for data
timer notifications, e.g.
	highlight something for three seconds, then return to normal
https://github.com/N8Fear/mutt-kz
	some initialisations improvements
	some bug fixes

wrapping â†’
	extra char at beginning of line "+"
	extra char at end of line "<-/"
wrap at:
	char
	word (whitespace)
	clause (punctuation)
	sentence (.!?)
No wrap â†’
	extra char at end of line ">"

Window changes
	hidden  no params
	visible rect
	resize  rect
	focus   in/out
colours changes
keypress        key, no params
config change   key, value
		ALL, no params
mail status change
	read/unread/flagged/deleted/edited
	MESSAGE_ID, flags
mailbox change
	new/deleted
	new mail, deleted mail, flagged mail, etc
connection status
	connected
	disconnected
startup
quitting - any use to anyone?
selected mail changed
selected mailbox changed

Notifications

make AUTHORS -- which repo did this?

ellipsis
	mutt_error
	mutt_message
	mutt_debug

