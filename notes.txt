ellipsis
	mutt_error
	mutt_message
	mutt_debug

#defines → enums?

make AUTHORS -- which repo did this?

Main sidebar repos
	Ismail
	Debian
	Gentoo 24r1
	Suse 24 2014/14/12 + sidebar colour
	Kzak
	Terry

Ultrix dead '95
	ask debian devs for list of working arches

init all vars
lots of static fns → _fn_name?
^L in source
Doxygen comments

Vim-style
	:set     → show all modified vars
	:set all → all all vars
	:unset === set novar

strict compilation flags; c++ compiler?
unnamed args in function prototypes
spurious \ line endings (in middle of if!)

────────────────────────────────────────────────────────────────────────────────

Notifications

Window changes
	hidden	no params
	visible	rect
	resize	rect
	focus	in/out
colours changes
keypress	key, no params
config change	key, value
		ALL, no params
mail status change
	read/unread/flagged/deleted/edited
	MESSAGE_ID, flags
mailbox change
	new/deleted
	new mail, deleted mail, flagged mail, etc
connection status
	connected
	disconnected
quitting - any use to anyone?
selected mail changed
selected mailbox changed

wrapping →
	extra char at beginning of line "+"
	extra char at end of line "<-/"
wrap at:
	char
	word (whitespace)
	clause (punctuation)
	sentence (.!?)
No wrap →
	extra char at end of line ">"

────────────────────────────────────────────────────────────────────────────────

send escape sequence to clear terminal title when mutt closes
init.h struct option_t needs enums for types and union for data
timer notifications, e.g.
	highlight something for three seconds, then return to normal
https://github.com/N8Fear/mutt-kz
	some initialisations improvements
	some bug fixes

sidebar_delim
	change name to sidebar_dividers
	first (wide) character is vertical divider
		between sidebar and index/pager
	second (wide) character is horizontal divider
		between different mailboxes (within the sidebar)
sidebar_color
	background color for entire sidebar region?

need attention
	draw_sidebar
	OPTSIDEBARSORT
		sorts by real path, not visible name

check for unused #include
sort includes <>, ""

sort init.h, globals.h, etc

kill one-line if's:
	if (adsfa) command;

~50 lines of commented out source
	/* ... ; */

possible to fix sidebar sort order to respect hierarchy/indentation?

gentoo sidebar_format
	set sidebar_format="%B %* %S%?N?(%N)?%?F?[%F]?"

sidebar_width = auto (size to contents)

fix? whitelist to use +dir notation?
	relative to $folder
	what about multiple folders?

test sidebar width if fixed string breaks bounds
	set sidebar_width=10
	set sidebar_format="ABCDEFGHIJKLMNOPQRSTUVWXYZ"

:quit / :q command for vi users

cleanup:
	docs - in code and html
	comments
	whitespace
		unfold lines
		indent
		rebracket
		refold
	sort options in
		init.h
		globals.h
		functions.h
		switches
	doc switch drop-throughs

when a two-cell character is truncated by 1 it needs to be space padded to maintain alignment

check all string config vars are NONULL'd

sorting
	if displaying full paths:
		sort by display name
		sort by underlying name
	if displaying indented paths:
		sort by top-level names, then children

New only -- include structure (empty dirs) to keep hierarchy
	mail (0)
	  fruit (0)
	    apple (1)

if ((!visible) || (size == 0))
	make sure no work is done

trim trailing slash from mailboxes, folder
	shouldn't be displayed

on Terry's update notify authors & list & kz

check all headers #include requisites for compilation

FOREVER, rather than while(1)

check ALL pointers

sb_set_curbuffy
sb_set_buffystats
	should probably both return BOOL on success/failure

sb_set_update_time should return the timestamp

sb_draw should return success of drawing
	possible given all the callbacks, etc?

quiet config option -- don't whine about unknown config options

sensible retvals on functions

command
	sidebar_toggle_visible
	sidebar_toggle → sidebar_toggle_virtual

────────────────────────────────────────────────────────────────────────────────
missing patches
	colour divider
	sort
	lightweight
	fmemopen

DBUS plugin -- to do what?
	notify out
	take input to do what?

repaint if:
	size changes
	position changes

Changed posn notification ONLY
	e.g. sidebar has swapped sides
could imply that cached data may be OK to reuse
	e.g. don't need to call calc_boundaries

Notify (Box*, Rect old, Rect new, flags)
Flags:
	too small to render
	changed visibility

Changelog, etc for sidebar

────────────────────────────────────────────────────────────────────────────────

Sidebar actions (that might precipitate change):
	line-up
	line-down
	page-up
	page-down
	set buffy from browser
	change sort order
	add mailbox
	delete mailbox
	change mailbox's sort criteria (e.g. flag an email, a flagged-sorted mailbox)
	resize window
	hide sidebar
	show sidebar
	open folder

────────────────────────────────────────────────────────────────────────────────

draw sidebar
	assumes position/size
	move due to STATUSONTOP, HELP
	check of show/hidden has changed & refresh numbers if nec
	if hidden, do nothing
	sanity check settings
	draw divider (3 chars!)
for all buffers
	set colour
	move
	gen displayname (need to cache this)
		name, bytelen, screenlen
		what about config changes
			including sort order
	make sidebar_entry
fill remaining lines with blanks

Start; Incoming; Inbox open; current = Incoming; sort → cur is offscreen, boundaries lost

────────────────────────────────────────────────────────────────────────────────

History
	:set sidebar<UP>
	should match only 'set sidebar.*'

calc_boundaries -> BOOL = repaint?
tree chars for sidebar hierarchy?
sidebar: how many colours?
CLEARWIN takes a *y* param, not x, likewise sidebar variant

need sensible colour scheme, by default, otherwise highlight won't be visible!
parse_mailboxes -> notify sidebar => know if anything's invalidated TBCH
can I use realpath(), mutt_expand_path() for anything?

Unmailbox * ⇒  many notifications followed by ONE redraw

can the real status bar display any sidebar fields?
	why not?
	how can they be integrated?
ambiguity in struct CONTEXT
	->changed is a BOOL
	->deleted is a number
confusing tests like
	if (!x->deleted)
	imply deleted is a BOOL

most options are "short" limited to +/- 32767
mutt-sidebar.vim (contrib dir?)
":map <F11>" shows mapping? or bind, or macro
set/unset/toggle?  invVARNAME
option - don't sort inbox -- defined how?
separate modules -- sidebar, index, pager, help? -- each with
	init()
	notify()
	close()
	config()
sidebar_wrap=search,motion (separate bools for simplicity?)

sidebar_sort is an enum - on set error, it could show the valid values
quadopt can give help too -- important since varname gives no clue about type
BUG: set sidebar_width=0  -- now impossible to *re*show the sidebar
break up init.h, globals.h, functions.h
	init.h option DELEGATE, prefix "sidebar_", callback?
init() on module calls add_options()
	=> sb_opts refer to sb-private vars in sidebar.c
option breakup depends on lots of notifications
Where are OPTSIDEBAR* used outside sidebar.c
	curs_main.c, buffy.c, mh.c
any use from calling sb_init(), sb_shutdown() from main()?
	probably not yet
TEST: deleting/adding entries on/off-screen
	are our indexes correctly maintained?
TEST: refresh limit -- changing vars from another mutt
TEST: (re-)sorting by changing sort criteria from another mutt
Distinguish between movement and search wrap?
	movement - next/prev (1 line), page up/down
	search - find next/prev new
Readme.sidebar, Changelog.sidebar?
does imap folder add/rm trigger our sb_notify?
Config change notifications
	fn (name, old_val, new_val)
how would function delegation work?
	init() -> add_functions (name, callback)
	the callbacks would need to be able to manipulate mutt objects
Register functions & callback
make sure anything we need is exposed
if we hide our globals, give then all accessor functions get/set_VAR()
how do I generate main docs -- insert sidebar section
init would need to register new sort methods
fix odd buffy_{mbox,mh}_update function

get rid of REDRAW_SIDEBAR, or use it effectively

test conditional compilation
	pop imap sidebar slang gpgme debug
	smime pgp nls iconv hcache smtp
	ssl gss idn
without
	gdbm qdbm tokyocabinet wc-funcs

can I internalise sb_should_refresh()
often call:
	buffy_mbox_update
	buffy_maildir_update
	mh_buffy_update
what if there are multiple top-levels?
should the LastRefresh var be on the top-level?

demo setup - lots of files in:
	local mbox
	local mh dirs
	IMAP mbox
	IMAP mh dirs
	POP mbox
	POP mh dirs

possible to eliminate sb_get_highlight?
	only called on OP_SIDEBAR_OPEN
	in curs_main.c

sidebar_delim -> sidebar_divider_char
sidebar_xy -> sidebar_x_y

move mappings from index/pager -> generic
	in functions.h

tests:
	set all config options to: valid, invalid, empty
	both in muttrc and within mutt

only draw divider if
	visibility changes
	width changes
	char changes
	etc
	NO too many variables

any use for ACS_VLINE from curses?
	when do I know it's safe to use?

sidebar expandos
	%c number of non-deleted emails (total - deleted)
	%s = %c? (lower case version of %S?)

add copyright where I've written code

Don't need to actually SORT the BUFFYs, just sort our array
and work from that.  That way SORT_ORDER => unsorted => mailboxes
in their original config order.
Implies we need our own Incoming pointer? or just array[0]?

alternative to lightweight patch
	don't update info ∀ BUFFYs
	just update the current page
	only update lists when the user OPENs a folder
	not when they move the highlight
	could pre-emptively populate the previous/next pages

simpler way to generate graphs?
git log --format="h_%h h_%p %D" --branches --simplify-by-decoration

postpone patch doesn't quite work
	1) The PostContext and menu are private, so sidebar can't tell that
	   we're looking at the postponed list after navigation.
	2) After navigating to another folder, you still have to "quit" to
	   get the display to refresh.

sb colouring order
	indicator
	highlight
	new
	flagged
	other?

sb expandos
	compare letters to status_format letters
	deleted?
	number after limiting
	unread?

pager.c OP_SIDEBAR_TOGGLE_VISIBLE doesn't toggle anything
curs_main.c OP_SIDEBAR_TOGGLE_VISIBLE does

notmuch
	add new virtual folders to sidebar
		automatically?
	what name should it be given?
		automatic?
			allow user rename?
		ask user?
	how can we make them persistant?

Where does getchar() get called?  can I centralise them?
Does getchar() wait or poll?  Need it to poll
Polling -> Idle -> Event callback that I can use to populate BUFFYs
sidebar needs NO-selection possibility for toggle-virtual
need to clear index on Toggle-Virtual

sb extra colours for:
	readonly mailboxes
	bad (non-existent) mailboxes
	virtual mailboxes
	what other attrs?
	colour by SRC
	separate colour schemes by SRC?

todo
	merge kz and new sidebar
	integrate nntp into sidebar
	get refresh working
	find & merge trash-dir patches
	what does notmuch return?
		how do i link it to existing objects?
	kz unmailbox bugfix: needed?
		mutt_buffy_check(0) at end of parse_virtual_mailboxes
	gpl, copyright on demos

github + travis CI + coverity

add kz's version suffix to add "-neo"
floating patches/branches
	history -> HEAD
		      \-> neo branch
		      		\-> min build branch
neo branch contains
	version fix

Cedric, VVV, DGC -- check for any utils patches use
	ifdef, nested if, xlabel_ext, purge

Undo, what's possible?
	Last action?
	Many actions?
persistant undo on email editing?
undelete?
unsend?
tagging?

look through gmail labs, etc, firefox addons for eamil plugin ideas

signature manager
disposable email address plugin?
	need external API to send/receive

all patches --
	PATCHES
	configure
	USE_X
	default configured off

Alternate views in the sidebar
	need toggle function
	imap: folders  <--> dir tree
	local: folders <--> dir browser

	address book? -- different grouping/hierarchy?
	calendar? -- different timescales?
	news?  subscribed   <--> all groups
	rss?   unread feeds <--> all feeds

some macros use multiple statements separated by comma
	change to do { X; Y; Z; } while(0)

split out FMEMOPEN from sidebar patches
	handler.c
	pattern.c

mutt .shell copy
	mnemosyne
airline themes
data source LDAP
unify
	#if/#ifdef
	HAVE_X/USE_X

fix copyright dates in all patches

which config items require frequent and costly interpretation?
	all format strings -- every line, every refresh

keep revision number for all config items (as a prelude to proper notifications)
	only increment revision number on change
	leads to possible A-B-A problem (change blindness)
	if (ver(format_str) > old_ver) STMT;
	allows code to make informed decisions about caching

cache for formatted strings?
	too much can change
		index: flags, folded-ness
		sidebar: all numbers => cache invalid

index format -- full directory mode
	show unix perms like ls
	user/group/etc
	too specific?
	what about other OSs?

refer to and compare config names by hash only?
	save lots of string compares

cache sdiebar formatted strings on BUFFY object?

what are the objects in the Index?
	cache the index formatted strings on them

introduce new format strings
	index_rich_format

command: list all colours
	color<cr>

command: show object colour
	color object<cr>
	color object?<cr>
	color ?object<cr>

auto-completion on:
	color obje<tab>

break up and rewrite mutt docs
	break into smaller sections
	separate mutt-doc repo
	translate sections (default to english if missing)

code: switch default must be at end
mutt folder/dir browser
	".."/open should start with current folder/dir selected
	display full path at top of screen/statusbar/titlebar
dependency graph of all patches
BOOL -> enum?  what about the bitfields?
trim kz commit messages

git
	document git attributes for PATCHES
	create git diff regex for manual.xml to identify the section where the changes occurred
		grep "<sect[0-9] " manual.xml.head 
		need to look for <sect> <chapter> <table> <example>
	check the default 'c' git diff regex against sidebar.c
		check C function
		check C struct/enum

Sentence case for OPS*

Do I want a deve branch of 'fixes' before bug-fixes branch?
	.gitignore, what else?
kzak branch - stuff I don't want in neo patch
	versions stuff, .gitignore, build stuff
compare conditional builds
	#ifdef
	+/- FEATURE
	configure.ac
	Makefile.am
	compress.c always compiled in?

regex/regexp pick one in code/docs

manual.xml
	regexp 65
	regex 7
*.[ch]
	regex 25
	regexp 48

index panel browser - implement vim-like:
	highlight-search
	incremental search
	visual feedback of search as you type
	automatic filtering as you type

Generated muttrc is an encyclopaedia
Supplied  muttrc is a guide for dummies

Set out notification emails as a nested set:
	Announcement = neomutt description, list of features, links
		Feature X - feature desc, credits, list of files changed, links
		Feature Y - ditto
		Feature Z - ditto
	allowing people to criticise each component individually

docs/muttrc/readme/init.h
	need to document default values for variables

sidebar_whitelist ought to have a sidebar_unwhitelist

trash folder patch -- ideas
	ability to create dirs by date/subject/sender/etc
	add tag "X-Original-Folder" to allow undelete

mutt bug - mail isn't from me when it's from
	jimrich@flatcap.org
	bobrich@flatcap.org

index_color should apply to status_bar when viewing mail
status_color should apply to mid-status_bar when (pager_index_lines > 0)
shouldn't be affected by 'status_on_top' either

cond-date
	all,dates,are,broken@ 1y -> this year (not 12 months)
		1w -> this week (not 7 days)
		if the dates were sensible (7d = 7 days back from now)
		they'd tie in with ~d, e.g.
			color index color237 default "~d>30d"         # Over a month old
		reuse the ~d code
			pattern.c:eat_date()

replace " with ' in muttrc

check tidiness of newly added sidebar code

save merge commit messages (for features)
auto-generate merge commit messages
	modified git log msg
	script for authors
	commented out - but accessible?

git hook variables
	prepare-commit-msg
	GIT_DIR
	GIT_WORK_TREE
	GIT_INDEX_FILE
	GIT_PREFIX
	GITHEAD_XXX

use PATCHES to show bugfixes?
	bugfixes:
		bug1
		bug2
		...
	patch-xxx
	patch-yyy
or
	bugfix1
	bugfix2
	patch-xxx
	patch-yyy

check if any of the bug-fixes are already in default

minors - comments for any full functions
	ifdef, index-color, progree, status-color, trash

notmuch - fix dependencies
check minors for () -> (void)
sidebar docs
	note changes to historic version
	colours
	config
	behaviour
	separation of highlight vs open
should static functions be called mutt_*?
check minor new functions are static
bugs - sidebar unsorted isn't -- add to docs

tidy - check files for leading/trailing whitespace at ends of file
	check for redundant empty lines

cond-date add docs to index_format in init.h
bugs - sidebar - note refresh not really working
community script check for update
	date community docs?
	or just rely on commit date?
resolve - sort desc, draw status line, open folder
git jump function -- figure out if diff or merge is needed

docs
	add tests.txt
	todo list of ideas

use sort_aux for nested sidebar names?
	no, sub-folders are same type?
		no
	YES: allows to sort by name, then subsort by new-count
	separate variable otherwise it interferes with index, etc

kz issues -- which apply to me?
docs refer to alias menu but don't mention how to invoke it
browser
	can sort my num new msg, but can't display count itself
	sort needs docs -> promote to feature?
		check kz for docs/examples
	%n isn't representative of "all message count"
		doc as (N)umber of messages, or
		%c message (C)ount

do format conditional work on strings, etc?  meaningful?
	empty => false

nested-if docs s/bytes/Bytes/ in index_format

docs: sidebar_format expandos aren't defined anywhere

