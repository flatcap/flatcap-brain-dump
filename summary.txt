:about
translatable comments
closes any existing summary page / help
:tips
	mbox in contrib/
	nntp (if available)
	links to web if not
:credits
status line shows list of summary pages

list of pattern modifiers
	:patterns

current server settings, e.g.
	Host: gmail.com
	Username: rich

:help <variable|command|function>
:help -> list of ways to use the help

:changelog read from file

have ability to save the summary page data

I'd like to create a set of summary pages for NeoMutt.

These are a set of new commands, typed at the : prompt.

| Command  | Description                        |
| :--      | :--                                |
| bind     | Show a list of keybindings         |
| color    | Show a list of colours             |
| help     | Easy access to the manual          |
| messages | Show a list of old mutt messages   |
| scripts  | Show a list of config files loaded |
| set      | Show a list of variables           |
| version  | Show detailed version info         |

**Ideas**:
- Be able to open the page in an editor
- Be able to save the info to a file
## bind -- Show a list of keybindings

**Command**:  bind [all]
**Alternative name**: macro

Display all the keybindings and macros, grouped by NeoMutt area, e.g. Index, Pager.

With the "all" option, display everything that **can be** bound.
## color -- Show a list of colours

**Command**:  color [all]

List all the objects that **have been** coloured.

With the "all" option, display everything that **can be** coloured.

List the colours as valid  color  commands.
Show some example text in those colours.
## help -- Easy access to the manual

**Command**:  help

Show the text version of the manual.
This is generated by the build.

**Ideas**:
- Expand into a generic  display-file  function.
## messages -- Show a list of old mutt messages

**Command**:  messages [clear]

Display all of the messages and errors, complete with a timestamp.

With the "clear" option, the message buffer will be emptied.
Limit the number of messages to, say, 100.

The calls to  mutt_message()  and  mutt_error()  would need to be trapped.

**Ideas**:
- Record progress bar info too, e.g. 100%, 45sec, "Opened mailbox"
- Take into account:  $read_inc   $write_inc   $net_inc
## scripts -- Show a list of config files loaded

**Command**:  scripts

Show a list of all the config files loaded, either at startup, or manually
using the source command.

Ideas:
- Red-flag any that had errors
- Add a command line option to list the files that would be loaded
- List all the non-existent files that were attempted
## set -- Show a list of variables

**Command**:  set [all]

Display a list of all variables that have been changed.

With the option "all", display every variable.

**Ideas**:
- Highlight the variables that have been changed from the default
- Show the list as valid NeoMutt config
- Use comments to show the default values
## version -- Show detailed version info

**Command**:  version

Show detailed version information, like  mutt -v

**List**:
- Version
- Compilation flags
- Patches
- etc

**Ideas**:
- Add a changelog command

---

Initially, I suggest making a ":test" command which displays some sample text
in the pager.  This could be used as a template for beginners to add the other
commands.

| Command | Description                                |
| :--     | :--                                        |
| about   | A brief description of the NeoMutt project |
| tips    | Enable "tips" mode, showing brief guides   |
| credits | A list of the people who created NeoMutt   |

**Ideas**:
- Opening a summary page, would close an existing page / help
- Status bar shows a list of other pages, when on a summary page

:hooks icommand
	list hooks (numbered)
	list all folders & hook numbers that match
	hook numbers suffixed by (p)ath, or (d)esc?

extend icommand to ALL :commands?
	wrong way around
	icommand is simpler, doesn't expand variables, etc

summary page
	account details
	host, login details
	connection info: IP addr, TLS?, login method, etc

:set (list all vars) should depend on the context
(which account/mailbox you have open)
:setlocal (just the account vars)

color command (mentor task)
	no args: list all colours in a pager
	object: show object's colours (coloured accordingly)

summary - save page command (strip colours)
summary - syntax highlighting - HOW?
summary # comment out default bindings, colours, etc

