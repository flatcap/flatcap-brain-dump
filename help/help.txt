Help todo

$help_simple_search
$help_index_format
hide YAML header
nftw directory traversal
convert DocBook to Markdown

--------------------------------------------------------------------------------

Help Browser - Add new config

> The Help Browser is a new feature to bring online help to NeoMutt.
> The code is in the [devel/help](https://github.com/neomutt/neomutt/tree/devel/help) branch.
> 
> It adds a new config variable: `$help_doc_dir` which should point to a copy of the [`test-doc`](https://github.com/neomutt/test-doc) repo.
> Help can be activated by pressing <kbd>Alt-H</kbd>

### Part 1

Add a new config variable `$help_index_format` to format the index list appropriately.

Tasks:
- Add config variable to `init.h`
- Add global variable to `help.[ch]`
- Alter `index.c` to use the new global

### Part 2

Add a new config variable `$help_simple_search` to search the help.

When a user searches for a string, but doesn't use a NeoMutt pattern, the string is transformed using [`$simple_search`](https://neomutt.org/guide/reference#simple-search).
This isn't appropriate for the help.

Tasks:
- Add config variable to `init.h`
- Add global variable to `help.[ch]`
- Alter `pattern.c` to use the new global

The final part is a little trickier.  The pattern function doesn't know if this is a 'help' mailbox.

There are a couple of possible solutions:
- Pass the 'simple_search' variable in as a parameter
- Expand the search using 'simple_search' before calling

--------------------------------------------------------------------------------

Help Browser - Modernise the directory traversal

> The Help Browser is a new feature to bring online help to NeoMutt.
> The code is in the [devel/help](https://github.com/neomutt/neomutt/tree/devel/help) branch.
> 
> It adds a new config variable: `$help_doc_dir` which should point to a copy of the [`test-doc`](https://github.com/neomutt/test-doc) repo.
> Help can be activated by pressing <kbd>Alt-H</kbd>

Task:
- Replace the directory traversal with the `nftw()` function
  It's the modern replacement for the `readdir()` function.

There is some sample code in [this gist](https://gist.github.com/flatcap/f0ee75ee26b30a8cade75c37b55419b5)

--------------------------------------------------------------------------------

Help Browser - Filter the page display

> The Help Browser is a new feature to bring online help to NeoMutt.
> The code is in the [devel/help](https://github.com/neomutt/neomutt/tree/devel/help) branch.
> 
> It adds a new config variable: `$help_doc_dir` which should point to a copy of the [`test-doc`](https://github.com/neomutt/test-doc) repo.
> Help can be activated by pressing <kbd>Alt-H</kbd>

### Part 1 - Filter out YAML

Currently, the raw file is displayed in the pager.
This includes the YAML header, which is no use to the reader.

When we create the temporary file for the pager, don't copy the header block (terminated by an empty line).

### Part 2 - Parse the YAML

The YAML header will contain a lot of information that's useful to NeoMutt.
e.g. Keywords, Author

This will be used to aid the searching and display of the help files.

The data needs to be parsed and stored in `struct Email`s private data.

### Part 3 - Format the Display

Currently, the help files are displayed as plain text.
Some of them contain 'liquid' tags like `{{ page.title }}`

Any `page.*` tags should be looked up using the YAML header data and replaced

Optional extra task -- Implement basic markdown:

- Replace `**text**` with bold text
- Replace `[alt-text](url)` with a number and add a footnote with the url
- Replace `:+1:` with unicode 'thumbs up' (and the others :-)

--------------------------------------------------------------------------------

navigation

1a) help://dir/file[.md] opens correct file

section naming?
	sequential #s1 #s2
	massaged #index-panel (From "Index Panel")
	metadata #index (from YAML)
		that's a lot of metadata
		can we squeeze it into the actual markdown?
line numbers?
	#l123
search?
	#q=QUERY
	#q="SOME THING"
	#q=SOME+THING

command to show page address for the current cursor position
	top of screen?  probably not
	first heading on screen?  better

how is "magic" context-sensitive-help <F2> achieved?
	need metadata passing to every question asked
	and in every menu

help-doc repo has several *list* sections
	parent defines 'list'
	LOTS of tiny files
	possibly with lots of links
	Config items
	Commands
	Functions
	Error messages

