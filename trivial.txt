simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
	cppcheck --verbose --check-config --enable=all --language=c --std=c99 -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/8/include -I/usr/include/qdbm --output-file=c1 .
	ignore doc dir too

fix !USE_NNTP build
	check !USE_SIDEBAR build

drop #1234 refs to trac or gitlab

free functions to take (**ptr)
then deref to Type *t = *ptr;

add printf format checkers to mutt_message, mutt_debug, etc

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

simplify all our:  if (X) free(X)
add doxy param doc: (NULL safe) ?

if (!(a && b))
if (!(a || b))

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

split up multiple assignments
	grep " = [^,;]* = "
	grep " = [^,;]* [!=]= "

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

name clashes with IMAP_CMD *flags*
turn into an enum
	/* IMAP command responses. Used in ImapCommand.state too */
	#define IMAP_CMD_OK       0  /**< `<tag> OK ...` */
	#define IMAP_CMD_BAD      -1 /**< `<tag> BAD ...` */
	#define IMAP_CMD_NO       -2 /**< `<tag> NO ...` */
	#define IMAP_CMD_CONTINUE 1  /**< `* ...` */
	#define IMAP_CMD_RESPOND  2  /**< `+` */
	#define IMAP_CMD_NEW      3  /**< ImapCommand.state additions */

param names differ
	hcache_bdb_close
	hcache_gdbm_close
	hcache_kyotocabinet_close
	hcache_lmdb_close
	hcache_qdbm_close
	hcache_tokyocabinet_close

convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

no () around ternary condition
	check for others
	check uncrustify behaviour

config system
	can it return warnings?
	it doesn't

archive and close old PRs

refactor
	#ifdef USE_INOTIFY
	          if ((tmp.ch != -2) || SigWinch || MonitorFilesChanged)
	#else
	          if ((tmp.ch != -2) || SigWinch)
	#endif
	            goto gotkey;
to
	          if ((tmp.ch != -2) || SigWinch)
	            goto gotkey;
	#ifdef USE_INOTIFY
	          if (MonitorFilesChanged)
	            goto gotkey;
	#else

buffer_init() vs = { 0 }?

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

variables, urgh! sendlib.c
	mutt_lookup_mime_type() int szf, sze, cur_sze;

mutt_parse_hook()
  	local var `ptr`

flags typedef
	/* flag to mutt_pattern_comp() */
	#define MUTT_FULL_MSG           (1<<0)  ///< enable body and header matching
	#define MUTT_PATTERN_DYNAMIC    (1<<1)  ///< enable runtime date range evaluation

change param from ctx to gl?
	static int parse_grouplist(struct GroupList *ctx, struct Buffer *buf,

boolify
	mutt_change_flag(bf)

boolify Buffer
	or eliminate it
	int destroy;  /**< destroy 'data' when done? */

typo
	* struct GroupNode - A node in a GroupNode
	* struct GroupNode - A node in a GroupList
	  change 'node' to element? âˆ€

rename params
	from fp_ to fd_ (drop suffix)
	* smime_invoke - Run an SMIME command
	* @param[in]  fp_smime_infd     stdin  for the command, or -1 (OPTIONAL)
	* @param[in]  fp_smime_outfd    stdout for the command, or -1 (OPTIONAL)
	* @param[in]  fp_smime_errfd    stderr for the command, or -1 (OPTIONAL)
	lots on ncrypt/pgpinvoke.c too

deglobalise
	EnvList in mutt/envlist.c
	C_HiddenTags in driver_tags_add()

transform to x[123] in driver_tags_add()
	if (p && ((p == C_HiddenTags) || (*(p - 1) == ',') || (*(p - 1) == ' ')) &&
		((*(p + xsz) == '\0') || (*(p + xsz) == ',') || (*(p + xsz) == ' ')))
	check for others
	static void decode_one(char *dest, char *src)
	static int qp_decode_triple(char *s, char *d)
	static bool is_mmnoask(const char *buf)
	void rfc2231_decode_parameters(struct ParameterList *p)
	static int imap_tags_edit(struct Mailbox *m, const char *tags, char *buf, size_t buflen)
	void imap_cachepath(char delim, const char *mailbox, char *dest, size_t dlen)
	bool mutt_date_is_day_name(const char *s)
	void mutt_edit_headers(const char *editor, const char *body, struct Email *msg,
	void mutt_buffer_expand_path_regex(struct Buffer *buf, bool regex)
	int mutt_extract_token(struct Buffer *dest, struct Buffer *tok, TokenFlags flags)
	static const char *parse_dn_part(struct DnArray *array, const char *str)
	static void fix_uid(char *uid)
	static void apply_exclude_tags(notmuch_query_t *query)
	static int update_tags(notmuch_message_t *msg, const char *tags)
	static int update_email_flags(struct Mailbox *m, struct Email *e, const char *tags)
	static int fill_buffer(FILE *fp, LOFF_T *last_pos, LOFF_T offset, unsigned char **buf,
	struct PatternHead *mutt_pattern_comp(/* const */ char *s, int flags, struct Buffer *err)
	void mutt_check_simple(struct Buffer *buf, const char *simple)
	SecurityFlags mutt_parse_crypt_hdr(const char *p, bool set_empty_signas, SecurityFlags crypt_app)
	static int print_val(FILE *fp, const char *pfx, const char *value,
	static char *unfold_header(char *s)

EXTRA_CFLAGS+=("-Wformat-truncation=2");
	bump buffer sizes

tidy test/*.c includes (eliminate blank lines)

rename mailbox functions to mutt_mailbox_*

