simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
	cppcheck --verbose --check-config --enable=all --language=c --std=c99 -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/8/include -I/usr/include/qdbm --output-file=c1 .
	ignore doc dir too

fix !USE_NNTP build
	check !USE_SIDEBAR build

drop #1234 refs to trac or gitlab

free functions to take (**ptr)
then deref to Type *t = *ptr;

add printf format checkers to mutt_message, mutt_debug, etc

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

simplify all our:  if (X) free(X)
add doxy param doc: (NULL safe) ?

if (!(a && b))
if (!(a || b))

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

split up multiple assignments
	grep " = [^,;]* = "
	grep " = [^,;]* [!=]= "

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

name clashes with IMAP_CMD *flags*
turn into an enum
	/* IMAP command responses. Used in ImapCommand.state too */
	#define IMAP_CMD_OK       0  /**< `<tag> OK ...` */
	#define IMAP_CMD_BAD      -1 /**< `<tag> BAD ...` */
	#define IMAP_CMD_NO       -2 /**< `<tag> NO ...` */
	#define IMAP_CMD_CONTINUE 1  /**< `* ...` */
	#define IMAP_CMD_RESPOND  2  /**< `+` */
	#define IMAP_CMD_NEW      3  /**< ImapCommand.state additions */

param names differ
	hcache_bdb_close
	hcache_gdbm_close
	hcache_kyotocabinet_close
	hcache_lmdb_close
	hcache_qdbm_close
	hcache_tokyocabinet_close

convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

config system
	can it return warnings?
	it doesn't

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

variables, urgh! sendlib.c
	mutt_lookup_mime_type() int szf, sze, cur_sze;

mutt_parse_hook()
  	local var `ptr`

flags typedef
	/* flag to mutt_pattern_comp() */
	#define MUTT_FULL_MSG           (1<<0)  ///< enable body and header matching
	#define MUTT_PATTERN_DYNAMIC    (1<<1)  ///< enable runtime date range evaluation

boolify Buffer
	int destroy;  /**< destroy 'data' when done? */
	or eliminate it

deglobalise
	EnvList in mutt/envlist.c
	C_HiddenTags in driver_tags_add()

string fn to pretty print \t, \r, \n for tests
	handle NULL, quote string

mutt_parse_rc_line(buf, struct Buffer *token, struct Buffer *err)
	'token' is a tmp buffer -> 'tmp'

rename
	mutt_mailbox_X to mailbox_X
	mutt_email_X to email_X

struct Mailbox *mutt_mailbox_find_desc(const char *desc)
	if (np->mailbox->desc && (mutt_str_strcmp(np->mailbox->desc, desc) == 0))
	(np->mailbox->desc) test not nec

boolify
	char *imap_next_word(char *s)
		int quoted = 0;

ParameterList *p -> pl

free adata, mdata, edata before deconstruction of object

