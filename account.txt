Context - paths, counts
Header[] list -> Env, Body, etc
Incoming -> Buffy[] (paths, counts)
Buffy 1/mailbox
no concept of account
Incoming becomes Account list
Account: imap server, maildir, notmuch, nntp?
account list: imap1, imap2, notmuch
Account named
who owns the context?
where is the config attached?

Account1
	mailbox[] (nested?)
Account2
	mailboxes
Account3
	mailboxes

62 functions use the context
22 functions use incoming

Context
Connection
Account
Mailbox
ConfigSet

Each host needs private data

NeoMutt - Config/globals
	Account (default)
	Account (specific)
		imap, pop, maildir, notmuch, etc
		Mailboxes (ref counted)
			Emails (ref counted) (Header, env, body, etc)

Account data private
	mxops

Where do patterns, limits, tagging live?
	On context (a mailbox *view*?)

Who uses Context, when a Account/Mailbox would do?

Context is a *view* of a mailbox
	who owns the views?

Mailbox should own headers, etc
	(id|subj|label) hashes

View has thread, tree/sorting data
Who owns Accounts?
	global to start with
	AccIncoming

Account
	IMAP 1 server/port/user combo
	POP 1 server/port/user combo
	Maildir user configurable set of folders (mailboxes)
	NNTP 1 server/port/user combo
	Notmuch 1 notmuch database

data, free_cb() + some fields common to all, name
Where do unsubscribed folders live?
not all Account's mailboxes are visible (subscribed/in sidebar)
Acc needs inherited config info -> separate object?
Config/Account -> Local Config
unaccount - closes connection, mailboxes, etc

Auto Accounts - Imap, pop, notmuch, nntp
how does 'account' command fit in?
mailboxes -> current 'account' NO -> default, YES use it
none -> 1 Account  incoming underneath
full auto -> find_ac(folder) -> folder not enough
	need user, host, port
account-ish config have user -> imap_user, what if they set A:imap_user?
account/set folder spoolfile, postponed, trash, record
use status bar to show their values, NO, not dynamic
need changed-account notification (account-hook) -> redraw
examples in 4 languages to highlight folder names (1 CJK)

NeoMutt object
	Config
	Connections
	Context
		Threads
	AccountList
		Account
			MailboxList
				EmailList
					Env, Body...

Mailboxes M
ask MXAPI for type of M
search As for owner?
or use A from config (if compatible)
or create new A (uniq name)
Add M to A

How does A test for M's membership?
*same* type (magic), $folder [user,host,port]
	login_cmp()
or mx_cmp() -- let *it* canonicalise $folder and compare login

Compare needs canon mailbox: have $folder, mailbox
path_canon($folder, mailbox) -> canon_mailbox
	NO needs login
pretty_path(A, ...) what's needed?
URL syntax:
	account://NAME/rel-path
or
	mailbox://ANAME/rel-path
or canon
	imaps://user@host:port/rel-path
abbreviate to:
	a:// or m://

Account NAME
set folder, imap user (pass)
mailboxes

folder could be '/', or empty or full path
X_{user,pass,login} -> {user,pass,login}
config name clash?
NO folder needs to be full else don't know which type the mailbox is

API mx_check_empty(path) -> bool - local use only
	or just open it?
API has_new_mail(path) - need to identify it first

âˆ€ mailboxes - find by path, is notmuch, realpath, complex
	test empty, insert, remove, free

A is typed if all children are the same type, e.g. Notmuch

change functions to take a MailboxList (rather than a mailbox)
	UI creates list of one (for single selections)
	or a multiple for tagged
	thus centrlising tagging logic
	MailboxList or HeaderList

Header*View* is_tagged, etc can't be List
	needs to be sortable
	can we have *both*, Incoming and AccountList?
	How do I move Context inners to Mailbox?

Mailbox set, find -> obj + type
set trash = "x://path"
later resolve_mailbox($trash) -> lookup
find it, update ptr.  !found -> get type
Account -> Mailbox -> Email
path, (type?), Mailbox?

allow utf-8 account names?
	only forbid ':' scope separator
	store as punycode?
	store as b64-encoded?
	something to allow all characters

ac_get_str(A, IC_X) -> ptr to var
	what if someone changes it? crash!

have a magic Account for temporary mbox files?

when opening a folder from, what path string do we get?
	sidebar - full path
	browser - full path
	typed in - relative to current folder/account

C)ontext, A)ccount, M)ailbox, H)eader, T)hread

Move headers from C to M
	H array, ref-counted

C has Thread hashes (belong on M?)

Move C hdrs, but not v2r (that's *our* array)

First separate H from T?
	could we leave T in H to start?

Does the H need to know:
	a) it's in a T?
	b) which T it's in
	H Header no, UH User-Header YES

Does the UI wnat to work with UH which has T info, tagging, etc?

HV HeaderView
	C has HV[]
T is tree of HV (ptrs to H)
C needs to become MV (MailboxView)

Index, Pager wrt H
Who owns C, pass it down through functions

29 uses of Incoming
734 uses (82 functions using) Context

N -> AL -> NL -> EL (HEB, etc)

V)iew
L)ist

Index (MV), Pager (EV), Sidebar(AV) - viewers

MV has M, EL (subset of M's)
EL node (tagged, deleted, etc), sort
EV has E, cahced text, colour info, view info
AV has AL (subset of N's) current A, M, sort info

base object for all has
	type
	refcount
	bool deleted (or similar)

sidebar
	AV - $acc_view, $sb_sort
	MV new-only, sort
	SB maintains: highlight/selection, window view

index
	MV one mailbox
	EV tagging, limit, sort, threading, current selection

Pager
	EV one email - local (per email settings)

Index fmt uses I's MV, EV?
Status bar uses I's MV info
Pager bar needs I's MV info for (email x of y)
	needs P's EV for subject, %age through email

mx_open() open and attach to (create if nec.) account
	NO already done
config -> account tree
open M, not ready, open A, open M
Open A notify, e.g. sidebar A(red) -> A(green)
Open M notify sb -> active M, Index clears
Get Es notify -> Index populates
	that's probably the index doing the work
Open E notify whom?

Can the status bar *not* exist - just run on notifications. NO!

A name
mailboxes x y z
set folder
set imap_user
set imap_pass
set spoolfile
set postponed
set trash
set imap_list_subscribed

need default A type unknown, unnamed

'account' named A, type unknown [CREATE-A] (to AL)
set folder -> local config (imap_user, pass, etc, too)
mailboxes x y z relative to local $folder [ADD-M] to (to A)
	=> type -> IMAP
if mailboxes other:// type add to default (one type / A)

M has ptr to A (needed for cfg, etc)
chdir to PATH -> as As for a match
	A.match against local $folder NO match -> fail
	search through existing M [ABCDE] subscribed
or
	create new M [G]
or
	browser open / sidebar open

M: last update: never
A: state closed

mx_mbox_open(M) -> imap_acc_open (M -> A)
imap_acc_open(A) -> socket, conn stuff
	get mailboxes? if so, update statuses of Ms
	M: UNPOP, POPULATED, NOT_EXIST - notify
open(M) -> imap_mbox_open(M)
	if (!exist) error
	if (POPULATED) done
UNPOPULATED
	get email IDs; notify (may be in hcache)

"open" is too wide: need
	list new
	list all
	get headers (list)
	get struct (list)
	get body (list)

get headers -> EL
	each with state
	HEADER -> notify
	get in reverse order (newest first)?

notifications on ...?
	N, A, M, E with recursive flag

Index watches M+ (recursive)
Pager watches E
Sidebar N+

Events NEW, CHANGED, DELETED

Do objects need an IWatchable interface?
	tough for the N object (not refcounted)

